{
	"id": "c1253c88c5f2b868029c220af2200837",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/StakingContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\n\ncontract StakingContract is Ownable, ReentrancyGuard {\n    using SafeMath for uint256;\n\n    IERC20 public immutable governanceToken;\n\n    mapping(address => uint256) public stakedBalance;\n    uint public totalStaked;\n\n    //Manage Unstaking Request\n    struct UnstakeInfo{\n        uint256 amount;\n        uint256 unlockTime;\n    }\n    // Tracks Unstaking Requests\n    mapping(address => UnstakeInfo) public unstakingRequest;\n\n    uint256 public constant UNSTAKE_PERIOD = 7 days;\n\n    // Events\n    event Staked(address indexed user, uint256 amount);\n    event UnstakeInitiated(address indexed user, uint256 amount, uint256 unlockTime);\n    event Withdraw(address indexed user, uint256 amount);\n\n    /** \n     * @dev Constructor sets the address of the Governance Token\n     * @param _tokenAddress The address to deploy GovernanceToken contract\n     * @param _initialOwner The address that will own the contract\n    */\n    constructor(address _tokenAddress, address _initialOwner) Ownable(_initialOwner) {\n        require(_tokenAddress != address(0), \"The Token address cannot be zero\");\n        governanceToken = IERC20(_tokenAddress);\n    }\n\n    // Staking\n\n    /**\n     * @notice Stakes a specified amount of GovernanceToken.\n     * @dev User must first approve this contract to spend their tokens.\n     * @param _amount The amount of tokens to stake.\n     */\n    function stake(uint256 _amount) external nonReentrant {\n        require(_amount > 0, \"Cannot stake zero Tokens\");\n        require(governanceToken.balanceOf(msg.sender) >= _amount, \"Insufficient Balance\");\n        \n        // Transfer Tokens from user to the contract\n        bool success = governanceToken.transferFrom(msg.sender, address(this), _amount);\n        require(success, \"Transfer Failed\");\n\n        // Updating Staking Records\n        stakedBalance[msg.sender] = stakedBalance[msg.sender].add(_amount);\n        totalStaked = totalStaked.add(_amount);\n\n        emit Staked(msg.sender, _amount);\n    }\n\n    // UnStaking\n\n    /**\n     * @notice Initiates the unstaking process for a specified amount.\n     * @dev Tokens remain locked for UNSTAKE_PERIOD. Only one unstake request active at a time per user.\n     * @param _amount The amount of tokens to start unstaking.\n     */\n    function initiateUnstaking(uint256 _amount) external nonReentrant {\n        require(_amount > 0, \"Cannot Unstake zero tokens\");\n        require(stakedBalance[msg.sender] >= _amount, \"Insufficient staked balance\");\n        require(unstakingRequest[msg.sender].amount == 0, \"Unstake Already in Process\");\n\n        // Updating Staking Records\n        stakedBalance[msg.sender] = stakedBalance[msg.sender].sub(_amount);\n        totalStaked = totalStaked.sub(_amount);\n\n        // Recoring Unstaking\n        uint256 unlockTime = block.timestamp + UNSTAKE_PERIOD;\n        unstakingRequest[msg.sender] = UnstakeInfo({\n            amount: _amount,\n            unlockTime: unlockTime\n        });\n\n        emit UnstakeInitiated(msg.sender, _amount, unlockTime);\n    }\n\n    /**\n     * @notice Withdraws tokens after the unstaking period has passed.\n     * @dev Can only be called after initiateUnstake and waiting UNSTAKE_PERIOD.\n     */\n    function withdraw() external nonReentrant {\n        UnstakeInfo storage request = unstakingRequest[msg.sender];\n        require(request.amount > 0, \"No Unstake Request Found\");\n        require(block.timestamp >= request.unlockTime, \"Unstake period not over\");\n\n        uint256 amountToWithdraw = request.amount;\n\n        // Reset the unstake request before transfer\n        request.amount = 0;\n        request.unlockTime = 0;\n\n        // Transfer\n        bool success = governanceToken.transfer(msg.sender, amountToWithdraw);\n        require(success, \"Token Transfer Failed during UnStaking Process\");\n\n        emit Withdraw(msg.sender, amountToWithdraw);\n\n    }\n\n\n    // View Functions\n\n    /**\n     * @notice Gets the staked balance of an account, which represents voting power.\n     * @param _account The address to query.\n     * @return The amount of tokens staked by the account.\n     */\n    function getVotingPower(address _account) public view returns(uint256) {\n        return stakedBalance[_account];\n    }\n\n    /**\n    * @notice Gets details of a pending unstake request for an account.\n    * @param _account The address to query.\n    * @return amount The amount pending withdrawal.\n    * @return unlockTime The timestamp when withdrawal is possible.\n    */\n    function getUnstakedRequest(address _account) external view returns(uint256 amount, uint256 unlockTime) {\n        UnstakeInfo storage request = unstakingRequest[_account];\n        return (request.amount, request.unlockTime);\n    } \n\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xC4 MSTORE8 PUSH29 0x112E7DFD362FBBC3109DCD7EFAD1E9F705B895D9C42D83F61DD9CEDB64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "482:6210:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xC4 MSTORE8 PUSH29 0x112E7DFD362FBBC3109DCD7EFAD1E9F705B895D9C42D83F61DD9CEDB64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "482:6210:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/StakingContract.sol": {
				"StakingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"name": "UnstakeInitiated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UNSTAKE_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getUnstakedRequest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getVotingPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "initiateUnstaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "unstakingRequest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Constructor sets the address of the Governance Token",
								"params": {
									"_initialOwner": "The address that will own the contract",
									"_tokenAddress": "The address to deploy GovernanceToken contract"
								}
							},
							"getUnstakedRequest(address)": {
								"params": {
									"_account": "The address to query."
								},
								"returns": {
									"amount": "The amount pending withdrawal.",
									"unlockTime": "The timestamp when withdrawal is possible."
								}
							},
							"getVotingPower(address)": {
								"params": {
									"_account": "The address to query."
								},
								"returns": {
									"_0": "The amount of tokens staked by the account."
								}
							},
							"initiateUnstaking(uint256)": {
								"details": "Tokens remain locked for UNSTAKE_PERIOD. Only one unstake request active at a time per user.",
								"params": {
									"_amount": "The amount of tokens to start unstaking."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"stake(uint256)": {
								"details": "User must first approve this contract to spend their tokens.",
								"params": {
									"_amount": "The amount of tokens to stake."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw()": {
								"details": "Can only be called after initiateUnstake and waiting UNSTAKE_PERIOD."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StakingContract.sol\":291:4983  contract StakingContract is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/StakingContract.sol\":1213:1432  constructor(address _tokenAddress, address _initialOwner) Ownable(_initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/StakingContract.sol\":1279:1292  _initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingContract.sol\":1337:1338  0 */\n  0x00\n    /* \"contracts/StakingContract.sol\":1312:1339  _tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/StakingContract.sol\":1312:1325  _tokenAddress */\n  dup3\n    /* \"contracts/StakingContract.sol\":1312:1339  _tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/StakingContract.sol\":1304:1376  require(_tokenAddress != address(0), \"The Token address cannot be zero\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"contracts/StakingContract.sol\":1411:1424  _tokenAddress */\n  dup2\n    /* \"contracts/StakingContract.sol\":1386:1425  governanceToken = IERC20(_tokenAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/StakingContract.sol\":1213:1432  constructor(address _tokenAddress, address _initialOwner) Ownable(_initialOwner) {... */\n  pop\n  pop\n    /* \"contracts/StakingContract.sol\":291:4983  contract StakingContract is Ownable, ReentrancyGuard {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_37\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_39\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_40:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_42\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_45\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":949:1068   */\ntag_44:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_46\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_26\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_47\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_26\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_27:\n    /* \"#utility.yul\":1445:1469   */\n  tag_49\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_24\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_10:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_51\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_27\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1710:1879   */\ntag_28:\n    /* \"#utility.yul\":1794:1805   */\n  0x00\n    /* \"#utility.yul\":1828:1834   */\n  dup3\n    /* \"#utility.yul\":1823:1826   */\n  dup3\n    /* \"#utility.yul\":1816:1835   */\n  mstore\n    /* \"#utility.yul\":1868:1872   */\n  0x20\n    /* \"#utility.yul\":1863:1866   */\n  dup3\n    /* \"#utility.yul\":1859:1873   */\n  add\n    /* \"#utility.yul\":1844:1873   */\n  swap1\n  pop\n    /* \"#utility.yul\":1710:1879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1885:2067   */\ntag_29:\n    /* \"#utility.yul\":2025:2059   */\n  0x54686520546f6b656e20616464726573732063616e6e6f74206265207a65726f\n    /* \"#utility.yul\":2021:2022   */\n  0x00\n    /* \"#utility.yul\":2013:2019   */\n  dup3\n    /* \"#utility.yul\":2009:2023   */\n  add\n    /* \"#utility.yul\":2002:2060   */\n  mstore\n    /* \"#utility.yul\":1885:2067   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2073:2439   */\ntag_30:\n    /* \"#utility.yul\":2215:2218   */\n  0x00\n    /* \"#utility.yul\":2236:2303   */\n  tag_55\n    /* \"#utility.yul\":2300:2302   */\n  0x20\n    /* \"#utility.yul\":2295:2298   */\n  dup4\n    /* \"#utility.yul\":2236:2303   */\n  tag_28\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2229:2303   */\n  swap2\n  pop\n    /* \"#utility.yul\":2312:2405   */\n  tag_56\n    /* \"#utility.yul\":2401:2404   */\n  dup3\n    /* \"#utility.yul\":2312:2405   */\n  tag_29\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2430:2432   */\n  0x20\n    /* \"#utility.yul\":2425:2428   */\n  dup3\n    /* \"#utility.yul\":2421:2433   */\n  add\n    /* \"#utility.yul\":2414:2433   */\n  swap1\n  pop\n    /* \"#utility.yul\":2073:2439   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2445:2864   */\ntag_17:\n    /* \"#utility.yul\":2611:2615   */\n  0x00\n    /* \"#utility.yul\":2649:2651   */\n  0x20\n    /* \"#utility.yul\":2638:2647   */\n  dup3\n    /* \"#utility.yul\":2634:2652   */\n  add\n    /* \"#utility.yul\":2626:2652   */\n  swap1\n  pop\n    /* \"#utility.yul\":2698:2707   */\n  dup2\n    /* \"#utility.yul\":2692:2696   */\n  dup2\n    /* \"#utility.yul\":2688:2708   */\n  sub\n    /* \"#utility.yul\":2684:2685   */\n  0x00\n    /* \"#utility.yul\":2673:2682   */\n  dup4\n    /* \"#utility.yul\":2669:2686   */\n  add\n    /* \"#utility.yul\":2662:2709   */\n  mstore\n    /* \"#utility.yul\":2726:2857   */\n  tag_58\n    /* \"#utility.yul\":2852:2856   */\n  dup2\n    /* \"#utility.yul\":2726:2857   */\n  tag_30\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2718:2857   */\n  swap1\n  pop\n    /* \"#utility.yul\":2445:2864   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/StakingContract.sol\":291:4983  contract StakingContract is Ownable, ReentrancyGuard {... */\ntag_18:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x42fa20e8c2fc174121a60bb5704cfd8579fc4a2698f9ae487d1310659094676e\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/StakingContract.sol\":291:4983  contract StakingContract is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa694fc3a\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xbb4d4436\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf96dae0a\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x817b1cd2\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa0873111\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x18fb4f32\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3b64916e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x60217267\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x79b57862\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/StakingContract.sol\":2546:3303  function initiateUnstaking(uint256 _amount) external nonReentrant {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/StakingContract.sol\":4749:4979  function getUnstakedRequest(address _account) external view returns(uint256 amount, uint256 unlockTime) {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingContract.sol\":3477:4139  function withdraw() external nonReentrant {... */\n    tag_5:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/StakingContract.sol\":429:477  mapping(address => uint256) public stakedBalance */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/StakingContract.sol\":721:768  uint256 public constant UNSTAKE_PERIOD = 7 days */\n    tag_8:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingContract.sol\":483:506  uint public totalStaked */\n    tag_9:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingContract.sol\":659:714  mapping(address => UnstakeInfo) public unstakingRequest */\n    tag_11:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_50\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingContract.sol\":1657:2267  function stake(uint256 _amount) external nonReentrant {... */\n    tag_12:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/StakingContract.sol\":4374:4492  function getVotingPower(address _account) public view returns(uint256) {... */\n    tag_13:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/StakingContract.sol\":383:422  IERC20 public immutable governanceToken */\n    tag_15:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingContract.sol\":2546:3303  function initiateUnstaking(uint256 _amount) external nonReentrant {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_66\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_67\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_66:\n        /* \"contracts/StakingContract.sol\":2640:2641  0 */\n      0x00\n        /* \"contracts/StakingContract.sol\":2630:2637  _amount */\n      dup2\n        /* \"contracts/StakingContract.sol\":2630:2641  _amount > 0 */\n      gt\n        /* \"contracts/StakingContract.sol\":2622:2672  require(_amount > 0, \"Cannot Unstake zero tokens\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"contracts/StakingContract.sol\":2719:2726  _amount */\n      dup1\n        /* \"contracts/StakingContract.sol\":2690:2703  stakedBalance */\n      0x02\n        /* \"contracts/StakingContract.sol\":2690:2715  stakedBalance[msg.sender] */\n      0x00\n        /* \"contracts/StakingContract.sol\":2704:2714  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":2690:2715  stakedBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingContract.sol\":2690:2726  stakedBalance[msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"contracts/StakingContract.sol\":2682:2758  require(stakedBalance[msg.sender] >= _amount, \"Insufficient staked balance\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"contracts/StakingContract.sol\":2815:2816  0 */\n      0x00\n        /* \"contracts/StakingContract.sol\":2776:2792  unstakingRequest */\n      0x04\n        /* \"contracts/StakingContract.sol\":2776:2804  unstakingRequest[msg.sender] */\n      0x00\n        /* \"contracts/StakingContract.sol\":2793:2803  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":2776:2804  unstakingRequest[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingContract.sol\":2776:2811  unstakingRequest[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingContract.sol\":2776:2816  unstakingRequest[msg.sender].amount == 0 */\n      eq\n        /* \"contracts/StakingContract.sol\":2768:2847  require(unstakingRequest[msg.sender].amount == 0, \"Unstake Already in Process\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"contracts/StakingContract.sol\":2922:2960  stakedBalance[msg.sender].sub(_amount) */\n      tag_78\n        /* \"contracts/StakingContract.sol\":2952:2959  _amount */\n      dup2\n        /* \"contracts/StakingContract.sol\":2922:2935  stakedBalance */\n      0x02\n        /* \"contracts/StakingContract.sol\":2922:2947  stakedBalance[msg.sender] */\n      0x00\n        /* \"contracts/StakingContract.sol\":2936:2946  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":2922:2947  stakedBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingContract.sol\":2922:2951  stakedBalance[msg.sender].sub */\n      tag_79\n      swap1\n        /* \"contracts/StakingContract.sol\":2922:2960  stakedBalance[msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_78:\n        /* \"contracts/StakingContract.sol\":2894:2907  stakedBalance */\n      0x02\n        /* \"contracts/StakingContract.sol\":2894:2919  stakedBalance[msg.sender] */\n      0x00\n        /* \"contracts/StakingContract.sol\":2908:2918  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":2894:2919  stakedBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingContract.sol\":2894:2960  stakedBalance[msg.sender] = stakedBalance[msg.sender].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingContract.sol\":2984:3008  totalStaked.sub(_amount) */\n      tag_80\n        /* \"contracts/StakingContract.sol\":3000:3007  _amount */\n      dup2\n        /* \"contracts/StakingContract.sol\":2984:2995  totalStaked */\n      sload(0x03)\n        /* \"contracts/StakingContract.sol\":2984:2999  totalStaked.sub */\n      tag_79\n      swap1\n        /* \"contracts/StakingContract.sol\":2984:3008  totalStaked.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_80:\n        /* \"contracts/StakingContract.sol\":2970:2981  totalStaked */\n      0x03\n        /* \"contracts/StakingContract.sol\":2970:3008  totalStaked = totalStaked.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingContract.sol\":3049:3067  uint256 unlockTime */\n      0x00\n        /* \"contracts/StakingContract.sol\":762:768  7 days */\n      0x093a80\n        /* \"contracts/StakingContract.sol\":3070:3085  block.timestamp */\n      timestamp\n        /* \"contracts/StakingContract.sol\":3070:3102  block.timestamp + UNSTAKE_PERIOD */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"contracts/StakingContract.sol\":3049:3102  uint256 unlockTime = block.timestamp + UNSTAKE_PERIOD */\n      swap1\n      pop\n        /* \"contracts/StakingContract.sol\":3143:3231  UnstakeInfo({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/StakingContract.sol\":3177:3184  _amount */\n      dup4\n        /* \"contracts/StakingContract.sol\":3143:3231  UnstakeInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/StakingContract.sol\":3210:3220  unlockTime */\n      dup3\n        /* \"contracts/StakingContract.sol\":3143:3231  UnstakeInfo({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/StakingContract.sol\":3112:3128  unstakingRequest */\n      0x04\n        /* \"contracts/StakingContract.sol\":3112:3140  unstakingRequest[msg.sender] */\n      0x00\n        /* \"contracts/StakingContract.sol\":3129:3139  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":3112:3140  unstakingRequest[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingContract.sol\":3112:3231  unstakingRequest[msg.sender] = UnstakeInfo({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/StakingContract.sol\":3264:3274  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":3247:3296  UnstakeInitiated(msg.sender, _amount, unlockTime) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9cee5eacd317086e5050733a5dad16ef5aaec185de792371a9625bfee2a3213b\n        /* \"contracts/StakingContract.sol\":3276:3283  _amount */\n      dup4\n        /* \"contracts/StakingContract.sol\":3285:3295  unlockTime */\n      dup4\n        /* \"contracts/StakingContract.sol\":3247:3296  UnstakeInitiated(msg.sender, _amount, unlockTime) */\n      mload(0x40)\n      tag_83\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingContract.sol\":2612:3303  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_84\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_85\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_84:\n        /* \"contracts/StakingContract.sol\":2546:3303  function initiateUnstaking(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingContract.sol\":4749:4979  function getUnstakedRequest(address _account) external view returns(uint256 amount, uint256 unlockTime) {... */\n    tag_25:\n        /* \"contracts/StakingContract.sol\":4817:4831  uint256 amount */\n      0x00\n        /* \"contracts/StakingContract.sol\":4833:4851  uint256 unlockTime */\n      dup1\n        /* \"contracts/StakingContract.sol\":4863:4890  UnstakeInfo storage request */\n      0x00\n        /* \"contracts/StakingContract.sol\":4893:4909  unstakingRequest */\n      0x04\n        /* \"contracts/StakingContract.sol\":4893:4919  unstakingRequest[_account] */\n      0x00\n        /* \"contracts/StakingContract.sol\":4910:4918  _account */\n      dup6\n        /* \"contracts/StakingContract.sol\":4893:4919  unstakingRequest[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingContract.sol\":4863:4919  UnstakeInfo storage request = unstakingRequest[_account] */\n      swap1\n      pop\n        /* \"contracts/StakingContract.sol\":4937:4944  request */\n      dup1\n        /* \"contracts/StakingContract.sol\":4937:4951  request.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingContract.sol\":4953:4960  request */\n      dup2\n        /* \"contracts/StakingContract.sol\":4953:4971  request.unlockTime */\n      0x01\n      add\n      sload\n        /* \"contracts/StakingContract.sol\":4929:4972  return (request.amount, request.unlockTime) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/StakingContract.sol\":4749:4979  function getUnstakedRequest(address _account) external view returns(uint256 amount, uint256 unlockTime) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/StakingContract.sol\":3477:4139  function withdraw() external nonReentrant {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_88\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_67\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_88:\n        /* \"contracts/StakingContract.sol\":3529:3556  UnstakeInfo storage request */\n      0x00\n        /* \"contracts/StakingContract.sol\":3559:3575  unstakingRequest */\n      0x04\n        /* \"contracts/StakingContract.sol\":3559:3587  unstakingRequest[msg.sender] */\n      0x00\n        /* \"contracts/StakingContract.sol\":3576:3586  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":3559:3587  unstakingRequest[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingContract.sol\":3529:3587  UnstakeInfo storage request = unstakingRequest[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/StakingContract.sol\":3622:3623  0 */\n      0x00\n        /* \"contracts/StakingContract.sol\":3605:3612  request */\n      dup2\n        /* \"contracts/StakingContract.sol\":3605:3619  request.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingContract.sol\":3605:3623  request.amount > 0 */\n      gt\n        /* \"contracts/StakingContract.sol\":3597:3652  require(request.amount > 0, \"No Unstake Request Found\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"contracts/StakingContract.sol\":3689:3696  request */\n      dup1\n        /* \"contracts/StakingContract.sol\":3689:3707  request.unlockTime */\n      0x01\n      add\n      sload\n        /* \"contracts/StakingContract.sol\":3670:3685  block.timestamp */\n      timestamp\n        /* \"contracts/StakingContract.sol\":3670:3707  block.timestamp >= request.unlockTime */\n      lt\n      iszero\n        /* \"contracts/StakingContract.sol\":3662:3735  require(block.timestamp >= request.unlockTime, \"Unstake period not over\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"contracts/StakingContract.sol\":3746:3770  uint256 amountToWithdraw */\n      0x00\n        /* \"contracts/StakingContract.sol\":3773:3780  request */\n      dup2\n        /* \"contracts/StakingContract.sol\":3773:3787  request.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingContract.sol\":3746:3787  uint256 amountToWithdraw = request.amount */\n      swap1\n      pop\n        /* \"contracts/StakingContract.sol\":3868:3869  0 */\n      0x00\n        /* \"contracts/StakingContract.sol\":3851:3858  request */\n      dup3\n        /* \"contracts/StakingContract.sol\":3851:3865  request.amount */\n      0x00\n      add\n        /* \"contracts/StakingContract.sol\":3851:3869  request.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingContract.sol\":3900:3901  0 */\n      0x00\n        /* \"contracts/StakingContract.sol\":3879:3886  request */\n      dup3\n        /* \"contracts/StakingContract.sol\":3879:3897  request.unlockTime */\n      0x01\n      add\n        /* \"contracts/StakingContract.sol\":3879:3901  request.unlockTime = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingContract.sol\":3932:3944  bool success */\n      0x00\n        /* \"contracts/StakingContract.sol\":3947:3962  governanceToken */\n      immutable(\"0x42fa20e8c2fc174121a60bb5704cfd8579fc4a2698f9ae487d1310659094676e\")\n        /* \"contracts/StakingContract.sol\":3947:3971  governanceToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/StakingContract.sol\":3972:3982  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":3984:4000  amountToWithdraw */\n      dup5\n        /* \"contracts/StakingContract.sol\":3947:4001  governanceToken.transfer(msg.sender, amountToWithdraw) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"contracts/StakingContract.sol\":3932:4001  bool success = governanceToken.transfer(msg.sender, amountToWithdraw) */\n      swap1\n      pop\n        /* \"contracts/StakingContract.sol\":4019:4026  success */\n      dup1\n        /* \"contracts/StakingContract.sol\":4011:4077  require(success, \"Token Transfer Failed during UnStaking Process\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"contracts/StakingContract.sol\":4102:4112  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":4093:4131  Withdraw(msg.sender, amountToWithdraw) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"contracts/StakingContract.sol\":4114:4130  amountToWithdraw */\n      dup4\n        /* \"contracts/StakingContract.sol\":4093:4131  Withdraw(msg.sender, amountToWithdraw) */\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingContract.sol\":3519:4139  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_106\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_85\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/StakingContract.sol\":3477:4139  function withdraw() external nonReentrant {... */\n      jump\t// out\n        /* \"contracts/StakingContract.sol\":429:477  mapping(address => uint256) public stakedBalance */\n    tag_32:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/StakingContract.sol\":721:768  uint256 public constant UNSTAKE_PERIOD = 7 days */\n    tag_38:\n        /* \"contracts/StakingContract.sol\":762:768  7 days */\n      0x093a80\n        /* \"contracts/StakingContract.sol\":721:768  uint256 public constant UNSTAKE_PERIOD = 7 days */\n      dup2\n      jump\t// out\n        /* \"contracts/StakingContract.sol\":483:506  uint public totalStaked */\n    tag_41:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StakingContract.sol\":659:714  mapping(address => UnstakeInfo) public unstakingRequest */\n    tag_49:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/StakingContract.sol\":1657:2267  function stake(uint256 _amount) external nonReentrant {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_115\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_67\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/StakingContract.sol\":1739:1740  0 */\n      0x00\n        /* \"contracts/StakingContract.sol\":1729:1736  _amount */\n      dup2\n        /* \"contracts/StakingContract.sol\":1729:1740  _amount > 0 */\n      gt\n        /* \"contracts/StakingContract.sol\":1721:1769  require(_amount > 0, \"Cannot stake zero Tokens\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"contracts/StakingContract.sol\":1828:1835  _amount */\n      dup1\n        /* \"contracts/StakingContract.sol\":1787:1802  governanceToken */\n      immutable(\"0x42fa20e8c2fc174121a60bb5704cfd8579fc4a2698f9ae487d1310659094676e\")\n        /* \"contracts/StakingContract.sol\":1787:1812  governanceToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/StakingContract.sol\":1813:1823  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":1787:1824  governanceToken.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_120:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"contracts/StakingContract.sol\":1787:1835  governanceToken.balanceOf(msg.sender) >= _amount */\n      lt\n      iszero\n        /* \"contracts/StakingContract.sol\":1779:1860  require(governanceToken.balanceOf(msg.sender) >= _amount, \"Insufficient Balance\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/StakingContract.sol\":1932:1944  bool success */\n      0x00\n        /* \"contracts/StakingContract.sol\":1947:1962  governanceToken */\n      immutable(\"0x42fa20e8c2fc174121a60bb5704cfd8579fc4a2698f9ae487d1310659094676e\")\n        /* \"contracts/StakingContract.sol\":1947:1975  governanceToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/StakingContract.sol\":1976:1986  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":1996:2000  this */\n      address\n        /* \"contracts/StakingContract.sol\":2003:2010  _amount */\n      dup6\n        /* \"contracts/StakingContract.sol\":1947:2011  governanceToken.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_132:\n        /* \"contracts/StakingContract.sol\":1932:2011  bool success = governanceToken.transferFrom(msg.sender, address(this), _amount) */\n      swap1\n      pop\n        /* \"contracts/StakingContract.sol\":2029:2036  success */\n      dup1\n        /* \"contracts/StakingContract.sol\":2021:2056  require(success, \"Transfer Failed\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/StakingContract.sol\":2131:2169  stakedBalance[msg.sender].add(_amount) */\n      tag_136\n        /* \"contracts/StakingContract.sol\":2161:2168  _amount */\n      dup3\n        /* \"contracts/StakingContract.sol\":2131:2144  stakedBalance */\n      0x02\n        /* \"contracts/StakingContract.sol\":2131:2156  stakedBalance[msg.sender] */\n      0x00\n        /* \"contracts/StakingContract.sol\":2145:2155  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":2131:2156  stakedBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingContract.sol\":2131:2160  stakedBalance[msg.sender].add */\n      tag_137\n      swap1\n        /* \"contracts/StakingContract.sol\":2131:2169  stakedBalance[msg.sender].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"contracts/StakingContract.sol\":2103:2116  stakedBalance */\n      0x02\n        /* \"contracts/StakingContract.sol\":2103:2128  stakedBalance[msg.sender] */\n      0x00\n        /* \"contracts/StakingContract.sol\":2117:2127  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":2103:2128  stakedBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingContract.sol\":2103:2169  stakedBalance[msg.sender] = stakedBalance[msg.sender].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingContract.sol\":2193:2217  totalStaked.add(_amount) */\n      tag_138\n        /* \"contracts/StakingContract.sol\":2209:2216  _amount */\n      dup3\n        /* \"contracts/StakingContract.sol\":2193:2204  totalStaked */\n      sload(0x03)\n        /* \"contracts/StakingContract.sol\":2193:2208  totalStaked.add */\n      tag_137\n      swap1\n        /* \"contracts/StakingContract.sol\":2193:2217  totalStaked.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"contracts/StakingContract.sol\":2179:2190  totalStaked */\n      0x03\n        /* \"contracts/StakingContract.sol\":2179:2217  totalStaked = totalStaked.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingContract.sol\":2240:2250  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":2233:2260  Staked(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/StakingContract.sol\":2252:2259  _amount */\n      dup4\n        /* \"contracts/StakingContract.sol\":2233:2260  Staked(msg.sender, _amount) */\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingContract.sol\":1711:2267  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_140\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_85\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/StakingContract.sol\":1657:2267  function stake(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingContract.sol\":4374:4492  function getVotingPower(address _account) public view returns(uint256) {... */\n    tag_56:\n        /* \"contracts/StakingContract.sol\":4436:4443  uint256 */\n      0x00\n        /* \"contracts/StakingContract.sol\":4462:4475  stakedBalance */\n      0x02\n        /* \"contracts/StakingContract.sol\":4462:4485  stakedBalance[_account] */\n      0x00\n        /* \"contracts/StakingContract.sol\":4476:4484  _account */\n      dup4\n        /* \"contracts/StakingContract.sol\":4462:4485  stakedBalance[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingContract.sol\":4455:4485  return stakedBalance[_account] */\n      swap1\n      pop\n        /* \"contracts/StakingContract.sol\":4374:4492  function getVotingPower(address _account) public view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingContract.sol\":383:422  IERC20 public immutable governanceToken */\n    tag_62:\n      immutable(\"0x42fa20e8c2fc174121a60bb5704cfd8579fc4a2698f9ae487d1310659094676e\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_165\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_168:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_170:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_171:\n        /* \"#utility.yul\":490:514   */\n      tag_216\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_170\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_217:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_172:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_219\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_171\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_20:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_222\n      tag_168\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":766:885   */\n    tag_221:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_223\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_172\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_173:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_174:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_226\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_173\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1381   */\n    tag_175:\n        /* \"#utility.yul\":1332:1356   */\n      tag_228\n        /* \"#utility.yul\":1350:1355   */\n      dup2\n        /* \"#utility.yul\":1332:1356   */\n      tag_174\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1322:1357   */\n      eq\n        /* \"#utility.yul\":1312:1375   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      dup1\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1312:1375   */\n    tag_229:\n        /* \"#utility.yul\":1259:1381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1526   */\n    tag_176:\n        /* \"#utility.yul\":1433:1438   */\n      0x00\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1458:1478   */\n      calldataload\n        /* \"#utility.yul\":1449:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1520   */\n      tag_231\n        /* \"#utility.yul\":1514:1519   */\n      dup2\n        /* \"#utility.yul\":1487:1520   */\n      tag_175\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1387:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1861   */\n    tag_24:\n        /* \"#utility.yul\":1591:1597   */\n      0x00\n        /* \"#utility.yul\":1640:1642   */\n      0x20\n        /* \"#utility.yul\":1628:1637   */\n      dup3\n        /* \"#utility.yul\":1619:1626   */\n      dup5\n        /* \"#utility.yul\":1615:1638   */\n      sub\n        /* \"#utility.yul\":1611:1643   */\n      slt\n        /* \"#utility.yul\":1608:1727   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":1646:1725   */\n      tag_234\n      tag_168\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1608:1727   */\n    tag_233:\n        /* \"#utility.yul\":1766:1767   */\n      0x00\n        /* \"#utility.yul\":1791:1844   */\n      tag_235\n        /* \"#utility.yul\":1836:1843   */\n      dup5\n        /* \"#utility.yul\":1827:1833   */\n      dup3\n        /* \"#utility.yul\":1816:1825   */\n      dup6\n        /* \"#utility.yul\":1812:1834   */\n      add\n        /* \"#utility.yul\":1791:1844   */\n      tag_176\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1781:1844   */\n      swap2\n      pop\n        /* \"#utility.yul\":1737:1854   */\n      pop\n        /* \"#utility.yul\":1532:1861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1867:1985   */\n    tag_177:\n        /* \"#utility.yul\":1954:1978   */\n      tag_237\n        /* \"#utility.yul\":1972:1977   */\n      dup2\n        /* \"#utility.yul\":1954:1978   */\n      tag_170\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1949:1952   */\n      dup3\n        /* \"#utility.yul\":1942:1979   */\n      mstore\n        /* \"#utility.yul\":1867:1985   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1991:2323   */\n    tag_27:\n        /* \"#utility.yul\":2112:2116   */\n      0x00\n        /* \"#utility.yul\":2150:2152   */\n      0x40\n        /* \"#utility.yul\":2139:2148   */\n      dup3\n        /* \"#utility.yul\":2135:2153   */\n      add\n        /* \"#utility.yul\":2127:2153   */\n      swap1\n      pop\n        /* \"#utility.yul\":2163:2234   */\n      tag_239\n        /* \"#utility.yul\":2231:2232   */\n      0x00\n        /* \"#utility.yul\":2220:2229   */\n      dup4\n        /* \"#utility.yul\":2216:2233   */\n      add\n        /* \"#utility.yul\":2207:2213   */\n      dup6\n        /* \"#utility.yul\":2163:2234   */\n      tag_177\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2244:2316   */\n      tag_240\n        /* \"#utility.yul\":2312:2314   */\n      0x20\n        /* \"#utility.yul\":2301:2310   */\n      dup4\n        /* \"#utility.yul\":2297:2315   */\n      add\n        /* \"#utility.yul\":2288:2294   */\n      dup5\n        /* \"#utility.yul\":2244:2316   */\n      tag_177\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1991:2323   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2329:2551   */\n    tag_34:\n        /* \"#utility.yul\":2422:2426   */\n      0x00\n        /* \"#utility.yul\":2460:2462   */\n      0x20\n        /* \"#utility.yul\":2449:2458   */\n      dup3\n        /* \"#utility.yul\":2445:2463   */\n      add\n        /* \"#utility.yul\":2437:2463   */\n      swap1\n      pop\n        /* \"#utility.yul\":2473:2544   */\n      tag_242\n        /* \"#utility.yul\":2541:2542   */\n      0x00\n        /* \"#utility.yul\":2530:2539   */\n      dup4\n        /* \"#utility.yul\":2526:2543   */\n      add\n        /* \"#utility.yul\":2517:2523   */\n      dup5\n        /* \"#utility.yul\":2473:2544   */\n      tag_177\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2329:2551   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2557:2675   */\n    tag_178:\n        /* \"#utility.yul\":2644:2668   */\n      tag_244\n        /* \"#utility.yul\":2662:2667   */\n      dup2\n        /* \"#utility.yul\":2644:2668   */\n      tag_174\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2639:2642   */\n      dup3\n        /* \"#utility.yul\":2632:2669   */\n      mstore\n        /* \"#utility.yul\":2557:2675   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2681:2903   */\n    tag_46:\n        /* \"#utility.yul\":2774:2778   */\n      0x00\n        /* \"#utility.yul\":2812:2814   */\n      0x20\n        /* \"#utility.yul\":2801:2810   */\n      dup3\n        /* \"#utility.yul\":2797:2815   */\n      add\n        /* \"#utility.yul\":2789:2815   */\n      swap1\n      pop\n        /* \"#utility.yul\":2825:2896   */\n      tag_246\n        /* \"#utility.yul\":2893:2894   */\n      0x00\n        /* \"#utility.yul\":2882:2891   */\n      dup4\n        /* \"#utility.yul\":2878:2895   */\n      add\n        /* \"#utility.yul\":2869:2875   */\n      dup5\n        /* \"#utility.yul\":2825:2896   */\n      tag_178\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2681:2903   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2909:2969   */\n    tag_179:\n        /* \"#utility.yul\":2937:2940   */\n      0x00\n        /* \"#utility.yul\":2958:2963   */\n      dup2\n        /* \"#utility.yul\":2951:2963   */\n      swap1\n      pop\n        /* \"#utility.yul\":2909:2969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2975:3117   */\n    tag_180:\n        /* \"#utility.yul\":3025:3034   */\n      0x00\n        /* \"#utility.yul\":3058:3111   */\n      tag_249\n        /* \"#utility.yul\":3076:3110   */\n      tag_250\n        /* \"#utility.yul\":3085:3109   */\n      tag_251\n        /* \"#utility.yul\":3103:3108   */\n      dup5\n        /* \"#utility.yul\":3085:3109   */\n      tag_173\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3076:3110   */\n      tag_179\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3058:3111   */\n      tag_173\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3045:3111   */\n      swap1\n      pop\n        /* \"#utility.yul\":2975:3117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3249   */\n    tag_181:\n        /* \"#utility.yul\":3173:3182   */\n      0x00\n        /* \"#utility.yul\":3206:3243   */\n      tag_253\n        /* \"#utility.yul\":3237:3242   */\n      dup3\n        /* \"#utility.yul\":3206:3243   */\n      tag_180\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":3193:3243   */\n      swap1\n      pop\n        /* \"#utility.yul\":3123:3249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3255:3395   */\n    tag_182:\n        /* \"#utility.yul\":3319:3328   */\n      0x00\n        /* \"#utility.yul\":3352:3389   */\n      tag_255\n        /* \"#utility.yul\":3383:3388   */\n      dup3\n        /* \"#utility.yul\":3352:3389   */\n      tag_181\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3339:3389   */\n      swap1\n      pop\n        /* \"#utility.yul\":3255:3395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3401:3560   */\n    tag_183:\n        /* \"#utility.yul\":3502:3553   */\n      tag_257\n        /* \"#utility.yul\":3547:3552   */\n      dup2\n        /* \"#utility.yul\":3502:3553   */\n      tag_182\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":3497:3500   */\n      dup3\n        /* \"#utility.yul\":3490:3554   */\n      mstore\n        /* \"#utility.yul\":3401:3560   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3566:3816   */\n    tag_64:\n        /* \"#utility.yul\":3673:3677   */\n      0x00\n        /* \"#utility.yul\":3711:3713   */\n      0x20\n        /* \"#utility.yul\":3700:3709   */\n      dup3\n        /* \"#utility.yul\":3696:3714   */\n      add\n        /* \"#utility.yul\":3688:3714   */\n      swap1\n      pop\n        /* \"#utility.yul\":3724:3809   */\n      tag_259\n        /* \"#utility.yul\":3806:3807   */\n      0x00\n        /* \"#utility.yul\":3795:3804   */\n      dup4\n        /* \"#utility.yul\":3791:3808   */\n      add\n        /* \"#utility.yul\":3782:3788   */\n      dup5\n        /* \"#utility.yul\":3724:3809   */\n      tag_183\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3566:3816   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3822:3991   */\n    tag_184:\n        /* \"#utility.yul\":3906:3917   */\n      0x00\n        /* \"#utility.yul\":3940:3946   */\n      dup3\n        /* \"#utility.yul\":3935:3938   */\n      dup3\n        /* \"#utility.yul\":3928:3947   */\n      mstore\n        /* \"#utility.yul\":3980:3984   */\n      0x20\n        /* \"#utility.yul\":3975:3978   */\n      dup3\n        /* \"#utility.yul\":3971:3985   */\n      add\n        /* \"#utility.yul\":3956:3985   */\n      swap1\n      pop\n        /* \"#utility.yul\":3822:3991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3997:4173   */\n    tag_185:\n        /* \"#utility.yul\":4137:4165   */\n      0x43616e6e6f7420556e7374616b65207a65726f20746f6b656e73000000000000\n        /* \"#utility.yul\":4133:4134   */\n      0x00\n        /* \"#utility.yul\":4125:4131   */\n      dup3\n        /* \"#utility.yul\":4121:4135   */\n      add\n        /* \"#utility.yul\":4114:4166   */\n      mstore\n        /* \"#utility.yul\":3997:4173   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4179:4545   */\n    tag_186:\n        /* \"#utility.yul\":4321:4324   */\n      0x00\n        /* \"#utility.yul\":4342:4409   */\n      tag_263\n        /* \"#utility.yul\":4406:4408   */\n      0x1a\n        /* \"#utility.yul\":4401:4404   */\n      dup4\n        /* \"#utility.yul\":4342:4409   */\n      tag_184\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":4335:4409   */\n      swap2\n      pop\n        /* \"#utility.yul\":4418:4511   */\n      tag_264\n        /* \"#utility.yul\":4507:4510   */\n      dup3\n        /* \"#utility.yul\":4418:4511   */\n      tag_185\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":4536:4538   */\n      0x20\n        /* \"#utility.yul\":4531:4534   */\n      dup3\n        /* \"#utility.yul\":4527:4539   */\n      add\n        /* \"#utility.yul\":4520:4539   */\n      swap1\n      pop\n        /* \"#utility.yul\":4179:4545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4551:4970   */\n    tag_71:\n        /* \"#utility.yul\":4717:4721   */\n      0x00\n        /* \"#utility.yul\":4755:4757   */\n      0x20\n        /* \"#utility.yul\":4744:4753   */\n      dup3\n        /* \"#utility.yul\":4740:4758   */\n      add\n        /* \"#utility.yul\":4732:4758   */\n      swap1\n      pop\n        /* \"#utility.yul\":4804:4813   */\n      dup2\n        /* \"#utility.yul\":4798:4802   */\n      dup2\n        /* \"#utility.yul\":4794:4814   */\n      sub\n        /* \"#utility.yul\":4790:4791   */\n      0x00\n        /* \"#utility.yul\":4779:4788   */\n      dup4\n        /* \"#utility.yul\":4775:4792   */\n      add\n        /* \"#utility.yul\":4768:4815   */\n      mstore\n        /* \"#utility.yul\":4832:4963   */\n      tag_266\n        /* \"#utility.yul\":4958:4962   */\n      dup2\n        /* \"#utility.yul\":4832:4963   */\n      tag_186\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4824:4963   */\n      swap1\n      pop\n        /* \"#utility.yul\":4551:4970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4976:5153   */\n    tag_187:\n        /* \"#utility.yul\":5116:5145   */\n      0x496e73756666696369656e74207374616b65642062616c616e63650000000000\n        /* \"#utility.yul\":5112:5113   */\n      0x00\n        /* \"#utility.yul\":5104:5110   */\n      dup3\n        /* \"#utility.yul\":5100:5114   */\n      add\n        /* \"#utility.yul\":5093:5146   */\n      mstore\n        /* \"#utility.yul\":4976:5153   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5159:5525   */\n    tag_188:\n        /* \"#utility.yul\":5301:5304   */\n      0x00\n        /* \"#utility.yul\":5322:5389   */\n      tag_269\n        /* \"#utility.yul\":5386:5388   */\n      0x1b\n        /* \"#utility.yul\":5381:5384   */\n      dup4\n        /* \"#utility.yul\":5322:5389   */\n      tag_184\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5315:5389   */\n      swap2\n      pop\n        /* \"#utility.yul\":5398:5491   */\n      tag_270\n        /* \"#utility.yul\":5487:5490   */\n      dup3\n        /* \"#utility.yul\":5398:5491   */\n      tag_187\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5516:5518   */\n      0x20\n        /* \"#utility.yul\":5511:5514   */\n      dup3\n        /* \"#utility.yul\":5507:5519   */\n      add\n        /* \"#utility.yul\":5500:5519   */\n      swap1\n      pop\n        /* \"#utility.yul\":5159:5525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5531:5950   */\n    tag_74:\n        /* \"#utility.yul\":5697:5701   */\n      0x00\n        /* \"#utility.yul\":5735:5737   */\n      0x20\n        /* \"#utility.yul\":5724:5733   */\n      dup3\n        /* \"#utility.yul\":5720:5738   */\n      add\n        /* \"#utility.yul\":5712:5738   */\n      swap1\n      pop\n        /* \"#utility.yul\":5784:5793   */\n      dup2\n        /* \"#utility.yul\":5778:5782   */\n      dup2\n        /* \"#utility.yul\":5774:5794   */\n      sub\n        /* \"#utility.yul\":5770:5771   */\n      0x00\n        /* \"#utility.yul\":5759:5768   */\n      dup4\n        /* \"#utility.yul\":5755:5772   */\n      add\n        /* \"#utility.yul\":5748:5795   */\n      mstore\n        /* \"#utility.yul\":5812:5943   */\n      tag_272\n        /* \"#utility.yul\":5938:5942   */\n      dup2\n        /* \"#utility.yul\":5812:5943   */\n      tag_188\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":5804:5943   */\n      swap1\n      pop\n        /* \"#utility.yul\":5531:5950   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5956:6132   */\n    tag_189:\n        /* \"#utility.yul\":6096:6124   */\n      0x556e7374616b6520416c726561647920696e2050726f63657373000000000000\n        /* \"#utility.yul\":6092:6093   */\n      0x00\n        /* \"#utility.yul\":6084:6090   */\n      dup3\n        /* \"#utility.yul\":6080:6094   */\n      add\n        /* \"#utility.yul\":6073:6125   */\n      mstore\n        /* \"#utility.yul\":5956:6132   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6138:6504   */\n    tag_190:\n        /* \"#utility.yul\":6280:6283   */\n      0x00\n        /* \"#utility.yul\":6301:6368   */\n      tag_275\n        /* \"#utility.yul\":6365:6367   */\n      0x1a\n        /* \"#utility.yul\":6360:6363   */\n      dup4\n        /* \"#utility.yul\":6301:6368   */\n      tag_184\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":6294:6368   */\n      swap2\n      pop\n        /* \"#utility.yul\":6377:6470   */\n      tag_276\n        /* \"#utility.yul\":6466:6469   */\n      dup3\n        /* \"#utility.yul\":6377:6470   */\n      tag_189\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":6495:6497   */\n      0x20\n        /* \"#utility.yul\":6490:6493   */\n      dup3\n        /* \"#utility.yul\":6486:6498   */\n      add\n        /* \"#utility.yul\":6479:6498   */\n      swap1\n      pop\n        /* \"#utility.yul\":6138:6504   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6510:6929   */\n    tag_77:\n        /* \"#utility.yul\":6676:6680   */\n      0x00\n        /* \"#utility.yul\":6714:6716   */\n      0x20\n        /* \"#utility.yul\":6703:6712   */\n      dup3\n        /* \"#utility.yul\":6699:6717   */\n      add\n        /* \"#utility.yul\":6691:6717   */\n      swap1\n      pop\n        /* \"#utility.yul\":6763:6772   */\n      dup2\n        /* \"#utility.yul\":6757:6761   */\n      dup2\n        /* \"#utility.yul\":6753:6773   */\n      sub\n        /* \"#utility.yul\":6749:6750   */\n      0x00\n        /* \"#utility.yul\":6738:6747   */\n      dup4\n        /* \"#utility.yul\":6734:6751   */\n      add\n        /* \"#utility.yul\":6727:6774   */\n      mstore\n        /* \"#utility.yul\":6791:6922   */\n      tag_278\n        /* \"#utility.yul\":6917:6921   */\n      dup2\n        /* \"#utility.yul\":6791:6922   */\n      tag_190\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":6783:6922   */\n      swap1\n      pop\n        /* \"#utility.yul\":6510:6929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6935:7115   */\n    tag_191:\n        /* \"#utility.yul\":6983:7060   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6980:6981   */\n      0x00\n        /* \"#utility.yul\":6973:7061   */\n      mstore\n        /* \"#utility.yul\":7080:7084   */\n      0x11\n        /* \"#utility.yul\":7077:7078   */\n      0x04\n        /* \"#utility.yul\":7070:7085   */\n      mstore\n        /* \"#utility.yul\":7104:7108   */\n      0x24\n        /* \"#utility.yul\":7101:7102   */\n      0x00\n        /* \"#utility.yul\":7094:7109   */\n      revert\n        /* \"#utility.yul\":7121:7312   */\n    tag_82:\n        /* \"#utility.yul\":7161:7164   */\n      0x00\n        /* \"#utility.yul\":7180:7200   */\n      tag_281\n        /* \"#utility.yul\":7198:7199   */\n      dup3\n        /* \"#utility.yul\":7180:7200   */\n      tag_170\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":7175:7200   */\n      swap2\n      pop\n        /* \"#utility.yul\":7214:7234   */\n      tag_282\n        /* \"#utility.yul\":7232:7233   */\n      dup4\n        /* \"#utility.yul\":7214:7234   */\n      tag_170\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":7209:7234   */\n      swap3\n      pop\n        /* \"#utility.yul\":7257:7258   */\n      dup3\n        /* \"#utility.yul\":7254:7255   */\n      dup3\n        /* \"#utility.yul\":7250:7259   */\n      add\n        /* \"#utility.yul\":7243:7259   */\n      swap1\n      pop\n        /* \"#utility.yul\":7278:7281   */\n      dup1\n        /* \"#utility.yul\":7275:7276   */\n      dup3\n        /* \"#utility.yul\":7272:7282   */\n      gt\n        /* \"#utility.yul\":7269:7305   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":7285:7303   */\n      tag_284\n      tag_191\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":7269:7305   */\n    tag_283:\n        /* \"#utility.yul\":7121:7312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7318:7492   */\n    tag_192:\n        /* \"#utility.yul\":7458:7484   */\n      0x4e6f20556e7374616b65205265717565737420466f756e640000000000000000\n        /* \"#utility.yul\":7454:7455   */\n      0x00\n        /* \"#utility.yul\":7446:7452   */\n      dup3\n        /* \"#utility.yul\":7442:7456   */\n      add\n        /* \"#utility.yul\":7435:7485   */\n      mstore\n        /* \"#utility.yul\":7318:7492   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7498:7864   */\n    tag_193:\n        /* \"#utility.yul\":7640:7643   */\n      0x00\n        /* \"#utility.yul\":7661:7728   */\n      tag_287\n        /* \"#utility.yul\":7725:7727   */\n      0x18\n        /* \"#utility.yul\":7720:7723   */\n      dup4\n        /* \"#utility.yul\":7661:7728   */\n      tag_184\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":7654:7728   */\n      swap2\n      pop\n        /* \"#utility.yul\":7737:7830   */\n      tag_288\n        /* \"#utility.yul\":7826:7829   */\n      dup3\n        /* \"#utility.yul\":7737:7830   */\n      tag_192\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":7855:7857   */\n      0x20\n        /* \"#utility.yul\":7850:7853   */\n      dup3\n        /* \"#utility.yul\":7846:7858   */\n      add\n        /* \"#utility.yul\":7839:7858   */\n      swap1\n      pop\n        /* \"#utility.yul\":7498:7864   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7870:8289   */\n    tag_92:\n        /* \"#utility.yul\":8036:8040   */\n      0x00\n        /* \"#utility.yul\":8074:8076   */\n      0x20\n        /* \"#utility.yul\":8063:8072   */\n      dup3\n        /* \"#utility.yul\":8059:8077   */\n      add\n        /* \"#utility.yul\":8051:8077   */\n      swap1\n      pop\n        /* \"#utility.yul\":8123:8132   */\n      dup2\n        /* \"#utility.yul\":8117:8121   */\n      dup2\n        /* \"#utility.yul\":8113:8133   */\n      sub\n        /* \"#utility.yul\":8109:8110   */\n      0x00\n        /* \"#utility.yul\":8098:8107   */\n      dup4\n        /* \"#utility.yul\":8094:8111   */\n      add\n        /* \"#utility.yul\":8087:8134   */\n      mstore\n        /* \"#utility.yul\":8151:8282   */\n      tag_290\n        /* \"#utility.yul\":8277:8281   */\n      dup2\n        /* \"#utility.yul\":8151:8282   */\n      tag_193\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":8143:8282   */\n      swap1\n      pop\n        /* \"#utility.yul\":7870:8289   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8295:8468   */\n    tag_194:\n        /* \"#utility.yul\":8435:8460   */\n      0x556e7374616b6520706572696f64206e6f74206f766572000000000000000000\n        /* \"#utility.yul\":8431:8432   */\n      0x00\n        /* \"#utility.yul\":8423:8429   */\n      dup3\n        /* \"#utility.yul\":8419:8433   */\n      add\n        /* \"#utility.yul\":8412:8461   */\n      mstore\n        /* \"#utility.yul\":8295:8468   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8474:8840   */\n    tag_195:\n        /* \"#utility.yul\":8616:8619   */\n      0x00\n        /* \"#utility.yul\":8637:8704   */\n      tag_293\n        /* \"#utility.yul\":8701:8703   */\n      0x17\n        /* \"#utility.yul\":8696:8699   */\n      dup4\n        /* \"#utility.yul\":8637:8704   */\n      tag_184\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8630:8704   */\n      swap2\n      pop\n        /* \"#utility.yul\":8713:8806   */\n      tag_294\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8713:8806   */\n      tag_194\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":8831:8833   */\n      0x20\n        /* \"#utility.yul\":8826:8829   */\n      dup3\n        /* \"#utility.yul\":8822:8834   */\n      add\n        /* \"#utility.yul\":8815:8834   */\n      swap1\n      pop\n        /* \"#utility.yul\":8474:8840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8846:9265   */\n    tag_95:\n        /* \"#utility.yul\":9012:9016   */\n      0x00\n        /* \"#utility.yul\":9050:9052   */\n      0x20\n        /* \"#utility.yul\":9039:9048   */\n      dup3\n        /* \"#utility.yul\":9035:9053   */\n      add\n        /* \"#utility.yul\":9027:9053   */\n      swap1\n      pop\n        /* \"#utility.yul\":9099:9108   */\n      dup2\n        /* \"#utility.yul\":9093:9097   */\n      dup2\n        /* \"#utility.yul\":9089:9109   */\n      sub\n        /* \"#utility.yul\":9085:9086   */\n      0x00\n        /* \"#utility.yul\":9074:9083   */\n      dup4\n        /* \"#utility.yul\":9070:9087   */\n      add\n        /* \"#utility.yul\":9063:9110   */\n      mstore\n        /* \"#utility.yul\":9127:9258   */\n      tag_296\n        /* \"#utility.yul\":9253:9257   */\n      dup2\n        /* \"#utility.yul\":9127:9258   */\n      tag_195\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":9119:9258   */\n      swap1\n      pop\n        /* \"#utility.yul\":8846:9265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9271:9603   */\n    tag_97:\n        /* \"#utility.yul\":9392:9396   */\n      0x00\n        /* \"#utility.yul\":9430:9432   */\n      0x40\n        /* \"#utility.yul\":9419:9428   */\n      dup3\n        /* \"#utility.yul\":9415:9433   */\n      add\n        /* \"#utility.yul\":9407:9433   */\n      swap1\n      pop\n        /* \"#utility.yul\":9443:9514   */\n      tag_298\n        /* \"#utility.yul\":9511:9512   */\n      0x00\n        /* \"#utility.yul\":9500:9509   */\n      dup4\n        /* \"#utility.yul\":9496:9513   */\n      add\n        /* \"#utility.yul\":9487:9493   */\n      dup6\n        /* \"#utility.yul\":9443:9514   */\n      tag_178\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":9524:9596   */\n      tag_299\n        /* \"#utility.yul\":9592:9594   */\n      0x20\n        /* \"#utility.yul\":9581:9590   */\n      dup4\n        /* \"#utility.yul\":9577:9595   */\n      add\n        /* \"#utility.yul\":9568:9574   */\n      dup5\n        /* \"#utility.yul\":9524:9596   */\n      tag_177\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9271:9603   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9609:9699   */\n    tag_196:\n        /* \"#utility.yul\":9643:9650   */\n      0x00\n        /* \"#utility.yul\":9686:9691   */\n      dup2\n        /* \"#utility.yul\":9679:9692   */\n      iszero\n        /* \"#utility.yul\":9672:9693   */\n      iszero\n        /* \"#utility.yul\":9661:9693   */\n      swap1\n      pop\n        /* \"#utility.yul\":9609:9699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9705:9821   */\n    tag_197:\n        /* \"#utility.yul\":9775:9796   */\n      tag_302\n        /* \"#utility.yul\":9790:9795   */\n      dup2\n        /* \"#utility.yul\":9775:9796   */\n      tag_196\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":9768:9773   */\n      dup2\n        /* \"#utility.yul\":9765:9797   */\n      eq\n        /* \"#utility.yul\":9755:9815   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":9811:9812   */\n      0x00\n        /* \"#utility.yul\":9808:9809   */\n      dup1\n        /* \"#utility.yul\":9801:9813   */\n      revert\n        /* \"#utility.yul\":9755:9815   */\n    tag_303:\n        /* \"#utility.yul\":9705:9821   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9827:9964   */\n    tag_198:\n        /* \"#utility.yul\":9881:9886   */\n      0x00\n        /* \"#utility.yul\":9912:9918   */\n      dup2\n        /* \"#utility.yul\":9906:9919   */\n      mload\n        /* \"#utility.yul\":9897:9919   */\n      swap1\n      pop\n        /* \"#utility.yul\":9928:9958   */\n      tag_305\n        /* \"#utility.yul\":9952:9957   */\n      dup2\n        /* \"#utility.yul\":9928:9958   */\n      tag_197\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":9827:9964   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9970:10315   */\n    tag_101:\n        /* \"#utility.yul\":10037:10043   */\n      0x00\n        /* \"#utility.yul\":10086:10088   */\n      0x20\n        /* \"#utility.yul\":10074:10083   */\n      dup3\n        /* \"#utility.yul\":10065:10072   */\n      dup5\n        /* \"#utility.yul\":10061:10084   */\n      sub\n        /* \"#utility.yul\":10057:10089   */\n      slt\n        /* \"#utility.yul\":10054:10173   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":10092:10171   */\n      tag_308\n      tag_168\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":10054:10173   */\n    tag_307:\n        /* \"#utility.yul\":10212:10213   */\n      0x00\n        /* \"#utility.yul\":10237:10298   */\n      tag_309\n        /* \"#utility.yul\":10290:10297   */\n      dup5\n        /* \"#utility.yul\":10281:10287   */\n      dup3\n        /* \"#utility.yul\":10270:10279   */\n      dup6\n        /* \"#utility.yul\":10266:10288   */\n      add\n        /* \"#utility.yul\":10237:10298   */\n      tag_198\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":10227:10298   */\n      swap2\n      pop\n        /* \"#utility.yul\":10183:10308   */\n      pop\n        /* \"#utility.yul\":9970:10315   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10321:10554   */\n    tag_199:\n        /* \"#utility.yul\":10461:10495   */\n      0x546f6b656e205472616e73666572204661696c656420647572696e6720556e53\n        /* \"#utility.yul\":10457:10458   */\n      0x00\n        /* \"#utility.yul\":10449:10455   */\n      dup3\n        /* \"#utility.yul\":10445:10459   */\n      add\n        /* \"#utility.yul\":10438:10496   */\n      mstore\n        /* \"#utility.yul\":10530:10546   */\n      0x74616b696e672050726f63657373000000000000000000000000000000000000\n        /* \"#utility.yul\":10525:10527   */\n      0x20\n        /* \"#utility.yul\":10517:10523   */\n      dup3\n        /* \"#utility.yul\":10513:10528   */\n      add\n        /* \"#utility.yul\":10506:10547   */\n      mstore\n        /* \"#utility.yul\":10321:10554   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10560:10926   */\n    tag_200:\n        /* \"#utility.yul\":10702:10705   */\n      0x00\n        /* \"#utility.yul\":10723:10790   */\n      tag_312\n        /* \"#utility.yul\":10787:10789   */\n      0x2e\n        /* \"#utility.yul\":10782:10785   */\n      dup4\n        /* \"#utility.yul\":10723:10790   */\n      tag_184\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":10716:10790   */\n      swap2\n      pop\n        /* \"#utility.yul\":10799:10892   */\n      tag_313\n        /* \"#utility.yul\":10888:10891   */\n      dup3\n        /* \"#utility.yul\":10799:10892   */\n      tag_199\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":10917:10919   */\n      0x40\n        /* \"#utility.yul\":10912:10915   */\n      dup3\n        /* \"#utility.yul\":10908:10920   */\n      add\n        /* \"#utility.yul\":10901:10920   */\n      swap1\n      pop\n        /* \"#utility.yul\":10560:10926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10932:11351   */\n    tag_104:\n        /* \"#utility.yul\":11098:11102   */\n      0x00\n        /* \"#utility.yul\":11136:11138   */\n      0x20\n        /* \"#utility.yul\":11125:11134   */\n      dup3\n        /* \"#utility.yul\":11121:11139   */\n      add\n        /* \"#utility.yul\":11113:11139   */\n      swap1\n      pop\n        /* \"#utility.yul\":11185:11194   */\n      dup2\n        /* \"#utility.yul\":11179:11183   */\n      dup2\n        /* \"#utility.yul\":11175:11195   */\n      sub\n        /* \"#utility.yul\":11171:11172   */\n      0x00\n        /* \"#utility.yul\":11160:11169   */\n      dup4\n        /* \"#utility.yul\":11156:11173   */\n      add\n        /* \"#utility.yul\":11149:11196   */\n      mstore\n        /* \"#utility.yul\":11213:11344   */\n      tag_315\n        /* \"#utility.yul\":11339:11343   */\n      dup2\n        /* \"#utility.yul\":11213:11344   */\n      tag_200\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":11205:11344   */\n      swap1\n      pop\n        /* \"#utility.yul\":10932:11351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11357:11531   */\n    tag_201:\n        /* \"#utility.yul\":11497:11523   */\n      0x43616e6e6f74207374616b65207a65726f20546f6b656e730000000000000000\n        /* \"#utility.yul\":11493:11494   */\n      0x00\n        /* \"#utility.yul\":11485:11491   */\n      dup3\n        /* \"#utility.yul\":11481:11495   */\n      add\n        /* \"#utility.yul\":11474:11524   */\n      mstore\n        /* \"#utility.yul\":11357:11531   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11537:11903   */\n    tag_202:\n        /* \"#utility.yul\":11679:11682   */\n      0x00\n        /* \"#utility.yul\":11700:11767   */\n      tag_318\n        /* \"#utility.yul\":11764:11766   */\n      0x18\n        /* \"#utility.yul\":11759:11762   */\n      dup4\n        /* \"#utility.yul\":11700:11767   */\n      tag_184\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":11693:11767   */\n      swap2\n      pop\n        /* \"#utility.yul\":11776:11869   */\n      tag_319\n        /* \"#utility.yul\":11865:11868   */\n      dup3\n        /* \"#utility.yul\":11776:11869   */\n      tag_201\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":11894:11896   */\n      0x20\n        /* \"#utility.yul\":11889:11892   */\n      dup3\n        /* \"#utility.yul\":11885:11897   */\n      add\n        /* \"#utility.yul\":11878:11897   */\n      swap1\n      pop\n        /* \"#utility.yul\":11537:11903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11909:12328   */\n    tag_119:\n        /* \"#utility.yul\":12075:12079   */\n      0x00\n        /* \"#utility.yul\":12113:12115   */\n      0x20\n        /* \"#utility.yul\":12102:12111   */\n      dup3\n        /* \"#utility.yul\":12098:12116   */\n      add\n        /* \"#utility.yul\":12090:12116   */\n      swap1\n      pop\n        /* \"#utility.yul\":12162:12171   */\n      dup2\n        /* \"#utility.yul\":12156:12160   */\n      dup2\n        /* \"#utility.yul\":12152:12172   */\n      sub\n        /* \"#utility.yul\":12148:12149   */\n      0x00\n        /* \"#utility.yul\":12137:12146   */\n      dup4\n        /* \"#utility.yul\":12133:12150   */\n      add\n        /* \"#utility.yul\":12126:12173   */\n      mstore\n        /* \"#utility.yul\":12190:12321   */\n      tag_321\n        /* \"#utility.yul\":12316:12320   */\n      dup2\n        /* \"#utility.yul\":12190:12321   */\n      tag_202\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":12182:12321   */\n      swap1\n      pop\n        /* \"#utility.yul\":11909:12328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12334:12477   */\n    tag_203:\n        /* \"#utility.yul\":12391:12396   */\n      0x00\n        /* \"#utility.yul\":12422:12428   */\n      dup2\n        /* \"#utility.yul\":12416:12429   */\n      mload\n        /* \"#utility.yul\":12407:12429   */\n      swap1\n      pop\n        /* \"#utility.yul\":12438:12471   */\n      tag_323\n        /* \"#utility.yul\":12465:12470   */\n      dup2\n        /* \"#utility.yul\":12438:12471   */\n      tag_171\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":12334:12477   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12483:12834   */\n    tag_124:\n        /* \"#utility.yul\":12553:12559   */\n      0x00\n        /* \"#utility.yul\":12602:12604   */\n      0x20\n        /* \"#utility.yul\":12590:12599   */\n      dup3\n        /* \"#utility.yul\":12581:12588   */\n      dup5\n        /* \"#utility.yul\":12577:12600   */\n      sub\n        /* \"#utility.yul\":12573:12605   */\n      slt\n        /* \"#utility.yul\":12570:12689   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":12608:12687   */\n      tag_326\n      tag_168\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":12570:12689   */\n    tag_325:\n        /* \"#utility.yul\":12728:12729   */\n      0x00\n        /* \"#utility.yul\":12753:12817   */\n      tag_327\n        /* \"#utility.yul\":12809:12816   */\n      dup5\n        /* \"#utility.yul\":12800:12806   */\n      dup3\n        /* \"#utility.yul\":12789:12798   */\n      dup6\n        /* \"#utility.yul\":12785:12807   */\n      add\n        /* \"#utility.yul\":12753:12817   */\n      tag_203\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":12743:12817   */\n      swap2\n      pop\n        /* \"#utility.yul\":12699:12827   */\n      pop\n        /* \"#utility.yul\":12483:12834   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12840:13010   */\n    tag_204:\n        /* \"#utility.yul\":12980:13002   */\n      0x496e73756666696369656e742042616c616e6365000000000000000000000000\n        /* \"#utility.yul\":12976:12977   */\n      0x00\n        /* \"#utility.yul\":12968:12974   */\n      dup3\n        /* \"#utility.yul\":12964:12978   */\n      add\n        /* \"#utility.yul\":12957:13003   */\n      mstore\n        /* \"#utility.yul\":12840:13010   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13016:13382   */\n    tag_205:\n        /* \"#utility.yul\":13158:13161   */\n      0x00\n        /* \"#utility.yul\":13179:13246   */\n      tag_330\n        /* \"#utility.yul\":13243:13245   */\n      0x14\n        /* \"#utility.yul\":13238:13241   */\n      dup4\n        /* \"#utility.yul\":13179:13246   */\n      tag_184\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":13172:13246   */\n      swap2\n      pop\n        /* \"#utility.yul\":13255:13348   */\n      tag_331\n        /* \"#utility.yul\":13344:13347   */\n      dup3\n        /* \"#utility.yul\":13255:13348   */\n      tag_204\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":13373:13375   */\n      0x20\n        /* \"#utility.yul\":13368:13371   */\n      dup3\n        /* \"#utility.yul\":13364:13376   */\n      add\n        /* \"#utility.yul\":13357:13376   */\n      swap1\n      pop\n        /* \"#utility.yul\":13016:13382   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13388:13807   */\n    tag_127:\n        /* \"#utility.yul\":13554:13558   */\n      0x00\n        /* \"#utility.yul\":13592:13594   */\n      0x20\n        /* \"#utility.yul\":13581:13590   */\n      dup3\n        /* \"#utility.yul\":13577:13595   */\n      add\n        /* \"#utility.yul\":13569:13595   */\n      swap1\n      pop\n        /* \"#utility.yul\":13641:13650   */\n      dup2\n        /* \"#utility.yul\":13635:13639   */\n      dup2\n        /* \"#utility.yul\":13631:13651   */\n      sub\n        /* \"#utility.yul\":13627:13628   */\n      0x00\n        /* \"#utility.yul\":13616:13625   */\n      dup4\n        /* \"#utility.yul\":13612:13629   */\n      add\n        /* \"#utility.yul\":13605:13652   */\n      mstore\n        /* \"#utility.yul\":13669:13800   */\n      tag_333\n        /* \"#utility.yul\":13795:13799   */\n      dup2\n        /* \"#utility.yul\":13669:13800   */\n      tag_205\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":13661:13800   */\n      swap1\n      pop\n        /* \"#utility.yul\":13388:13807   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13813:14255   */\n    tag_129:\n        /* \"#utility.yul\":13962:13966   */\n      0x00\n        /* \"#utility.yul\":14000:14002   */\n      0x60\n        /* \"#utility.yul\":13989:13998   */\n      dup3\n        /* \"#utility.yul\":13985:14003   */\n      add\n        /* \"#utility.yul\":13977:14003   */\n      swap1\n      pop\n        /* \"#utility.yul\":14013:14084   */\n      tag_335\n        /* \"#utility.yul\":14081:14082   */\n      0x00\n        /* \"#utility.yul\":14070:14079   */\n      dup4\n        /* \"#utility.yul\":14066:14083   */\n      add\n        /* \"#utility.yul\":14057:14063   */\n      dup7\n        /* \"#utility.yul\":14013:14084   */\n      tag_178\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":14094:14166   */\n      tag_336\n        /* \"#utility.yul\":14162:14164   */\n      0x20\n        /* \"#utility.yul\":14151:14160   */\n      dup4\n        /* \"#utility.yul\":14147:14165   */\n      add\n        /* \"#utility.yul\":14138:14144   */\n      dup6\n        /* \"#utility.yul\":14094:14166   */\n      tag_178\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":14176:14248   */\n      tag_337\n        /* \"#utility.yul\":14244:14246   */\n      0x40\n        /* \"#utility.yul\":14233:14242   */\n      dup4\n        /* \"#utility.yul\":14229:14247   */\n      add\n        /* \"#utility.yul\":14220:14226   */\n      dup5\n        /* \"#utility.yul\":14176:14248   */\n      tag_177\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":13813:14255   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14261:14426   */\n    tag_206:\n        /* \"#utility.yul\":14401:14418   */\n      0x5472616e73666572204661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":14397:14398   */\n      0x00\n        /* \"#utility.yul\":14389:14395   */\n      dup3\n        /* \"#utility.yul\":14385:14399   */\n      add\n        /* \"#utility.yul\":14378:14419   */\n      mstore\n        /* \"#utility.yul\":14261:14426   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14432:14798   */\n    tag_207:\n        /* \"#utility.yul\":14574:14577   */\n      0x00\n        /* \"#utility.yul\":14595:14662   */\n      tag_340\n        /* \"#utility.yul\":14659:14661   */\n      0x0f\n        /* \"#utility.yul\":14654:14657   */\n      dup4\n        /* \"#utility.yul\":14595:14662   */\n      tag_184\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":14588:14662   */\n      swap2\n      pop\n        /* \"#utility.yul\":14671:14764   */\n      tag_341\n        /* \"#utility.yul\":14760:14763   */\n      dup3\n        /* \"#utility.yul\":14671:14764   */\n      tag_206\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":14789:14791   */\n      0x20\n        /* \"#utility.yul\":14784:14787   */\n      dup3\n        /* \"#utility.yul\":14780:14792   */\n      add\n        /* \"#utility.yul\":14773:14792   */\n      swap1\n      pop\n        /* \"#utility.yul\":14432:14798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14804:15223   */\n    tag_135:\n        /* \"#utility.yul\":14970:14974   */\n      0x00\n        /* \"#utility.yul\":15008:15010   */\n      0x20\n        /* \"#utility.yul\":14997:15006   */\n      dup3\n        /* \"#utility.yul\":14993:15011   */\n      add\n        /* \"#utility.yul\":14985:15011   */\n      swap1\n      pop\n        /* \"#utility.yul\":15057:15066   */\n      dup2\n        /* \"#utility.yul\":15051:15055   */\n      dup2\n        /* \"#utility.yul\":15047:15067   */\n      sub\n        /* \"#utility.yul\":15043:15044   */\n      0x00\n        /* \"#utility.yul\":15032:15041   */\n      dup4\n        /* \"#utility.yul\":15028:15045   */\n      add\n        /* \"#utility.yul\":15021:15068   */\n      mstore\n        /* \"#utility.yul\":15085:15216   */\n      tag_343\n        /* \"#utility.yul\":15211:15215   */\n      dup2\n        /* \"#utility.yul\":15085:15216   */\n      tag_207\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":15077:15216   */\n      swap1\n      pop\n        /* \"#utility.yul\":14804:15223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15229:15410   */\n    tag_208:\n        /* \"#utility.yul\":15369:15402   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":15365:15366   */\n      0x00\n        /* \"#utility.yul\":15357:15363   */\n      dup3\n        /* \"#utility.yul\":15353:15367   */\n      add\n        /* \"#utility.yul\":15346:15403   */\n      mstore\n        /* \"#utility.yul\":15229:15410   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15416:15782   */\n    tag_209:\n        /* \"#utility.yul\":15558:15561   */\n      0x00\n        /* \"#utility.yul\":15579:15646   */\n      tag_346\n        /* \"#utility.yul\":15643:15645   */\n      0x1f\n        /* \"#utility.yul\":15638:15641   */\n      dup4\n        /* \"#utility.yul\":15579:15646   */\n      tag_184\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":15572:15646   */\n      swap2\n      pop\n        /* \"#utility.yul\":15655:15748   */\n      tag_347\n        /* \"#utility.yul\":15744:15747   */\n      dup3\n        /* \"#utility.yul\":15655:15748   */\n      tag_208\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":15773:15775   */\n      0x20\n        /* \"#utility.yul\":15768:15771   */\n      dup3\n        /* \"#utility.yul\":15764:15776   */\n      add\n        /* \"#utility.yul\":15757:15776   */\n      swap1\n      pop\n        /* \"#utility.yul\":15416:15782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15788:16207   */\n    tag_151:\n        /* \"#utility.yul\":15954:15958   */\n      0x00\n        /* \"#utility.yul\":15992:15994   */\n      0x20\n        /* \"#utility.yul\":15981:15990   */\n      dup3\n        /* \"#utility.yul\":15977:15995   */\n      add\n        /* \"#utility.yul\":15969:15995   */\n      swap1\n      pop\n        /* \"#utility.yul\":16041:16050   */\n      dup2\n        /* \"#utility.yul\":16035:16039   */\n      dup2\n        /* \"#utility.yul\":16031:16051   */\n      sub\n        /* \"#utility.yul\":16027:16028   */\n      0x00\n        /* \"#utility.yul\":16016:16025   */\n      dup4\n        /* \"#utility.yul\":16012:16029   */\n      add\n        /* \"#utility.yul\":16005:16052   */\n      mstore\n        /* \"#utility.yul\":16069:16200   */\n      tag_349\n        /* \"#utility.yul\":16195:16199   */\n      dup2\n        /* \"#utility.yul\":16069:16200   */\n      tag_209\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":16061:16200   */\n      swap1\n      pop\n        /* \"#utility.yul\":15788:16207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16213:16407   */\n    tag_154:\n        /* \"#utility.yul\":16253:16257   */\n      0x00\n        /* \"#utility.yul\":16273:16293   */\n      tag_351\n        /* \"#utility.yul\":16291:16292   */\n      dup3\n        /* \"#utility.yul\":16273:16293   */\n      tag_170\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":16268:16293   */\n      swap2\n      pop\n        /* \"#utility.yul\":16307:16327   */\n      tag_352\n        /* \"#utility.yul\":16325:16326   */\n      dup4\n        /* \"#utility.yul\":16307:16327   */\n      tag_170\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":16302:16327   */\n      swap3\n      pop\n        /* \"#utility.yul\":16351:16352   */\n      dup3\n        /* \"#utility.yul\":16348:16349   */\n      dup3\n        /* \"#utility.yul\":16344:16353   */\n      sub\n        /* \"#utility.yul\":16336:16353   */\n      swap1\n      pop\n        /* \"#utility.yul\":16375:16376   */\n      dup2\n        /* \"#utility.yul\":16369:16373   */\n      dup2\n        /* \"#utility.yul\":16366:16377   */\n      gt\n        /* \"#utility.yul\":16363:16400   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":16380:16398   */\n      tag_354\n      tag_191\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":16363:16400   */\n    tag_353:\n        /* \"#utility.yul\":16213:16407   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fa7070370293574d30dfd8e05efd63bd8f2b2509d3c1a00919f1144eff2ce81f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_715": {
									"entryPoint": null,
									"id": 715,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 354,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2867:6",
										"nodeType": "YulBlock",
										"src": "0:2867:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "939:413:6",
													"nodeType": "YulBlock",
													"src": "939:413:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:6",
																"nodeType": "YulBlock",
																"src": "985:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:6"
																			},
																			"nativeSrc": "987:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:6"
																		},
																		"nativeSrc": "987:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:6"
																		},
																		"nativeSrc": "956:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:6",
																		"nodeType": "YulLiteral",
																		"src": "981:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:6"
																},
																"nativeSrc": "952:32:6",
																"nodeType": "YulFunctionCall",
																"src": "952:32:6"
															},
															"nativeSrc": "949:119:6",
															"nodeType": "YulIf",
															"src": "949:119:6"
														},
														{
															"nativeSrc": "1078:128:6",
															"nodeType": "YulBlock",
															"src": "1078:128:6",
															"statements": [
																{
																	"nativeSrc": "1093:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:6"
																				},
																				"nativeSrc": "1164:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:6"
																		},
																		"nativeSrc": "1132:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:6",
															"nodeType": "YulBlock",
															"src": "1216:129:6",
															"statements": [
																{
																	"nativeSrc": "1231:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:6"
																				},
																				"nativeSrc": "1303:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:6"
																		},
																		"nativeSrc": "1271:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:6",
														"nodeType": "YulTypedName",
														"src": "901:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:6",
														"nodeType": "YulTypedName",
														"src": "912:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:6",
														"nodeType": "YulTypedName",
														"src": "924:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:6",
														"nodeType": "YulTypedName",
														"src": "932:6:6",
														"type": ""
													}
												],
												"src": "845:507:6"
											},
											{
												"body": {
													"nativeSrc": "1423:53:6",
													"nodeType": "YulBlock",
													"src": "1423:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:6"
																		},
																		"nativeSrc": "1445:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:6"
																},
																"nativeSrc": "1433:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:6"
															},
															"nativeSrc": "1433:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:6",
														"nodeType": "YulTypedName",
														"src": "1411:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:6",
														"nodeType": "YulTypedName",
														"src": "1418:3:6",
														"type": ""
													}
												],
												"src": "1358:118:6"
											},
											{
												"body": {
													"nativeSrc": "1580:124:6",
													"nodeType": "YulBlock",
													"src": "1580:124:6",
													"statements": [
														{
															"nativeSrc": "1590:26:6",
															"nodeType": "YulAssignment",
															"src": "1590:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:6"
																},
																"nativeSrc": "1598:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:6"
																		},
																		"nativeSrc": "1679:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:6"
																},
																"nativeSrc": "1626:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:6"
															},
															"nativeSrc": "1626:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:6",
														"nodeType": "YulTypedName",
														"src": "1552:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:6",
														"nodeType": "YulTypedName",
														"src": "1564:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:6",
														"nodeType": "YulTypedName",
														"src": "1575:4:6",
														"type": ""
													}
												],
												"src": "1482:222:6"
											},
											{
												"body": {
													"nativeSrc": "1806:73:6",
													"nodeType": "YulBlock",
													"src": "1806:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1823:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1823:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1828:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1828:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1816:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1816:6:6"
																},
																"nativeSrc": "1816:19:6",
																"nodeType": "YulFunctionCall",
																"src": "1816:19:6"
															},
															"nativeSrc": "1816:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "1816:19:6"
														},
														{
															"nativeSrc": "1844:29:6",
															"nodeType": "YulAssignment",
															"src": "1844:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1863:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1863:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1868:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1868:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1859:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:3:6"
																},
																"nativeSrc": "1859:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1859:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1844:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "1844:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1710:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1778:3:6",
														"nodeType": "YulTypedName",
														"src": "1778:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1783:6:6",
														"nodeType": "YulTypedName",
														"src": "1783:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1794:11:6",
														"nodeType": "YulTypedName",
														"src": "1794:11:6",
														"type": ""
													}
												],
												"src": "1710:169:6"
											},
											{
												"body": {
													"nativeSrc": "1991:76:6",
													"nodeType": "YulBlock",
													"src": "1991:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2013:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2013:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2021:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2021:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2009:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2009:3:6"
																		},
																		"nativeSrc": "2009:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2009:14:6"
																	},
																	{
																		"hexValue": "54686520546f6b656e20616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "2025:34:6",
																		"nodeType": "YulLiteral",
																		"src": "2025:34:6",
																		"type": "",
																		"value": "The Token address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2002:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:6:6"
																},
																"nativeSrc": "2002:58:6",
																"nodeType": "YulFunctionCall",
																"src": "2002:58:6"
															},
															"nativeSrc": "2002:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "2002:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13",
												"nativeSrc": "1885:182:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1983:6:6",
														"nodeType": "YulTypedName",
														"src": "1983:6:6",
														"type": ""
													}
												],
												"src": "1885:182:6"
											},
											{
												"body": {
													"nativeSrc": "2219:220:6",
													"nodeType": "YulBlock",
													"src": "2219:220:6",
													"statements": [
														{
															"nativeSrc": "2229:74:6",
															"nodeType": "YulAssignment",
															"src": "2229:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2295:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2295:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2300:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2300:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2236:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2236:58:6"
																},
																"nativeSrc": "2236:67:6",
																"nodeType": "YulFunctionCall",
																"src": "2236:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2229:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2229:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2401:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2401:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13",
																	"nativeSrc": "2312:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "2312:88:6"
																},
																"nativeSrc": "2312:93:6",
																"nodeType": "YulFunctionCall",
																"src": "2312:93:6"
															},
															"nativeSrc": "2312:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "2312:93:6"
														},
														{
															"nativeSrc": "2414:19:6",
															"nodeType": "YulAssignment",
															"src": "2414:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2425:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2425:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2430:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2430:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2421:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2421:3:6"
																},
																"nativeSrc": "2421:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2421:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2414:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2414:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2073:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2207:3:6",
														"nodeType": "YulTypedName",
														"src": "2207:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2215:3:6",
														"nodeType": "YulTypedName",
														"src": "2215:3:6",
														"type": ""
													}
												],
												"src": "2073:366:6"
											},
											{
												"body": {
													"nativeSrc": "2616:248:6",
													"nodeType": "YulBlock",
													"src": "2616:248:6",
													"statements": [
														{
															"nativeSrc": "2626:26:6",
															"nodeType": "YulAssignment",
															"src": "2626:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2638:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2638:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2649:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2649:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2634:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2634:3:6"
																},
																"nativeSrc": "2634:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2634:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2626:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2626:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2673:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2673:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2684:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2684:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2669:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2669:3:6"
																		},
																		"nativeSrc": "2669:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2669:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2692:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2692:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2698:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2698:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2688:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2688:3:6"
																		},
																		"nativeSrc": "2688:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2688:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2662:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2662:6:6"
																},
																"nativeSrc": "2662:47:6",
																"nodeType": "YulFunctionCall",
																"src": "2662:47:6"
															},
															"nativeSrc": "2662:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "2662:47:6"
														},
														{
															"nativeSrc": "2718:139:6",
															"nodeType": "YulAssignment",
															"src": "2718:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2852:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2852:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2726:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "2726:124:6"
																},
																"nativeSrc": "2726:131:6",
																"nodeType": "YulFunctionCall",
																"src": "2726:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2718:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2718:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2445:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2596:9:6",
														"nodeType": "YulTypedName",
														"src": "2596:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2611:4:6",
														"nodeType": "YulTypedName",
														"src": "2611:4:6",
														"type": ""
													}
												],
												"src": "2445:419:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13(memPtr) {\n\n        mstore(add(memPtr, 0), \"The Token address cannot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b5060405161196638038061196683398181016040528101906100319190610281565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102ce565b60405180910390fd5b6100b18161016260201b60201c565b50600180819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e90610341565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505061035f565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61025082610227565b9050919050565b61026081610246565b811461026a575f80fd5b50565b5f8151905061027b81610257565b92915050565b5f806040838503121561029757610296610223565b5b5f6102a48582860161026d565b92505060206102b58582860161026d565b9150509250929050565b6102c881610246565b82525050565b5f6020820190506102e15f8301846102bf565b92915050565b5f82825260208201905092915050565b7f54686520546f6b656e20616464726573732063616e6e6f74206265207a65726f5f82015250565b5f61032b6020836102e7565b9150610336826102f7565b602082019050919050565b5f6020820190508181035f8301526103588161031f565b9050919050565b6080516115da61038c5f395f8181610683015281816108820152818161095c0152610c0b01526115da5ff3fe608060405234801561000f575f80fd5b50600436106100cd575f3560e01c8063817b1cd21161008a578063a694fc3a11610064578063a694fc3a146101ed578063bb4d443614610209578063f2fde38b14610239578063f96dae0a14610255576100cd565b8063817b1cd2146101805780638da5cb5b1461019e578063a0873111146101bc576100cd565b806318fb4f32146100d15780633b64916e146100ed5780633ccfd60b1461011e5780636021726714610128578063715018a61461015857806379b5786214610162575b5f80fd5b6100eb60048036038101906100e69190610e35565b610273565b005b61010760048036038101906101029190610eba565b61053f565b604051610115929190610ef4565b60405180910390f35b610126610594565b005b610142600480360381019061013d9190610eba565b6107b9565b60405161014f9190610f1b565b60405180910390f35b6101606107ce565b005b61016a6107e1565b6040516101779190610f1b565b60405180910390f35b6101886107e8565b6040516101959190610f1b565b60405180910390f35b6101a66107ee565b6040516101b39190610f43565b60405180910390f35b6101d660048036038101906101d19190610eba565b610815565b6040516101e4929190610ef4565b60405180910390f35b61020760048036038101906102029190610e35565b610835565b005b610223600480360381019061021e9190610eba565b610b3f565b6040516102309190610f1b565b60405180910390f35b610253600480360381019061024e9190610eba565b610b85565b005b61025d610c09565b60405161026a9190610fb7565b60405180910390f35b61027b610c2d565b5f81116102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b49061102a565b60405180910390fd5b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561033d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033490611092565b60405180910390fd5b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154146103be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b5906110fa565b60405180910390fd5b61040e8160025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610c7c90919063ffffffff16565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061046481600354610c7c90919063ffffffff16565b6003819055505f62093a804261047a9190611145565b905060405180604001604052808381526020018281525060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f0155602082015181600101559050503373ffffffffffffffffffffffffffffffffffffffff167f9cee5eacd317086e5050733a5dad16ef5aaec185de792371a9625bfee2a3213b838360405161052b929190610ef4565b60405180910390a25061053c610c91565b50565b5f805f60045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050805f015481600101549250925050915091565b61059c610c2d565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015411610621576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610618906111c2565b60405180910390fd5b8060010154421015610668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065f9061122a565b60405180910390fd5b5f815f015490505f825f01819055505f82600101819055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016106dc929190611248565b6020604051808303815f875af11580156106f8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061071c91906112a4565b90508061075e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107559061133f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364836040516107a49190610f1b565b60405180910390a25050506107b7610c91565b565b6002602052805f5260405f205f915090505481565b6107d6610c9a565b6107df5f610d21565b565b62093a8081565b60035481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6004602052805f5260405f205f91509050805f0154908060010154905082565b61083d610c2d565b5f811161087f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610876906113a7565b60405180910390fd5b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108d99190610f43565b602060405180830381865afa1580156108f4573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061091891906113d9565b1015610959576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109509061144e565b60405180910390fd5b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016109b79392919061146c565b6020604051808303815f875af11580156109d3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109f791906112a4565b905080610a39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a30906114eb565b60405180910390fd5b610a898260025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610de290919063ffffffff16565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610adf82600354610de290919063ffffffff16565b6003819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d83604051610b2b9190610f1b565b60405180910390a250610b3c610c91565b50565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610b8d610c9a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bfd575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610bf49190610f43565b60405180910390fd5b610c0681610d21565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b600260015403610c72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6990611553565b60405180910390fd5b6002600181905550565b5f8183610c899190611571565b905092915050565b60018081905550565b610ca2610df7565b73ffffffffffffffffffffffffffffffffffffffff16610cc06107ee565b73ffffffffffffffffffffffffffffffffffffffff1614610d1f57610ce3610df7565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d169190610f43565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8183610def9190611145565b905092915050565b5f33905090565b5f80fd5b5f819050919050565b610e1481610e02565b8114610e1e575f80fd5b50565b5f81359050610e2f81610e0b565b92915050565b5f60208284031215610e4a57610e49610dfe565b5b5f610e5784828501610e21565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610e8982610e60565b9050919050565b610e9981610e7f565b8114610ea3575f80fd5b50565b5f81359050610eb481610e90565b92915050565b5f60208284031215610ecf57610ece610dfe565b5b5f610edc84828501610ea6565b91505092915050565b610eee81610e02565b82525050565b5f604082019050610f075f830185610ee5565b610f146020830184610ee5565b9392505050565b5f602082019050610f2e5f830184610ee5565b92915050565b610f3d81610e7f565b82525050565b5f602082019050610f565f830184610f34565b92915050565b5f819050919050565b5f610f7f610f7a610f7584610e60565b610f5c565b610e60565b9050919050565b5f610f9082610f65565b9050919050565b5f610fa182610f86565b9050919050565b610fb181610f97565b82525050565b5f602082019050610fca5f830184610fa8565b92915050565b5f82825260208201905092915050565b7f43616e6e6f7420556e7374616b65207a65726f20746f6b656e730000000000005f82015250565b5f611014601a83610fd0565b915061101f82610fe0565b602082019050919050565b5f6020820190508181035f83015261104181611008565b9050919050565b7f496e73756666696369656e74207374616b65642062616c616e636500000000005f82015250565b5f61107c601b83610fd0565b915061108782611048565b602082019050919050565b5f6020820190508181035f8301526110a981611070565b9050919050565b7f556e7374616b6520416c726561647920696e2050726f636573730000000000005f82015250565b5f6110e4601a83610fd0565b91506110ef826110b0565b602082019050919050565b5f6020820190508181035f830152611111816110d8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61114f82610e02565b915061115a83610e02565b925082820190508082111561117257611171611118565b5b92915050565b7f4e6f20556e7374616b65205265717565737420466f756e6400000000000000005f82015250565b5f6111ac601883610fd0565b91506111b782611178565b602082019050919050565b5f6020820190508181035f8301526111d9816111a0565b9050919050565b7f556e7374616b6520706572696f64206e6f74206f7665720000000000000000005f82015250565b5f611214601783610fd0565b915061121f826111e0565b602082019050919050565b5f6020820190508181035f83015261124181611208565b9050919050565b5f60408201905061125b5f830185610f34565b6112686020830184610ee5565b9392505050565b5f8115159050919050565b6112838161126f565b811461128d575f80fd5b50565b5f8151905061129e8161127a565b92915050565b5f602082840312156112b9576112b8610dfe565b5b5f6112c684828501611290565b91505092915050565b7f546f6b656e205472616e73666572204661696c656420647572696e6720556e535f8201527f74616b696e672050726f63657373000000000000000000000000000000000000602082015250565b5f611329602e83610fd0565b9150611334826112cf565b604082019050919050565b5f6020820190508181035f8301526113568161131d565b9050919050565b7f43616e6e6f74207374616b65207a65726f20546f6b656e7300000000000000005f82015250565b5f611391601883610fd0565b915061139c8261135d565b602082019050919050565b5f6020820190508181035f8301526113be81611385565b9050919050565b5f815190506113d381610e0b565b92915050565b5f602082840312156113ee576113ed610dfe565b5b5f6113fb848285016113c5565b91505092915050565b7f496e73756666696369656e742042616c616e63650000000000000000000000005f82015250565b5f611438601483610fd0565b915061144382611404565b602082019050919050565b5f6020820190508181035f8301526114658161142c565b9050919050565b5f60608201905061147f5f830186610f34565b61148c6020830185610f34565b6114996040830184610ee5565b949350505050565b7f5472616e73666572204661696c656400000000000000000000000000000000005f82015250565b5f6114d5600f83610fd0565b91506114e0826114a1565b602082019050919050565b5f6020820190508181035f830152611502816114c9565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61153d601f83610fd0565b915061154882611509565b602082019050919050565b5f6020820190508181035f83015261156a81611531565b9050919050565b5f61157b82610e02565b915061158683610e02565b925082820390508181111561159e5761159d611118565b5b9291505056fea2646970667358221220fa7070370293574d30dfd8e05efd63bd8f2b2509d3c1a00919f1144eff2ce81f64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1966 CODESIZE SUB DUP1 PUSH2 0x1966 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x281 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x162 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E SWAP1 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x35F JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x250 DUP3 PUSH2 0x227 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x260 DUP2 PUSH2 0x246 JUMP JUMPDEST DUP2 EQ PUSH2 0x26A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27B DUP2 PUSH2 0x257 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x297 JUMPI PUSH2 0x296 PUSH2 0x223 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A4 DUP6 DUP3 DUP7 ADD PUSH2 0x26D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B5 DUP6 DUP3 DUP7 ADD PUSH2 0x26D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C8 DUP2 PUSH2 0x246 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x2BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520546F6B656E20616464726573732063616E6E6F74206265207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32B PUSH1 0x20 DUP4 PUSH2 0x2E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x336 DUP3 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x358 DUP2 PUSH2 0x31F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x15DA PUSH2 0x38C PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x683 ADD MSTORE DUP2 DUP2 PUSH2 0x882 ADD MSTORE DUP2 DUP2 PUSH2 0x95C ADD MSTORE PUSH2 0xC0B ADD MSTORE PUSH2 0x15DA PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xBB4D4436 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xF96DAE0A EQ PUSH2 0x255 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xA0873111 EQ PUSH2 0x1BC JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x18FB4F32 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x3B64916E EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x60217267 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x79B57862 EQ PUSH2 0x162 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP3 SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x594 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x160 PUSH2 0x7CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP3 SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH2 0x835 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0xB85 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25D PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0xC2D JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x2BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B4 SWAP1 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ PUSH2 0x3BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B5 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40E DUP2 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xC7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x464 DUP2 PUSH1 0x3 SLOAD PUSH2 0xC7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH0 PUSH3 0x93A80 TIMESTAMP PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x1145 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9CEE5EACD317086E5050733A5DAD16EF5AAEC185DE792371A9625BFEE2A3213B DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x52B SWAP3 SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x53C PUSH2 0xC91 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x59C PUSH2 0xC2D JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x621 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x618 SWAP1 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x668 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DC SWAP3 SWAP2 SWAP1 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71C SWAP2 SWAP1 PUSH2 0x12A4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x755 SWAP1 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7A4 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x7B7 PUSH2 0xC91 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7D6 PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x7DF PUSH0 PUSH2 0xD21 JUMP JUMPDEST JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x83D PUSH2 0xC2D JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x876 SWAP1 PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x918 SWAP2 SWAP1 PUSH2 0x13D9 JUMP JUMPDEST LT ISZERO PUSH2 0x959 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x950 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x146C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9D3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F7 SWAP2 SWAP1 PUSH2 0x12A4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP1 PUSH2 0x14EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA89 DUP3 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xADF DUP3 PUSH1 0x3 SLOAD PUSH2 0xDE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD PUSH2 0xB2B SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xB3C PUSH2 0xC91 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8D PUSH2 0xC9A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBFD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC06 DUP2 PUSH2 0xD21 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xC72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC69 SWAP1 PUSH2 0x1553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xC89 SWAP2 SWAP1 PUSH2 0x1571 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xCA2 PUSH2 0xDF7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCC0 PUSH2 0x7EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD1F JUMPI PUSH2 0xCE3 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD16 SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xDEF SWAP2 SWAP1 PUSH2 0x1145 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE14 DUP2 PUSH2 0xE02 JUMP JUMPDEST DUP2 EQ PUSH2 0xE1E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE2F DUP2 PUSH2 0xE0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4A JUMPI PUSH2 0xE49 PUSH2 0xDFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE57 DUP5 DUP3 DUP6 ADD PUSH2 0xE21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE89 DUP3 PUSH2 0xE60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE99 DUP2 PUSH2 0xE7F JUMP JUMPDEST DUP2 EQ PUSH2 0xEA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB4 DUP2 PUSH2 0xE90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECF JUMPI PUSH2 0xECE PUSH2 0xDFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEDC DUP5 DUP3 DUP6 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEEE DUP2 PUSH2 0xE02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF07 PUSH0 DUP4 ADD DUP6 PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0xF14 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEE5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF2E PUSH0 DUP4 ADD DUP5 PUSH2 0xEE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF3D DUP2 PUSH2 0xE7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF56 PUSH0 DUP4 ADD DUP5 PUSH2 0xF34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF7F PUSH2 0xF7A PUSH2 0xF75 DUP5 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0xF5C JUMP JUMPDEST PUSH2 0xE60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF90 DUP3 PUSH2 0xF65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFA1 DUP3 PUSH2 0xF86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB1 DUP2 PUSH2 0xF97 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCA PUSH0 DUP4 ADD DUP5 PUSH2 0xFA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420556E7374616B65207A65726F20746F6B656E73000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1014 PUSH1 0x1A DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x101F DUP3 PUSH2 0xFE0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1041 DUP2 PUSH2 0x1008 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x107C PUSH1 0x1B DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1087 DUP3 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10A9 DUP2 PUSH2 0x1070 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E7374616B6520416C726561647920696E2050726F63657373000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10E4 PUSH1 0x1A DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x10EF DUP3 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1111 DUP2 PUSH2 0x10D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x114F DUP3 PUSH2 0xE02 JUMP JUMPDEST SWAP2 POP PUSH2 0x115A DUP4 PUSH2 0xE02 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1172 JUMPI PUSH2 0x1171 PUSH2 0x1118 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20556E7374616B65205265717565737420466F756E640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11AC PUSH1 0x18 DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B7 DUP3 PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11D9 DUP2 PUSH2 0x11A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E7374616B6520706572696F64206E6F74206F766572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1214 PUSH1 0x17 DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x121F DUP3 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1241 DUP2 PUSH2 0x1208 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x125B PUSH0 DUP4 ADD DUP6 PUSH2 0xF34 JUMP JUMPDEST PUSH2 0x1268 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEE5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1283 DUP2 PUSH2 0x126F JUMP JUMPDEST DUP2 EQ PUSH2 0x128D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x129E DUP2 PUSH2 0x127A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B9 JUMPI PUSH2 0x12B8 PUSH2 0xDFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12C6 DUP5 DUP3 DUP6 ADD PUSH2 0x1290 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E205472616E73666572204661696C656420647572696E6720556E53 PUSH0 DUP3 ADD MSTORE PUSH32 0x74616B696E672050726F63657373000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1329 PUSH1 0x2E DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1334 DUP3 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1356 DUP2 PUSH2 0x131D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B65207A65726F20546F6B656E730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1391 PUSH1 0x18 DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x139C DUP3 PUSH2 0x135D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13BE DUP2 PUSH2 0x1385 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x13D3 DUP2 PUSH2 0xE0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13EE JUMPI PUSH2 0x13ED PUSH2 0xDFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13FB DUP5 DUP3 DUP6 ADD PUSH2 0x13C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742042616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1438 PUSH1 0x14 DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1443 DUP3 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1465 DUP2 PUSH2 0x142C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x147F PUSH0 DUP4 ADD DUP7 PUSH2 0xF34 JUMP JUMPDEST PUSH2 0x148C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF34 JUMP JUMPDEST PUSH2 0x1499 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEE5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572204661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14D5 PUSH1 0xF DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x14E0 DUP3 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1502 DUP2 PUSH2 0x14C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x153D PUSH1 0x1F DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1548 DUP3 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x156A DUP2 PUSH2 0x1531 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x157B DUP3 PUSH2 0xE02 JUMP JUMPDEST SWAP2 POP PUSH2 0x1586 DUP4 PUSH2 0xE02 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x159E JUMPI PUSH2 0x159D PUSH2 0x1118 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL PUSH17 0x70370293574D30DFD8E05EFD63BD8F2B25 MULMOD 0xD3 0xC1 LOG0 MULMOD NOT CALL EQ 0x4E SELFDESTRUCT 0x2C 0xE8 0x1F PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "291:4692:5:-:0;;;1213:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1279:13;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:1;1821:7;:22;;;;1337:1:5::1;1312:27;;:13;:27;;::::0;1304:72:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1411:13;1386:39;;;;;;;;::::0;::::1;1213:219:::0;;291:4692;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;1710:169::-;1794:11;1828:6;1823:3;1816:19;1868:4;1863:3;1859:14;1844:29;;1710:169;;;;:::o;1885:182::-;2025:34;2021:1;2013:6;2009:14;2002:58;1885:182;:::o;2073:366::-;2215:3;2236:67;2300:2;2295:3;2236:67;:::i;:::-;2229:74;;2312:93;2401:3;2312:93;:::i;:::-;2430:2;2425:3;2421:12;2414:19;;2073:366;;;:::o;2445:419::-;2611:4;2649:2;2638:9;2634:18;2626:26;;2698:9;2692:4;2688:20;2684:1;2673:9;2669:17;2662:47;2726:131;2852:4;2726:131;:::i;:::-;2718:139;;2445:419;;;:::o;291:4692:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UNSTAKE_PERIOD_667": {
									"entryPoint": 2017,
									"id": 667,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3226,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_302": {
									"entryPoint": 3575,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": 3217,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 3117,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3361,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_496": {
									"entryPoint": 3554,
									"id": 496,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getUnstakedRequest_973": {
									"entryPoint": 1343,
									"id": 973,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getVotingPower_949": {
									"entryPoint": 2879,
									"id": 949,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@governanceToken_648": {
									"entryPoint": 3081,
									"id": 648,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initiateUnstaking_867": {
									"entryPoint": 627,
									"id": 867,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 2030,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1998,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_786": {
									"entryPoint": 2101,
									"id": 786,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedBalance_652": {
									"entryPoint": 1977,
									"id": 652,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_511": {
									"entryPoint": 3196,
									"id": 511,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalStaked_654": {
									"entryPoint": 2024,
									"id": 654,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2949,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstakingRequest_664": {
									"entryPoint": 2069,
									"id": 664,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_936": {
									"entryPoint": 1428,
									"id": 936,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack": {
									"entryPoint": 4008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5228,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4680,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed": {
									"entryPoint": 4023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3828,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$290_to_t_address": {
									"entryPoint": 3991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4376,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3582,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc": {
									"entryPoint": 4064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3": {
									"entryPoint": 4815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2": {
									"entryPoint": 4168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82": {
									"entryPoint": 5124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660": {
									"entryPoint": 4272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f": {
									"entryPoint": 5281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87": {
									"entryPoint": 4957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed": {
									"entryPoint": 4576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 5385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16410:6",
										"nodeType": "YulBlock",
										"src": "0:16410:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:32:6",
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nativeSrc": "389:16:6",
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:6",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nativeSrc": "460:79:6",
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:6",
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:6",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:6",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nativeSrc": "519:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nativeSrc": "519:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nativeSrc": "490:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nativeSrc": "480:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nativeSrc": "473:43:6",
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nativeSrc": "470:63:6",
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:6",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nativeSrc": "597:87:6",
													"nodeType": "YulBlock",
													"src": "597:87:6",
													"statements": [
														{
															"nativeSrc": "607:29:6",
															"nodeType": "YulAssignment",
															"src": "607:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:6"
																},
																"nativeSrc": "616:20:6",
																"nodeType": "YulFunctionCall",
																"src": "616:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:6"
																},
																"nativeSrc": "645:33:6",
																"nodeType": "YulFunctionCall",
																"src": "645:33:6"
															},
															"nativeSrc": "645:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:6",
														"nodeType": "YulTypedName",
														"src": "575:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:6",
														"nodeType": "YulTypedName",
														"src": "583:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:6",
														"nodeType": "YulTypedName",
														"src": "591:5:6",
														"type": ""
													}
												],
												"src": "545:139:6"
											},
											{
												"body": {
													"nativeSrc": "756:263:6",
													"nodeType": "YulBlock",
													"src": "756:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:6",
																"nodeType": "YulBlock",
																"src": "802:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:6"
																			},
																			"nativeSrc": "804:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:6"
																		},
																		"nativeSrc": "804:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:6"
																		},
																		"nativeSrc": "773:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:6",
																		"nodeType": "YulLiteral",
																		"src": "798:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:6"
																},
																"nativeSrc": "769:32:6",
																"nodeType": "YulFunctionCall",
																"src": "769:32:6"
															},
															"nativeSrc": "766:119:6",
															"nodeType": "YulIf",
															"src": "766:119:6"
														},
														{
															"nativeSrc": "895:117:6",
															"nodeType": "YulBlock",
															"src": "895:117:6",
															"statements": [
																{
																	"nativeSrc": "910:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:6",
																		"nodeType": "YulLiteral",
																		"src": "924:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:6",
																			"nodeType": "YulTypedName",
																			"src": "914:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:6",
																	"nodeType": "YulAssignment",
																	"src": "939:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:6"
																				},
																				"nativeSrc": "970:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:6"
																		},
																		"nativeSrc": "949:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:6",
														"nodeType": "YulTypedName",
														"src": "726:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:6",
														"nodeType": "YulTypedName",
														"src": "737:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:6",
														"nodeType": "YulTypedName",
														"src": "749:6:6",
														"type": ""
													}
												],
												"src": "690:329:6"
											},
											{
												"body": {
													"nativeSrc": "1070:81:6",
													"nodeType": "YulBlock",
													"src": "1070:81:6",
													"statements": [
														{
															"nativeSrc": "1080:65:6",
															"nodeType": "YulAssignment",
															"src": "1080:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:6"
																},
																"nativeSrc": "1091:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:6",
														"nodeType": "YulTypedName",
														"src": "1052:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:6",
														"nodeType": "YulTypedName",
														"src": "1062:7:6",
														"type": ""
													}
												],
												"src": "1025:126:6"
											},
											{
												"body": {
													"nativeSrc": "1202:51:6",
													"nodeType": "YulBlock",
													"src": "1202:51:6",
													"statements": [
														{
															"nativeSrc": "1212:35:6",
															"nodeType": "YulAssignment",
															"src": "1212:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1241:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1223:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:6"
																},
																"nativeSrc": "1223:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1223:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1212:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1157:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1184:5:6",
														"nodeType": "YulTypedName",
														"src": "1184:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1194:7:6",
														"nodeType": "YulTypedName",
														"src": "1194:7:6",
														"type": ""
													}
												],
												"src": "1157:96:6"
											},
											{
												"body": {
													"nativeSrc": "1302:79:6",
													"nodeType": "YulBlock",
													"src": "1302:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1359:16:6",
																"nodeType": "YulBlock",
																"src": "1359:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1368:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1371:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1361:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:6"
																			},
																			"nativeSrc": "1361:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:6"
																		},
																		"nativeSrc": "1361:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1325:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1325:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1350:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1350:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1332:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1332:17:6"
																				},
																				"nativeSrc": "1332:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1332:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1322:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:6"
																		},
																		"nativeSrc": "1322:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1322:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1315:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:6"
																},
																"nativeSrc": "1315:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1315:43:6"
															},
															"nativeSrc": "1312:63:6",
															"nodeType": "YulIf",
															"src": "1312:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1259:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1295:5:6",
														"nodeType": "YulTypedName",
														"src": "1295:5:6",
														"type": ""
													}
												],
												"src": "1259:122:6"
											},
											{
												"body": {
													"nativeSrc": "1439:87:6",
													"nodeType": "YulBlock",
													"src": "1439:87:6",
													"statements": [
														{
															"nativeSrc": "1449:29:6",
															"nodeType": "YulAssignment",
															"src": "1449:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1471:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1458:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:6"
																},
																"nativeSrc": "1458:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1458:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1449:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1449:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1514:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1487:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1487:26:6"
																},
																"nativeSrc": "1487:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1487:33:6"
															},
															"nativeSrc": "1487:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1487:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1387:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1417:6:6",
														"nodeType": "YulTypedName",
														"src": "1417:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1425:3:6",
														"nodeType": "YulTypedName",
														"src": "1425:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1433:5:6",
														"nodeType": "YulTypedName",
														"src": "1433:5:6",
														"type": ""
													}
												],
												"src": "1387:139:6"
											},
											{
												"body": {
													"nativeSrc": "1598:263:6",
													"nodeType": "YulBlock",
													"src": "1598:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1644:83:6",
																"nodeType": "YulBlock",
																"src": "1644:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1646:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1646:77:6"
																			},
																			"nativeSrc": "1646:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1646:79:6"
																		},
																		"nativeSrc": "1646:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1646:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1619:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1619:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1628:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1628:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1615:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1615:3:6"
																		},
																		"nativeSrc": "1615:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1615:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1640:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1611:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1611:3:6"
																},
																"nativeSrc": "1611:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1611:32:6"
															},
															"nativeSrc": "1608:119:6",
															"nodeType": "YulIf",
															"src": "1608:119:6"
														},
														{
															"nativeSrc": "1737:117:6",
															"nodeType": "YulBlock",
															"src": "1737:117:6",
															"statements": [
																{
																	"nativeSrc": "1752:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1752:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1766:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1766:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1756:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1756:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1781:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1781:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1816:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1816:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1827:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1827:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1812:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1812:3:6"
																				},
																				"nativeSrc": "1812:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1812:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1836:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1836:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1791:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1791:20:6"
																		},
																		"nativeSrc": "1791:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1791:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1781:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1781:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1532:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1568:9:6",
														"nodeType": "YulTypedName",
														"src": "1568:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1579:7:6",
														"nodeType": "YulTypedName",
														"src": "1579:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1591:6:6",
														"nodeType": "YulTypedName",
														"src": "1591:6:6",
														"type": ""
													}
												],
												"src": "1532:329:6"
											},
											{
												"body": {
													"nativeSrc": "1932:53:6",
													"nodeType": "YulBlock",
													"src": "1932:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1949:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1972:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1972:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1954:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1954:17:6"
																		},
																		"nativeSrc": "1954:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1954:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1942:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:6"
																},
																"nativeSrc": "1942:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1942:37:6"
															},
															"nativeSrc": "1942:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1942:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1867:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1920:5:6",
														"nodeType": "YulTypedName",
														"src": "1920:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1927:3:6",
														"nodeType": "YulTypedName",
														"src": "1927:3:6",
														"type": ""
													}
												],
												"src": "1867:118:6"
											},
											{
												"body": {
													"nativeSrc": "2117:206:6",
													"nodeType": "YulBlock",
													"src": "2117:206:6",
													"statements": [
														{
															"nativeSrc": "2127:26:6",
															"nodeType": "YulAssignment",
															"src": "2127:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2139:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2139:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2150:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2150:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2135:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2135:3:6"
																},
																"nativeSrc": "2135:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2135:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2127:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2127:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2207:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2207:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2220:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2220:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2231:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2216:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2216:3:6"
																		},
																		"nativeSrc": "2216:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2216:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2163:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2163:43:6"
																},
																"nativeSrc": "2163:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2163:71:6"
															},
															"nativeSrc": "2163:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "2163:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2288:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2288:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2301:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2301:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2312:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2312:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2297:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2297:3:6"
																		},
																		"nativeSrc": "2297:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2297:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2244:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2244:43:6"
																},
																"nativeSrc": "2244:72:6",
																"nodeType": "YulFunctionCall",
																"src": "2244:72:6"
															},
															"nativeSrc": "2244:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "2244:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1991:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2081:9:6",
														"nodeType": "YulTypedName",
														"src": "2081:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2093:6:6",
														"nodeType": "YulTypedName",
														"src": "2093:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2101:6:6",
														"nodeType": "YulTypedName",
														"src": "2101:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2112:4:6",
														"nodeType": "YulTypedName",
														"src": "2112:4:6",
														"type": ""
													}
												],
												"src": "1991:332:6"
											},
											{
												"body": {
													"nativeSrc": "2427:124:6",
													"nodeType": "YulBlock",
													"src": "2427:124:6",
													"statements": [
														{
															"nativeSrc": "2437:26:6",
															"nodeType": "YulAssignment",
															"src": "2437:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2449:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2449:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2460:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2460:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2445:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2445:3:6"
																},
																"nativeSrc": "2445:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2445:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2437:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2437:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2517:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2517:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2530:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2530:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2541:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2541:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2526:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2526:3:6"
																		},
																		"nativeSrc": "2526:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2526:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2473:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2473:43:6"
																},
																"nativeSrc": "2473:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2473:71:6"
															},
															"nativeSrc": "2473:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "2473:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2329:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2399:9:6",
														"nodeType": "YulTypedName",
														"src": "2399:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2411:6:6",
														"nodeType": "YulTypedName",
														"src": "2411:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2422:4:6",
														"nodeType": "YulTypedName",
														"src": "2422:4:6",
														"type": ""
													}
												],
												"src": "2329:222:6"
											},
											{
												"body": {
													"nativeSrc": "2622:53:6",
													"nodeType": "YulBlock",
													"src": "2622:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2639:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2639:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2662:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2662:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2644:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "2644:17:6"
																		},
																		"nativeSrc": "2644:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2644:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2632:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2632:6:6"
																},
																"nativeSrc": "2632:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2632:37:6"
															},
															"nativeSrc": "2632:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "2632:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2557:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2610:5:6",
														"nodeType": "YulTypedName",
														"src": "2610:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2617:3:6",
														"nodeType": "YulTypedName",
														"src": "2617:3:6",
														"type": ""
													}
												],
												"src": "2557:118:6"
											},
											{
												"body": {
													"nativeSrc": "2779:124:6",
													"nodeType": "YulBlock",
													"src": "2779:124:6",
													"statements": [
														{
															"nativeSrc": "2789:26:6",
															"nodeType": "YulAssignment",
															"src": "2789:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2801:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2801:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2812:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2812:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2797:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2797:3:6"
																},
																"nativeSrc": "2797:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2797:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2789:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2789:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2869:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2869:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2882:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2882:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2893:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2893:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2878:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2878:3:6"
																		},
																		"nativeSrc": "2878:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2878:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2825:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2825:43:6"
																},
																"nativeSrc": "2825:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2825:71:6"
															},
															"nativeSrc": "2825:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "2825:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2681:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2751:9:6",
														"nodeType": "YulTypedName",
														"src": "2751:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2763:6:6",
														"nodeType": "YulTypedName",
														"src": "2763:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2774:4:6",
														"nodeType": "YulTypedName",
														"src": "2774:4:6",
														"type": ""
													}
												],
												"src": "2681:222:6"
											},
											{
												"body": {
													"nativeSrc": "2941:28:6",
													"nodeType": "YulBlock",
													"src": "2941:28:6",
													"statements": [
														{
															"nativeSrc": "2951:12:6",
															"nodeType": "YulAssignment",
															"src": "2951:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "2958:5:6",
																"nodeType": "YulIdentifier",
																"src": "2958:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2951:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2951:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2909:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2927:5:6",
														"nodeType": "YulTypedName",
														"src": "2927:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2937:3:6",
														"nodeType": "YulTypedName",
														"src": "2937:3:6",
														"type": ""
													}
												],
												"src": "2909:60:6"
											},
											{
												"body": {
													"nativeSrc": "3035:82:6",
													"nodeType": "YulBlock",
													"src": "3035:82:6",
													"statements": [
														{
															"nativeSrc": "3045:66:6",
															"nodeType": "YulAssignment",
															"src": "3045:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3103:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3103:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3085:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3085:17:6"
																				},
																				"nativeSrc": "3085:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3085:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3076:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "3076:8:6"
																		},
																		"nativeSrc": "3076:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3076:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3058:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3058:17:6"
																},
																"nativeSrc": "3058:53:6",
																"nodeType": "YulFunctionCall",
																"src": "3058:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3045:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3045:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2975:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3015:5:6",
														"nodeType": "YulTypedName",
														"src": "3015:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3025:9:6",
														"nodeType": "YulTypedName",
														"src": "3025:9:6",
														"type": ""
													}
												],
												"src": "2975:142:6"
											},
											{
												"body": {
													"nativeSrc": "3183:66:6",
													"nodeType": "YulBlock",
													"src": "3183:66:6",
													"statements": [
														{
															"nativeSrc": "3193:50:6",
															"nodeType": "YulAssignment",
															"src": "3193:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3237:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3206:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3206:30:6"
																},
																"nativeSrc": "3206:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3206:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3193:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3193:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3123:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3163:5:6",
														"nodeType": "YulTypedName",
														"src": "3163:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3173:9:6",
														"nodeType": "YulTypedName",
														"src": "3173:9:6",
														"type": ""
													}
												],
												"src": "3123:126:6"
											},
											{
												"body": {
													"nativeSrc": "3329:66:6",
													"nodeType": "YulBlock",
													"src": "3329:66:6",
													"statements": [
														{
															"nativeSrc": "3339:50:6",
															"nodeType": "YulAssignment",
															"src": "3339:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3383:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3383:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3352:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3352:30:6"
																},
																"nativeSrc": "3352:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3352:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3339:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3339:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$290_to_t_address",
												"nativeSrc": "3255:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3309:5:6",
														"nodeType": "YulTypedName",
														"src": "3309:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3319:9:6",
														"nodeType": "YulTypedName",
														"src": "3319:9:6",
														"type": ""
													}
												],
												"src": "3255:140:6"
											},
											{
												"body": {
													"nativeSrc": "3480:80:6",
													"nodeType": "YulBlock",
													"src": "3480:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3497:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3497:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3547:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3547:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$290_to_t_address",
																			"nativeSrc": "3502:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "3502:44:6"
																		},
																		"nativeSrc": "3502:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3502:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3490:6:6"
																},
																"nativeSrc": "3490:64:6",
																"nodeType": "YulFunctionCall",
																"src": "3490:64:6"
															},
															"nativeSrc": "3490:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "3490:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
												"nativeSrc": "3401:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3468:5:6",
														"nodeType": "YulTypedName",
														"src": "3468:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3475:3:6",
														"nodeType": "YulTypedName",
														"src": "3475:3:6",
														"type": ""
													}
												],
												"src": "3401:159:6"
											},
											{
												"body": {
													"nativeSrc": "3678:138:6",
													"nodeType": "YulBlock",
													"src": "3678:138:6",
													"statements": [
														{
															"nativeSrc": "3688:26:6",
															"nodeType": "YulAssignment",
															"src": "3688:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3700:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3700:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3711:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3711:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3696:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3696:3:6"
																},
																"nativeSrc": "3696:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3696:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3688:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3688:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3782:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3782:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3795:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3795:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3806:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3806:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3791:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3791:3:6"
																		},
																		"nativeSrc": "3791:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3791:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
																	"nativeSrc": "3724:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "3724:57:6"
																},
																"nativeSrc": "3724:85:6",
																"nodeType": "YulFunctionCall",
																"src": "3724:85:6"
															},
															"nativeSrc": "3724:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "3724:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed",
												"nativeSrc": "3566:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3650:9:6",
														"nodeType": "YulTypedName",
														"src": "3650:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3662:6:6",
														"nodeType": "YulTypedName",
														"src": "3662:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3673:4:6",
														"nodeType": "YulTypedName",
														"src": "3673:4:6",
														"type": ""
													}
												],
												"src": "3566:250:6"
											},
											{
												"body": {
													"nativeSrc": "3918:73:6",
													"nodeType": "YulBlock",
													"src": "3918:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3935:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3935:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3940:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3940:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3928:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3928:6:6"
																},
																"nativeSrc": "3928:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3928:19:6"
															},
															"nativeSrc": "3928:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3928:19:6"
														},
														{
															"nativeSrc": "3956:29:6",
															"nodeType": "YulAssignment",
															"src": "3956:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3975:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3975:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3980:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3980:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3971:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3971:3:6"
																},
																"nativeSrc": "3971:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3971:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3956:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "3956:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3822:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3890:3:6",
														"nodeType": "YulTypedName",
														"src": "3890:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3895:6:6",
														"nodeType": "YulTypedName",
														"src": "3895:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3906:11:6",
														"nodeType": "YulTypedName",
														"src": "3906:11:6",
														"type": ""
													}
												],
												"src": "3822:169:6"
											},
											{
												"body": {
													"nativeSrc": "4103:70:6",
													"nodeType": "YulBlock",
													"src": "4103:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4125:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4125:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4133:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4133:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4121:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4121:3:6"
																		},
																		"nativeSrc": "4121:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4121:14:6"
																	},
																	{
																		"hexValue": "43616e6e6f7420556e7374616b65207a65726f20746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "4137:28:6",
																		"nodeType": "YulLiteral",
																		"src": "4137:28:6",
																		"type": "",
																		"value": "Cannot Unstake zero tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4114:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4114:6:6"
																},
																"nativeSrc": "4114:52:6",
																"nodeType": "YulFunctionCall",
																"src": "4114:52:6"
															},
															"nativeSrc": "4114:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "4114:52:6"
														}
													]
												},
												"name": "store_literal_in_memory_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc",
												"nativeSrc": "3997:176:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4095:6:6",
														"nodeType": "YulTypedName",
														"src": "4095:6:6",
														"type": ""
													}
												],
												"src": "3997:176:6"
											},
											{
												"body": {
													"nativeSrc": "4325:220:6",
													"nodeType": "YulBlock",
													"src": "4325:220:6",
													"statements": [
														{
															"nativeSrc": "4335:74:6",
															"nodeType": "YulAssignment",
															"src": "4335:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4401:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4401:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4406:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4406:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4342:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "4342:58:6"
																},
																"nativeSrc": "4342:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4342:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4335:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4335:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4507:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4507:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc",
																	"nativeSrc": "4418:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "4418:88:6"
																},
																"nativeSrc": "4418:93:6",
																"nodeType": "YulFunctionCall",
																"src": "4418:93:6"
															},
															"nativeSrc": "4418:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "4418:93:6"
														},
														{
															"nativeSrc": "4520:19:6",
															"nodeType": "YulAssignment",
															"src": "4520:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4531:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4531:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4536:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4536:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4527:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4527:3:6"
																},
																"nativeSrc": "4527:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4527:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4520:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4520:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4179:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4313:3:6",
														"nodeType": "YulTypedName",
														"src": "4313:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4321:3:6",
														"nodeType": "YulTypedName",
														"src": "4321:3:6",
														"type": ""
													}
												],
												"src": "4179:366:6"
											},
											{
												"body": {
													"nativeSrc": "4722:248:6",
													"nodeType": "YulBlock",
													"src": "4722:248:6",
													"statements": [
														{
															"nativeSrc": "4732:26:6",
															"nodeType": "YulAssignment",
															"src": "4732:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4744:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4744:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4755:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4755:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4740:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4740:3:6"
																},
																"nativeSrc": "4740:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4740:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4732:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4732:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4779:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4779:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4790:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4790:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4775:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4775:3:6"
																		},
																		"nativeSrc": "4775:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4775:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4798:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4798:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4804:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4794:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4794:3:6"
																		},
																		"nativeSrc": "4794:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4794:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4768:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4768:6:6"
																},
																"nativeSrc": "4768:47:6",
																"nodeType": "YulFunctionCall",
																"src": "4768:47:6"
															},
															"nativeSrc": "4768:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "4768:47:6"
														},
														{
															"nativeSrc": "4824:139:6",
															"nodeType": "YulAssignment",
															"src": "4824:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4958:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4958:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4832:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "4832:124:6"
																},
																"nativeSrc": "4832:131:6",
																"nodeType": "YulFunctionCall",
																"src": "4832:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4824:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4824:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4551:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4702:9:6",
														"nodeType": "YulTypedName",
														"src": "4702:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4717:4:6",
														"nodeType": "YulTypedName",
														"src": "4717:4:6",
														"type": ""
													}
												],
												"src": "4551:419:6"
											},
											{
												"body": {
													"nativeSrc": "5082:71:6",
													"nodeType": "YulBlock",
													"src": "5082:71:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5104:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5104:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5112:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5112:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5100:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5100:3:6"
																		},
																		"nativeSrc": "5100:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5100:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5116:29:6",
																		"nodeType": "YulLiteral",
																		"src": "5116:29:6",
																		"type": "",
																		"value": "Insufficient staked balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5093:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5093:6:6"
																},
																"nativeSrc": "5093:53:6",
																"nodeType": "YulFunctionCall",
																"src": "5093:53:6"
															},
															"nativeSrc": "5093:53:6",
															"nodeType": "YulExpressionStatement",
															"src": "5093:53:6"
														}
													]
												},
												"name": "store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
												"nativeSrc": "4976:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5074:6:6",
														"nodeType": "YulTypedName",
														"src": "5074:6:6",
														"type": ""
													}
												],
												"src": "4976:177:6"
											},
											{
												"body": {
													"nativeSrc": "5305:220:6",
													"nodeType": "YulBlock",
													"src": "5305:220:6",
													"statements": [
														{
															"nativeSrc": "5315:74:6",
															"nodeType": "YulAssignment",
															"src": "5315:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5381:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5381:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5386:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5386:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5322:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "5322:58:6"
																},
																"nativeSrc": "5322:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5322:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5315:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5315:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5487:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5487:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																	"nativeSrc": "5398:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "5398:88:6"
																},
																"nativeSrc": "5398:93:6",
																"nodeType": "YulFunctionCall",
																"src": "5398:93:6"
															},
															"nativeSrc": "5398:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "5398:93:6"
														},
														{
															"nativeSrc": "5500:19:6",
															"nodeType": "YulAssignment",
															"src": "5500:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5511:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5511:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5516:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5516:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5507:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5507:3:6"
																},
																"nativeSrc": "5507:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5507:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5500:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5159:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5293:3:6",
														"nodeType": "YulTypedName",
														"src": "5293:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5301:3:6",
														"nodeType": "YulTypedName",
														"src": "5301:3:6",
														"type": ""
													}
												],
												"src": "5159:366:6"
											},
											{
												"body": {
													"nativeSrc": "5702:248:6",
													"nodeType": "YulBlock",
													"src": "5702:248:6",
													"statements": [
														{
															"nativeSrc": "5712:26:6",
															"nodeType": "YulAssignment",
															"src": "5712:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5724:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5724:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5735:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5735:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5720:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5720:3:6"
																},
																"nativeSrc": "5720:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5720:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5712:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5712:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5759:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5759:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5770:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5770:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5755:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5755:3:6"
																		},
																		"nativeSrc": "5755:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5755:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5778:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5778:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5784:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5784:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5774:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5774:3:6"
																		},
																		"nativeSrc": "5774:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5748:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5748:6:6"
																},
																"nativeSrc": "5748:47:6",
																"nodeType": "YulFunctionCall",
																"src": "5748:47:6"
															},
															"nativeSrc": "5748:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "5748:47:6"
														},
														{
															"nativeSrc": "5804:139:6",
															"nodeType": "YulAssignment",
															"src": "5804:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5938:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5938:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5812:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "5812:124:6"
																},
																"nativeSrc": "5812:131:6",
																"nodeType": "YulFunctionCall",
																"src": "5812:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5804:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5804:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5531:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5682:9:6",
														"nodeType": "YulTypedName",
														"src": "5682:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5697:4:6",
														"nodeType": "YulTypedName",
														"src": "5697:4:6",
														"type": ""
													}
												],
												"src": "5531:419:6"
											},
											{
												"body": {
													"nativeSrc": "6062:70:6",
													"nodeType": "YulBlock",
													"src": "6062:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6084:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6084:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6092:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6092:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6080:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6080:3:6"
																		},
																		"nativeSrc": "6080:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6080:14:6"
																	},
																	{
																		"hexValue": "556e7374616b6520416c726561647920696e2050726f63657373",
																		"kind": "string",
																		"nativeSrc": "6096:28:6",
																		"nodeType": "YulLiteral",
																		"src": "6096:28:6",
																		"type": "",
																		"value": "Unstake Already in Process"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6073:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6073:6:6"
																},
																"nativeSrc": "6073:52:6",
																"nodeType": "YulFunctionCall",
																"src": "6073:52:6"
															},
															"nativeSrc": "6073:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "6073:52:6"
														}
													]
												},
												"name": "store_literal_in_memory_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660",
												"nativeSrc": "5956:176:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6054:6:6",
														"nodeType": "YulTypedName",
														"src": "6054:6:6",
														"type": ""
													}
												],
												"src": "5956:176:6"
											},
											{
												"body": {
													"nativeSrc": "6284:220:6",
													"nodeType": "YulBlock",
													"src": "6284:220:6",
													"statements": [
														{
															"nativeSrc": "6294:74:6",
															"nodeType": "YulAssignment",
															"src": "6294:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6360:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6360:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6365:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6365:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6301:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6301:58:6"
																},
																"nativeSrc": "6301:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6301:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6294:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6294:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6466:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6466:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660",
																	"nativeSrc": "6377:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6377:88:6"
																},
																"nativeSrc": "6377:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6377:93:6"
															},
															"nativeSrc": "6377:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6377:93:6"
														},
														{
															"nativeSrc": "6479:19:6",
															"nodeType": "YulAssignment",
															"src": "6479:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6490:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6490:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6495:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6495:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6486:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6486:3:6"
																},
																"nativeSrc": "6486:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6486:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6479:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6479:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6138:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6272:3:6",
														"nodeType": "YulTypedName",
														"src": "6272:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6280:3:6",
														"nodeType": "YulTypedName",
														"src": "6280:3:6",
														"type": ""
													}
												],
												"src": "6138:366:6"
											},
											{
												"body": {
													"nativeSrc": "6681:248:6",
													"nodeType": "YulBlock",
													"src": "6681:248:6",
													"statements": [
														{
															"nativeSrc": "6691:26:6",
															"nodeType": "YulAssignment",
															"src": "6691:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6703:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6703:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6714:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6714:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6699:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6699:3:6"
																},
																"nativeSrc": "6699:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6699:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6691:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6691:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6738:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6738:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6749:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6749:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6734:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6734:3:6"
																		},
																		"nativeSrc": "6734:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6734:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6757:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6757:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6763:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6763:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6753:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6753:3:6"
																		},
																		"nativeSrc": "6753:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6753:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6727:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6727:6:6"
																},
																"nativeSrc": "6727:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6727:47:6"
															},
															"nativeSrc": "6727:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6727:47:6"
														},
														{
															"nativeSrc": "6783:139:6",
															"nodeType": "YulAssignment",
															"src": "6783:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6917:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6917:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6791:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "6791:124:6"
																},
																"nativeSrc": "6791:131:6",
																"nodeType": "YulFunctionCall",
																"src": "6791:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6783:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6783:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6510:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6661:9:6",
														"nodeType": "YulTypedName",
														"src": "6661:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6676:4:6",
														"nodeType": "YulTypedName",
														"src": "6676:4:6",
														"type": ""
													}
												],
												"src": "6510:419:6"
											},
											{
												"body": {
													"nativeSrc": "6963:152:6",
													"nodeType": "YulBlock",
													"src": "6963:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6980:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6980:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6983:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6983:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6973:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6973:6:6"
																},
																"nativeSrc": "6973:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6973:88:6"
															},
															"nativeSrc": "6973:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6973:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7077:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7077:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7080:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7080:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7070:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7070:6:6"
																},
																"nativeSrc": "7070:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7070:15:6"
															},
															"nativeSrc": "7070:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7070:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7101:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7101:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7104:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7104:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7094:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7094:6:6"
																},
																"nativeSrc": "7094:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7094:15:6"
															},
															"nativeSrc": "7094:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7094:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6935:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6935:180:6"
											},
											{
												"body": {
													"nativeSrc": "7165:147:6",
													"nodeType": "YulBlock",
													"src": "7165:147:6",
													"statements": [
														{
															"nativeSrc": "7175:25:6",
															"nodeType": "YulAssignment",
															"src": "7175:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7198:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7198:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7180:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7180:17:6"
																},
																"nativeSrc": "7180:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7180:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7175:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7175:1:6"
																}
															]
														},
														{
															"nativeSrc": "7209:25:6",
															"nodeType": "YulAssignment",
															"src": "7209:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7232:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7232:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7214:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7214:17:6"
																},
																"nativeSrc": "7214:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7214:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7209:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7209:1:6"
																}
															]
														},
														{
															"nativeSrc": "7243:16:6",
															"nodeType": "YulAssignment",
															"src": "7243:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7254:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7254:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7257:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7257:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7250:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7250:3:6"
																},
																"nativeSrc": "7250:9:6",
																"nodeType": "YulFunctionCall",
																"src": "7250:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7243:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7243:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7283:22:6",
																"nodeType": "YulBlock",
																"src": "7283:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7285:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7285:16:6"
																			},
																			"nativeSrc": "7285:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7285:18:6"
																		},
																		"nativeSrc": "7285:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7285:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7275:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7275:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7278:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7278:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7272:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7272:2:6"
																},
																"nativeSrc": "7272:10:6",
																"nodeType": "YulFunctionCall",
																"src": "7272:10:6"
															},
															"nativeSrc": "7269:36:6",
															"nodeType": "YulIf",
															"src": "7269:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7121:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7152:1:6",
														"nodeType": "YulTypedName",
														"src": "7152:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7155:1:6",
														"nodeType": "YulTypedName",
														"src": "7155:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7161:3:6",
														"nodeType": "YulTypedName",
														"src": "7161:3:6",
														"type": ""
													}
												],
												"src": "7121:191:6"
											},
											{
												"body": {
													"nativeSrc": "7424:68:6",
													"nodeType": "YulBlock",
													"src": "7424:68:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7446:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7446:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7454:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7454:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7442:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7442:3:6"
																		},
																		"nativeSrc": "7442:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7442:14:6"
																	},
																	{
																		"hexValue": "4e6f20556e7374616b65205265717565737420466f756e64",
																		"kind": "string",
																		"nativeSrc": "7458:26:6",
																		"nodeType": "YulLiteral",
																		"src": "7458:26:6",
																		"type": "",
																		"value": "No Unstake Request Found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7435:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7435:6:6"
																},
																"nativeSrc": "7435:50:6",
																"nodeType": "YulFunctionCall",
																"src": "7435:50:6"
															},
															"nativeSrc": "7435:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "7435:50:6"
														}
													]
												},
												"name": "store_literal_in_memory_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258",
												"nativeSrc": "7318:174:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7416:6:6",
														"nodeType": "YulTypedName",
														"src": "7416:6:6",
														"type": ""
													}
												],
												"src": "7318:174:6"
											},
											{
												"body": {
													"nativeSrc": "7644:220:6",
													"nodeType": "YulBlock",
													"src": "7644:220:6",
													"statements": [
														{
															"nativeSrc": "7654:74:6",
															"nodeType": "YulAssignment",
															"src": "7654:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7720:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7720:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7725:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7725:2:6",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7661:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7661:58:6"
																},
																"nativeSrc": "7661:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7661:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7654:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7654:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7826:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7826:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258",
																	"nativeSrc": "7737:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7737:88:6"
																},
																"nativeSrc": "7737:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7737:93:6"
															},
															"nativeSrc": "7737:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7737:93:6"
														},
														{
															"nativeSrc": "7839:19:6",
															"nodeType": "YulAssignment",
															"src": "7839:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7850:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7850:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7855:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7855:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7846:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7846:3:6"
																},
																"nativeSrc": "7846:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7846:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7839:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7839:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7498:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7632:3:6",
														"nodeType": "YulTypedName",
														"src": "7632:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7640:3:6",
														"nodeType": "YulTypedName",
														"src": "7640:3:6",
														"type": ""
													}
												],
												"src": "7498:366:6"
											},
											{
												"body": {
													"nativeSrc": "8041:248:6",
													"nodeType": "YulBlock",
													"src": "8041:248:6",
													"statements": [
														{
															"nativeSrc": "8051:26:6",
															"nodeType": "YulAssignment",
															"src": "8051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8059:3:6"
																},
																"nativeSrc": "8059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8109:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8094:3:6"
																		},
																		"nativeSrc": "8094:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8094:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8117:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8117:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8123:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8113:3:6"
																		},
																		"nativeSrc": "8113:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8113:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8087:6:6"
																},
																"nativeSrc": "8087:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8087:47:6"
															},
															"nativeSrc": "8087:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8087:47:6"
														},
														{
															"nativeSrc": "8143:139:6",
															"nodeType": "YulAssignment",
															"src": "8143:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8277:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8277:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8151:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "8151:124:6"
																},
																"nativeSrc": "8151:131:6",
																"nodeType": "YulFunctionCall",
																"src": "8151:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7870:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8021:9:6",
														"nodeType": "YulTypedName",
														"src": "8021:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8036:4:6",
														"nodeType": "YulTypedName",
														"src": "8036:4:6",
														"type": ""
													}
												],
												"src": "7870:419:6"
											},
											{
												"body": {
													"nativeSrc": "8401:67:6",
													"nodeType": "YulBlock",
													"src": "8401:67:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8423:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8423:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8431:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8431:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8419:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8419:3:6"
																		},
																		"nativeSrc": "8419:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8419:14:6"
																	},
																	{
																		"hexValue": "556e7374616b6520706572696f64206e6f74206f766572",
																		"kind": "string",
																		"nativeSrc": "8435:25:6",
																		"nodeType": "YulLiteral",
																		"src": "8435:25:6",
																		"type": "",
																		"value": "Unstake period not over"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8412:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8412:6:6"
																},
																"nativeSrc": "8412:49:6",
																"nodeType": "YulFunctionCall",
																"src": "8412:49:6"
															},
															"nativeSrc": "8412:49:6",
															"nodeType": "YulExpressionStatement",
															"src": "8412:49:6"
														}
													]
												},
												"name": "store_literal_in_memory_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed",
												"nativeSrc": "8295:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8393:6:6",
														"nodeType": "YulTypedName",
														"src": "8393:6:6",
														"type": ""
													}
												],
												"src": "8295:173:6"
											},
											{
												"body": {
													"nativeSrc": "8620:220:6",
													"nodeType": "YulBlock",
													"src": "8620:220:6",
													"statements": [
														{
															"nativeSrc": "8630:74:6",
															"nodeType": "YulAssignment",
															"src": "8630:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8696:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8696:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8701:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8701:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8637:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8637:58:6"
																},
																"nativeSrc": "8637:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8637:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8630:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8630:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8802:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8802:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed",
																	"nativeSrc": "8713:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "8713:88:6"
																},
																"nativeSrc": "8713:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8713:93:6"
															},
															"nativeSrc": "8713:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "8713:93:6"
														},
														{
															"nativeSrc": "8815:19:6",
															"nodeType": "YulAssignment",
															"src": "8815:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8826:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8826:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8831:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8831:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8822:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8822:3:6"
																},
																"nativeSrc": "8822:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8822:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8815:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8815:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8474:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8608:3:6",
														"nodeType": "YulTypedName",
														"src": "8608:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8616:3:6",
														"nodeType": "YulTypedName",
														"src": "8616:3:6",
														"type": ""
													}
												],
												"src": "8474:366:6"
											},
											{
												"body": {
													"nativeSrc": "9017:248:6",
													"nodeType": "YulBlock",
													"src": "9017:248:6",
													"statements": [
														{
															"nativeSrc": "9027:26:6",
															"nodeType": "YulAssignment",
															"src": "9027:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9039:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9039:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9050:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9050:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9035:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9035:3:6"
																},
																"nativeSrc": "9035:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9035:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9027:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9027:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9074:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9074:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9085:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9085:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9070:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9070:3:6"
																		},
																		"nativeSrc": "9070:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9070:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9093:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9093:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9099:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9099:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9089:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9089:3:6"
																		},
																		"nativeSrc": "9089:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9089:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9063:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9063:6:6"
																},
																"nativeSrc": "9063:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9063:47:6"
															},
															"nativeSrc": "9063:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9063:47:6"
														},
														{
															"nativeSrc": "9119:139:6",
															"nodeType": "YulAssignment",
															"src": "9119:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9253:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9253:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9127:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9127:124:6"
																},
																"nativeSrc": "9127:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9127:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9119:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9119:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8846:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8997:9:6",
														"nodeType": "YulTypedName",
														"src": "8997:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9012:4:6",
														"nodeType": "YulTypedName",
														"src": "9012:4:6",
														"type": ""
													}
												],
												"src": "8846:419:6"
											},
											{
												"body": {
													"nativeSrc": "9397:206:6",
													"nodeType": "YulBlock",
													"src": "9397:206:6",
													"statements": [
														{
															"nativeSrc": "9407:26:6",
															"nodeType": "YulAssignment",
															"src": "9407:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9419:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9419:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9430:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9430:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9415:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9415:3:6"
																},
																"nativeSrc": "9415:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9415:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9407:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9407:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9487:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9487:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9500:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9500:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9511:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9511:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9496:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9496:3:6"
																		},
																		"nativeSrc": "9496:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9496:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9443:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9443:43:6"
																},
																"nativeSrc": "9443:71:6",
																"nodeType": "YulFunctionCall",
																"src": "9443:71:6"
															},
															"nativeSrc": "9443:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "9443:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9568:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9568:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9581:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9581:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9592:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9592:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9577:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9577:3:6"
																		},
																		"nativeSrc": "9577:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9577:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9524:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9524:43:6"
																},
																"nativeSrc": "9524:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9524:72:6"
															},
															"nativeSrc": "9524:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9524:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9271:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9361:9:6",
														"nodeType": "YulTypedName",
														"src": "9361:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9373:6:6",
														"nodeType": "YulTypedName",
														"src": "9373:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9381:6:6",
														"nodeType": "YulTypedName",
														"src": "9381:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9392:4:6",
														"nodeType": "YulTypedName",
														"src": "9392:4:6",
														"type": ""
													}
												],
												"src": "9271:332:6"
											},
											{
												"body": {
													"nativeSrc": "9651:48:6",
													"nodeType": "YulBlock",
													"src": "9651:48:6",
													"statements": [
														{
															"nativeSrc": "9661:32:6",
															"nodeType": "YulAssignment",
															"src": "9661:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9686:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9686:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "9679:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9679:6:6"
																		},
																		"nativeSrc": "9679:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9679:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9672:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9672:6:6"
																},
																"nativeSrc": "9672:21:6",
																"nodeType": "YulFunctionCall",
																"src": "9672:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9661:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9661:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "9609:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9633:5:6",
														"nodeType": "YulTypedName",
														"src": "9633:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9643:7:6",
														"nodeType": "YulTypedName",
														"src": "9643:7:6",
														"type": ""
													}
												],
												"src": "9609:90:6"
											},
											{
												"body": {
													"nativeSrc": "9745:76:6",
													"nodeType": "YulBlock",
													"src": "9745:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "9799:16:6",
																"nodeType": "YulBlock",
																"src": "9799:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9808:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9808:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9811:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9811:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9801:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9801:6:6"
																			},
																			"nativeSrc": "9801:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9801:12:6"
																		},
																		"nativeSrc": "9801:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9801:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9768:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9768:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9790:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "9790:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9775:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "9775:14:6"
																				},
																				"nativeSrc": "9775:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9775:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9765:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "9765:2:6"
																		},
																		"nativeSrc": "9765:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9765:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9758:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9758:6:6"
																},
																"nativeSrc": "9758:40:6",
																"nodeType": "YulFunctionCall",
																"src": "9758:40:6"
															},
															"nativeSrc": "9755:60:6",
															"nodeType": "YulIf",
															"src": "9755:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9705:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9738:5:6",
														"nodeType": "YulTypedName",
														"src": "9738:5:6",
														"type": ""
													}
												],
												"src": "9705:116:6"
											},
											{
												"body": {
													"nativeSrc": "9887:77:6",
													"nodeType": "YulBlock",
													"src": "9887:77:6",
													"statements": [
														{
															"nativeSrc": "9897:22:6",
															"nodeType": "YulAssignment",
															"src": "9897:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9912:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9912:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9906:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9906:5:6"
																},
																"nativeSrc": "9906:13:6",
																"nodeType": "YulFunctionCall",
																"src": "9906:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9897:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9897:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9952:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9952:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9928:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "9928:23:6"
																},
																"nativeSrc": "9928:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9928:30:6"
															},
															"nativeSrc": "9928:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "9928:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9827:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9865:6:6",
														"nodeType": "YulTypedName",
														"src": "9865:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9873:3:6",
														"nodeType": "YulTypedName",
														"src": "9873:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9881:5:6",
														"nodeType": "YulTypedName",
														"src": "9881:5:6",
														"type": ""
													}
												],
												"src": "9827:137:6"
											},
											{
												"body": {
													"nativeSrc": "10044:271:6",
													"nodeType": "YulBlock",
													"src": "10044:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "10090:83:6",
																"nodeType": "YulBlock",
																"src": "10090:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10092:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "10092:77:6"
																			},
																			"nativeSrc": "10092:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10092:79:6"
																		},
																		"nativeSrc": "10092:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10092:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10065:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "10065:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10074:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10074:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10061:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10061:3:6"
																		},
																		"nativeSrc": "10061:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10061:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10086:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10057:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10057:3:6"
																},
																"nativeSrc": "10057:32:6",
																"nodeType": "YulFunctionCall",
																"src": "10057:32:6"
															},
															"nativeSrc": "10054:119:6",
															"nodeType": "YulIf",
															"src": "10054:119:6"
														},
														{
															"nativeSrc": "10183:125:6",
															"nodeType": "YulBlock",
															"src": "10183:125:6",
															"statements": [
																{
																	"nativeSrc": "10198:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10198:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10212:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10212:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10202:6:6",
																			"nodeType": "YulTypedName",
																			"src": "10202:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10227:71:6",
																	"nodeType": "YulAssignment",
																	"src": "10227:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10270:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "10270:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10281:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "10281:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10266:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "10266:3:6"
																				},
																				"nativeSrc": "10266:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10266:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10290:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "10290:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "10237:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "10237:28:6"
																		},
																		"nativeSrc": "10237:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10237:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10227:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "10227:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9970:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10014:9:6",
														"nodeType": "YulTypedName",
														"src": "10014:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10025:7:6",
														"nodeType": "YulTypedName",
														"src": "10025:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10037:6:6",
														"nodeType": "YulTypedName",
														"src": "10037:6:6",
														"type": ""
													}
												],
												"src": "9970:345:6"
											},
											{
												"body": {
													"nativeSrc": "10427:127:6",
													"nodeType": "YulBlock",
													"src": "10427:127:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10449:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10449:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10457:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10457:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10445:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10445:3:6"
																		},
																		"nativeSrc": "10445:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10445:14:6"
																	},
																	{
																		"hexValue": "546f6b656e205472616e73666572204661696c656420647572696e6720556e53",
																		"kind": "string",
																		"nativeSrc": "10461:34:6",
																		"nodeType": "YulLiteral",
																		"src": "10461:34:6",
																		"type": "",
																		"value": "Token Transfer Failed during UnS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10438:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10438:6:6"
																},
																"nativeSrc": "10438:58:6",
																"nodeType": "YulFunctionCall",
																"src": "10438:58:6"
															},
															"nativeSrc": "10438:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "10438:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10517:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10517:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10525:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10525:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10513:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10513:3:6"
																		},
																		"nativeSrc": "10513:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10513:15:6"
																	},
																	{
																		"hexValue": "74616b696e672050726f63657373",
																		"kind": "string",
																		"nativeSrc": "10530:16:6",
																		"nodeType": "YulLiteral",
																		"src": "10530:16:6",
																		"type": "",
																		"value": "taking Process"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10506:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10506:6:6"
																},
																"nativeSrc": "10506:41:6",
																"nodeType": "YulFunctionCall",
																"src": "10506:41:6"
															},
															"nativeSrc": "10506:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "10506:41:6"
														}
													]
												},
												"name": "store_literal_in_memory_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3",
												"nativeSrc": "10321:233:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10419:6:6",
														"nodeType": "YulTypedName",
														"src": "10419:6:6",
														"type": ""
													}
												],
												"src": "10321:233:6"
											},
											{
												"body": {
													"nativeSrc": "10706:220:6",
													"nodeType": "YulBlock",
													"src": "10706:220:6",
													"statements": [
														{
															"nativeSrc": "10716:74:6",
															"nodeType": "YulAssignment",
															"src": "10716:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10782:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10782:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10787:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10787:2:6",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10723:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10723:58:6"
																},
																"nativeSrc": "10723:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10723:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10716:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10716:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10888:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10888:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3",
																	"nativeSrc": "10799:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10799:88:6"
																},
																"nativeSrc": "10799:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10799:93:6"
															},
															"nativeSrc": "10799:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10799:93:6"
														},
														{
															"nativeSrc": "10901:19:6",
															"nodeType": "YulAssignment",
															"src": "10901:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10912:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10912:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10917:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10917:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10908:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10908:3:6"
																},
																"nativeSrc": "10908:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10908:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10901:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10901:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10560:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10694:3:6",
														"nodeType": "YulTypedName",
														"src": "10694:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10702:3:6",
														"nodeType": "YulTypedName",
														"src": "10702:3:6",
														"type": ""
													}
												],
												"src": "10560:366:6"
											},
											{
												"body": {
													"nativeSrc": "11103:248:6",
													"nodeType": "YulBlock",
													"src": "11103:248:6",
													"statements": [
														{
															"nativeSrc": "11113:26:6",
															"nodeType": "YulAssignment",
															"src": "11113:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11125:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11125:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11136:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11136:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11121:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11121:3:6"
																},
																"nativeSrc": "11121:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11121:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11113:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11113:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11160:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11160:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11171:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11171:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11156:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11156:3:6"
																		},
																		"nativeSrc": "11156:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11156:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11179:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11179:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11185:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11185:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11175:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11175:3:6"
																		},
																		"nativeSrc": "11175:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11175:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11149:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11149:6:6"
																},
																"nativeSrc": "11149:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11149:47:6"
															},
															"nativeSrc": "11149:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11149:47:6"
														},
														{
															"nativeSrc": "11205:139:6",
															"nodeType": "YulAssignment",
															"src": "11205:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11339:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11339:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11213:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11213:124:6"
																},
																"nativeSrc": "11213:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11213:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11205:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11205:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10932:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11083:9:6",
														"nodeType": "YulTypedName",
														"src": "11083:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11098:4:6",
														"nodeType": "YulTypedName",
														"src": "11098:4:6",
														"type": ""
													}
												],
												"src": "10932:419:6"
											},
											{
												"body": {
													"nativeSrc": "11463:68:6",
													"nodeType": "YulBlock",
													"src": "11463:68:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11485:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11485:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11493:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11493:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11481:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11481:3:6"
																		},
																		"nativeSrc": "11481:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11481:14:6"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b65207a65726f20546f6b656e73",
																		"kind": "string",
																		"nativeSrc": "11497:26:6",
																		"nodeType": "YulLiteral",
																		"src": "11497:26:6",
																		"type": "",
																		"value": "Cannot stake zero Tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11474:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11474:6:6"
																},
																"nativeSrc": "11474:50:6",
																"nodeType": "YulFunctionCall",
																"src": "11474:50:6"
															},
															"nativeSrc": "11474:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "11474:50:6"
														}
													]
												},
												"name": "store_literal_in_memory_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87",
												"nativeSrc": "11357:174:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11455:6:6",
														"nodeType": "YulTypedName",
														"src": "11455:6:6",
														"type": ""
													}
												],
												"src": "11357:174:6"
											},
											{
												"body": {
													"nativeSrc": "11683:220:6",
													"nodeType": "YulBlock",
													"src": "11683:220:6",
													"statements": [
														{
															"nativeSrc": "11693:74:6",
															"nodeType": "YulAssignment",
															"src": "11693:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11759:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11759:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11764:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11764:2:6",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11700:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "11700:58:6"
																},
																"nativeSrc": "11700:67:6",
																"nodeType": "YulFunctionCall",
																"src": "11700:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11693:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11693:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11865:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11865:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87",
																	"nativeSrc": "11776:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "11776:88:6"
																},
																"nativeSrc": "11776:93:6",
																"nodeType": "YulFunctionCall",
																"src": "11776:93:6"
															},
															"nativeSrc": "11776:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "11776:93:6"
														},
														{
															"nativeSrc": "11878:19:6",
															"nodeType": "YulAssignment",
															"src": "11878:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11889:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11889:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11894:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11894:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11885:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11885:3:6"
																},
																"nativeSrc": "11885:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11885:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11878:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11878:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11537:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11671:3:6",
														"nodeType": "YulTypedName",
														"src": "11671:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11679:3:6",
														"nodeType": "YulTypedName",
														"src": "11679:3:6",
														"type": ""
													}
												],
												"src": "11537:366:6"
											},
											{
												"body": {
													"nativeSrc": "12080:248:6",
													"nodeType": "YulBlock",
													"src": "12080:248:6",
													"statements": [
														{
															"nativeSrc": "12090:26:6",
															"nodeType": "YulAssignment",
															"src": "12090:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12102:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12102:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12113:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12113:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12098:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12098:3:6"
																},
																"nativeSrc": "12098:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12098:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12090:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12090:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12137:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12137:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12148:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12148:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12133:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12133:3:6"
																		},
																		"nativeSrc": "12133:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12133:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12156:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "12156:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12162:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12162:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12152:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12152:3:6"
																		},
																		"nativeSrc": "12152:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12152:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12126:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12126:6:6"
																},
																"nativeSrc": "12126:47:6",
																"nodeType": "YulFunctionCall",
																"src": "12126:47:6"
															},
															"nativeSrc": "12126:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "12126:47:6"
														},
														{
															"nativeSrc": "12182:139:6",
															"nodeType": "YulAssignment",
															"src": "12182:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12316:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12316:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12190:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "12190:124:6"
																},
																"nativeSrc": "12190:131:6",
																"nodeType": "YulFunctionCall",
																"src": "12190:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12182:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12182:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11909:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12060:9:6",
														"nodeType": "YulTypedName",
														"src": "12060:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12075:4:6",
														"nodeType": "YulTypedName",
														"src": "12075:4:6",
														"type": ""
													}
												],
												"src": "11909:419:6"
											},
											{
												"body": {
													"nativeSrc": "12397:80:6",
													"nodeType": "YulBlock",
													"src": "12397:80:6",
													"statements": [
														{
															"nativeSrc": "12407:22:6",
															"nodeType": "YulAssignment",
															"src": "12407:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12422:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12422:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12416:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "12416:5:6"
																},
																"nativeSrc": "12416:13:6",
																"nodeType": "YulFunctionCall",
																"src": "12416:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12407:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "12407:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12465:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "12465:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "12438:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "12438:26:6"
																},
																"nativeSrc": "12438:33:6",
																"nodeType": "YulFunctionCall",
																"src": "12438:33:6"
															},
															"nativeSrc": "12438:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "12438:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "12334:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12375:6:6",
														"nodeType": "YulTypedName",
														"src": "12375:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12383:3:6",
														"nodeType": "YulTypedName",
														"src": "12383:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12391:5:6",
														"nodeType": "YulTypedName",
														"src": "12391:5:6",
														"type": ""
													}
												],
												"src": "12334:143:6"
											},
											{
												"body": {
													"nativeSrc": "12560:274:6",
													"nodeType": "YulBlock",
													"src": "12560:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "12606:83:6",
																"nodeType": "YulBlock",
																"src": "12606:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12608:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "12608:77:6"
																			},
																			"nativeSrc": "12608:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12608:79:6"
																		},
																		"nativeSrc": "12608:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12608:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12581:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12581:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12590:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12590:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12577:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12577:3:6"
																		},
																		"nativeSrc": "12577:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12577:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12602:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12602:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12573:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12573:3:6"
																},
																"nativeSrc": "12573:32:6",
																"nodeType": "YulFunctionCall",
																"src": "12573:32:6"
															},
															"nativeSrc": "12570:119:6",
															"nodeType": "YulIf",
															"src": "12570:119:6"
														},
														{
															"nativeSrc": "12699:128:6",
															"nodeType": "YulBlock",
															"src": "12699:128:6",
															"statements": [
																{
																	"nativeSrc": "12714:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12714:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12728:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12728:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12718:6:6",
																			"nodeType": "YulTypedName",
																			"src": "12718:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12743:74:6",
																	"nodeType": "YulAssignment",
																	"src": "12743:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12789:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "12789:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12800:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "12800:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12785:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "12785:3:6"
																				},
																				"nativeSrc": "12785:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12785:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12809:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12809:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12753:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "12753:31:6"
																		},
																		"nativeSrc": "12753:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12753:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12743:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "12743:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "12483:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12530:9:6",
														"nodeType": "YulTypedName",
														"src": "12530:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12541:7:6",
														"nodeType": "YulTypedName",
														"src": "12541:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12553:6:6",
														"nodeType": "YulTypedName",
														"src": "12553:6:6",
														"type": ""
													}
												],
												"src": "12483:351:6"
											},
											{
												"body": {
													"nativeSrc": "12946:64:6",
													"nodeType": "YulBlock",
													"src": "12946:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12968:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12968:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12976:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12976:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12964:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12964:3:6"
																		},
																		"nativeSrc": "12964:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12964:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e742042616c616e6365",
																		"kind": "string",
																		"nativeSrc": "12980:22:6",
																		"nodeType": "YulLiteral",
																		"src": "12980:22:6",
																		"type": "",
																		"value": "Insufficient Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12957:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12957:6:6"
																},
																"nativeSrc": "12957:46:6",
																"nodeType": "YulFunctionCall",
																"src": "12957:46:6"
															},
															"nativeSrc": "12957:46:6",
															"nodeType": "YulExpressionStatement",
															"src": "12957:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
												"nativeSrc": "12840:170:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12938:6:6",
														"nodeType": "YulTypedName",
														"src": "12938:6:6",
														"type": ""
													}
												],
												"src": "12840:170:6"
											},
											{
												"body": {
													"nativeSrc": "13162:220:6",
													"nodeType": "YulBlock",
													"src": "13162:220:6",
													"statements": [
														{
															"nativeSrc": "13172:74:6",
															"nodeType": "YulAssignment",
															"src": "13172:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13238:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13238:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13243:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13243:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13179:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "13179:58:6"
																},
																"nativeSrc": "13179:67:6",
																"nodeType": "YulFunctionCall",
																"src": "13179:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13172:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13172:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13344:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13344:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																	"nativeSrc": "13255:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "13255:88:6"
																},
																"nativeSrc": "13255:93:6",
																"nodeType": "YulFunctionCall",
																"src": "13255:93:6"
															},
															"nativeSrc": "13255:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "13255:93:6"
														},
														{
															"nativeSrc": "13357:19:6",
															"nodeType": "YulAssignment",
															"src": "13357:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13368:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13368:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13373:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13373:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13364:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13364:3:6"
																},
																"nativeSrc": "13364:12:6",
																"nodeType": "YulFunctionCall",
																"src": "13364:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13357:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13357:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13016:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13150:3:6",
														"nodeType": "YulTypedName",
														"src": "13150:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13158:3:6",
														"nodeType": "YulTypedName",
														"src": "13158:3:6",
														"type": ""
													}
												],
												"src": "13016:366:6"
											},
											{
												"body": {
													"nativeSrc": "13559:248:6",
													"nodeType": "YulBlock",
													"src": "13559:248:6",
													"statements": [
														{
															"nativeSrc": "13569:26:6",
															"nodeType": "YulAssignment",
															"src": "13569:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13581:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13581:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13592:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13592:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13577:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13577:3:6"
																},
																"nativeSrc": "13577:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13577:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13569:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13569:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13616:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13616:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13627:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13627:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13612:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13612:3:6"
																		},
																		"nativeSrc": "13612:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13612:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13635:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "13635:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13641:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13641:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13631:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13631:3:6"
																		},
																		"nativeSrc": "13631:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13631:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13605:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13605:6:6"
																},
																"nativeSrc": "13605:47:6",
																"nodeType": "YulFunctionCall",
																"src": "13605:47:6"
															},
															"nativeSrc": "13605:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "13605:47:6"
														},
														{
															"nativeSrc": "13661:139:6",
															"nodeType": "YulAssignment",
															"src": "13661:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13795:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "13795:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13669:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "13669:124:6"
																},
																"nativeSrc": "13669:131:6",
																"nodeType": "YulFunctionCall",
																"src": "13669:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13661:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13661:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13388:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13539:9:6",
														"nodeType": "YulTypedName",
														"src": "13539:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13554:4:6",
														"nodeType": "YulTypedName",
														"src": "13554:4:6",
														"type": ""
													}
												],
												"src": "13388:419:6"
											},
											{
												"body": {
													"nativeSrc": "13967:288:6",
													"nodeType": "YulBlock",
													"src": "13967:288:6",
													"statements": [
														{
															"nativeSrc": "13977:26:6",
															"nodeType": "YulAssignment",
															"src": "13977:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13989:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13989:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14000:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14000:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13985:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13985:3:6"
																},
																"nativeSrc": "13985:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13985:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13977:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13977:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14057:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14057:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14070:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14070:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14081:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14081:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14066:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14066:3:6"
																		},
																		"nativeSrc": "14066:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14066:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14013:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14013:43:6"
																},
																"nativeSrc": "14013:71:6",
																"nodeType": "YulFunctionCall",
																"src": "14013:71:6"
															},
															"nativeSrc": "14013:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "14013:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14138:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14138:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14151:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14151:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14162:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14162:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14147:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14147:3:6"
																		},
																		"nativeSrc": "14147:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14147:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14094:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14094:43:6"
																},
																"nativeSrc": "14094:72:6",
																"nodeType": "YulFunctionCall",
																"src": "14094:72:6"
															},
															"nativeSrc": "14094:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "14094:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14220:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14220:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14233:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14233:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14244:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14244:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14229:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14229:3:6"
																		},
																		"nativeSrc": "14229:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14229:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14176:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14176:43:6"
																},
																"nativeSrc": "14176:72:6",
																"nodeType": "YulFunctionCall",
																"src": "14176:72:6"
															},
															"nativeSrc": "14176:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "14176:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13813:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13923:9:6",
														"nodeType": "YulTypedName",
														"src": "13923:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13935:6:6",
														"nodeType": "YulTypedName",
														"src": "13935:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13943:6:6",
														"nodeType": "YulTypedName",
														"src": "13943:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13951:6:6",
														"nodeType": "YulTypedName",
														"src": "13951:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13962:4:6",
														"nodeType": "YulTypedName",
														"src": "13962:4:6",
														"type": ""
													}
												],
												"src": "13813:442:6"
											},
											{
												"body": {
													"nativeSrc": "14367:59:6",
													"nodeType": "YulBlock",
													"src": "14367:59:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14389:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "14389:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14397:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14397:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14385:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14385:3:6"
																		},
																		"nativeSrc": "14385:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14385:14:6"
																	},
																	{
																		"hexValue": "5472616e73666572204661696c6564",
																		"kind": "string",
																		"nativeSrc": "14401:17:6",
																		"nodeType": "YulLiteral",
																		"src": "14401:17:6",
																		"type": "",
																		"value": "Transfer Failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14378:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14378:6:6"
																},
																"nativeSrc": "14378:41:6",
																"nodeType": "YulFunctionCall",
																"src": "14378:41:6"
															},
															"nativeSrc": "14378:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "14378:41:6"
														}
													]
												},
												"name": "store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
												"nativeSrc": "14261:165:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14359:6:6",
														"nodeType": "YulTypedName",
														"src": "14359:6:6",
														"type": ""
													}
												],
												"src": "14261:165:6"
											},
											{
												"body": {
													"nativeSrc": "14578:220:6",
													"nodeType": "YulBlock",
													"src": "14578:220:6",
													"statements": [
														{
															"nativeSrc": "14588:74:6",
															"nodeType": "YulAssignment",
															"src": "14588:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14654:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14654:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14659:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14659:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14595:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "14595:58:6"
																},
																"nativeSrc": "14595:67:6",
																"nodeType": "YulFunctionCall",
																"src": "14595:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14588:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14588:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14760:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14760:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																	"nativeSrc": "14671:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "14671:88:6"
																},
																"nativeSrc": "14671:93:6",
																"nodeType": "YulFunctionCall",
																"src": "14671:93:6"
															},
															"nativeSrc": "14671:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "14671:93:6"
														},
														{
															"nativeSrc": "14773:19:6",
															"nodeType": "YulAssignment",
															"src": "14773:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14784:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14784:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14789:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14789:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14780:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14780:3:6"
																},
																"nativeSrc": "14780:12:6",
																"nodeType": "YulFunctionCall",
																"src": "14780:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14773:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14773:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14432:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14566:3:6",
														"nodeType": "YulTypedName",
														"src": "14566:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14574:3:6",
														"nodeType": "YulTypedName",
														"src": "14574:3:6",
														"type": ""
													}
												],
												"src": "14432:366:6"
											},
											{
												"body": {
													"nativeSrc": "14975:248:6",
													"nodeType": "YulBlock",
													"src": "14975:248:6",
													"statements": [
														{
															"nativeSrc": "14985:26:6",
															"nodeType": "YulAssignment",
															"src": "14985:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14997:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14997:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15008:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15008:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14993:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14993:3:6"
																},
																"nativeSrc": "14993:18:6",
																"nodeType": "YulFunctionCall",
																"src": "14993:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14985:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14985:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15032:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15032:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15043:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15043:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15028:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15028:3:6"
																		},
																		"nativeSrc": "15028:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15028:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15051:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "15051:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15057:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15057:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15047:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15047:3:6"
																		},
																		"nativeSrc": "15047:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15047:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15021:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15021:6:6"
																},
																"nativeSrc": "15021:47:6",
																"nodeType": "YulFunctionCall",
																"src": "15021:47:6"
															},
															"nativeSrc": "15021:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "15021:47:6"
														},
														{
															"nativeSrc": "15077:139:6",
															"nodeType": "YulAssignment",
															"src": "15077:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15211:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "15211:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15085:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "15085:124:6"
																},
																"nativeSrc": "15085:131:6",
																"nodeType": "YulFunctionCall",
																"src": "15085:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15077:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15077:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14804:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14955:9:6",
														"nodeType": "YulTypedName",
														"src": "14955:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14970:4:6",
														"nodeType": "YulTypedName",
														"src": "14970:4:6",
														"type": ""
													}
												],
												"src": "14804:419:6"
											},
											{
												"body": {
													"nativeSrc": "15335:75:6",
													"nodeType": "YulBlock",
													"src": "15335:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15357:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "15357:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15365:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15365:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15353:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15353:3:6"
																		},
																		"nativeSrc": "15353:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15353:14:6"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "15369:33:6",
																		"nodeType": "YulLiteral",
																		"src": "15369:33:6",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15346:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15346:6:6"
																},
																"nativeSrc": "15346:57:6",
																"nodeType": "YulFunctionCall",
																"src": "15346:57:6"
															},
															"nativeSrc": "15346:57:6",
															"nodeType": "YulExpressionStatement",
															"src": "15346:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "15229:181:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15327:6:6",
														"nodeType": "YulTypedName",
														"src": "15327:6:6",
														"type": ""
													}
												],
												"src": "15229:181:6"
											},
											{
												"body": {
													"nativeSrc": "15562:220:6",
													"nodeType": "YulBlock",
													"src": "15562:220:6",
													"statements": [
														{
															"nativeSrc": "15572:74:6",
															"nodeType": "YulAssignment",
															"src": "15572:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15638:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15638:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15643:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15643:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15579:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "15579:58:6"
																},
																"nativeSrc": "15579:67:6",
																"nodeType": "YulFunctionCall",
																"src": "15579:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15572:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15572:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15744:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15744:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "15655:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "15655:88:6"
																},
																"nativeSrc": "15655:93:6",
																"nodeType": "YulFunctionCall",
																"src": "15655:93:6"
															},
															"nativeSrc": "15655:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "15655:93:6"
														},
														{
															"nativeSrc": "15757:19:6",
															"nodeType": "YulAssignment",
															"src": "15757:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15768:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15768:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15773:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15773:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15764:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15764:3:6"
																},
																"nativeSrc": "15764:12:6",
																"nodeType": "YulFunctionCall",
																"src": "15764:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15757:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15757:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15416:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15550:3:6",
														"nodeType": "YulTypedName",
														"src": "15550:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15558:3:6",
														"nodeType": "YulTypedName",
														"src": "15558:3:6",
														"type": ""
													}
												],
												"src": "15416:366:6"
											},
											{
												"body": {
													"nativeSrc": "15959:248:6",
													"nodeType": "YulBlock",
													"src": "15959:248:6",
													"statements": [
														{
															"nativeSrc": "15969:26:6",
															"nodeType": "YulAssignment",
															"src": "15969:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15981:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "15981:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15992:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15992:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15977:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15977:3:6"
																},
																"nativeSrc": "15977:18:6",
																"nodeType": "YulFunctionCall",
																"src": "15977:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15969:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15969:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16016:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "16016:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16027:1:6",
																				"nodeType": "YulLiteral",
																				"src": "16027:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16012:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "16012:3:6"
																		},
																		"nativeSrc": "16012:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16012:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16035:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "16035:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16041:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "16041:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16031:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "16031:3:6"
																		},
																		"nativeSrc": "16031:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16031:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16005:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16005:6:6"
																},
																"nativeSrc": "16005:47:6",
																"nodeType": "YulFunctionCall",
																"src": "16005:47:6"
															},
															"nativeSrc": "16005:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "16005:47:6"
														},
														{
															"nativeSrc": "16061:139:6",
															"nodeType": "YulAssignment",
															"src": "16061:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16195:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "16195:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16069:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "16069:124:6"
																},
																"nativeSrc": "16069:131:6",
																"nodeType": "YulFunctionCall",
																"src": "16069:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16061:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "16061:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15788:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15939:9:6",
														"nodeType": "YulTypedName",
														"src": "15939:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15954:4:6",
														"nodeType": "YulTypedName",
														"src": "15954:4:6",
														"type": ""
													}
												],
												"src": "15788:419:6"
											},
											{
												"body": {
													"nativeSrc": "16258:149:6",
													"nodeType": "YulBlock",
													"src": "16258:149:6",
													"statements": [
														{
															"nativeSrc": "16268:25:6",
															"nodeType": "YulAssignment",
															"src": "16268:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16291:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16291:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16273:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "16273:17:6"
																},
																"nativeSrc": "16273:20:6",
																"nodeType": "YulFunctionCall",
																"src": "16273:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16268:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "16268:1:6"
																}
															]
														},
														{
															"nativeSrc": "16302:25:6",
															"nodeType": "YulAssignment",
															"src": "16302:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16325:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16325:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16307:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "16307:17:6"
																},
																"nativeSrc": "16307:20:6",
																"nodeType": "YulFunctionCall",
																"src": "16307:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16302:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "16302:1:6"
																}
															]
														},
														{
															"nativeSrc": "16336:17:6",
															"nodeType": "YulAssignment",
															"src": "16336:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16348:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16348:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16351:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16351:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16344:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16344:3:6"
																},
																"nativeSrc": "16344:9:6",
																"nodeType": "YulFunctionCall",
																"src": "16344:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16336:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "16336:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16378:22:6",
																"nodeType": "YulBlock",
																"src": "16378:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16380:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "16380:16:6"
																			},
																			"nativeSrc": "16380:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "16380:18:6"
																		},
																		"nativeSrc": "16380:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "16380:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16369:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "16369:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "16375:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "16375:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16366:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "16366:2:6"
																},
																"nativeSrc": "16366:11:6",
																"nodeType": "YulFunctionCall",
																"src": "16366:11:6"
															},
															"nativeSrc": "16363:37:6",
															"nodeType": "YulIf",
															"src": "16363:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "16213:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16244:1:6",
														"nodeType": "YulTypedName",
														"src": "16244:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16247:1:6",
														"nodeType": "YulTypedName",
														"src": "16247:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16253:4:6",
														"nodeType": "YulTypedName",
														"src": "16253:4:6",
														"type": ""
													}
												],
												"src": "16213:194:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$290_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$290_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot Unstake zero tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient staked balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unstake Already in Process\")\n\n    }\n\n    function abi_encode_t_stringliteral_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258(memPtr) {\n\n        mstore(add(memPtr, 0), \"No Unstake Request Found\")\n\n    }\n\n    function abi_encode_t_stringliteral_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unstake period not over\")\n\n    }\n\n    function abi_encode_t_stringliteral_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token Transfer Failed during UnS\")\n\n        mstore(add(memPtr, 32), \"taking Process\")\n\n    }\n\n    function abi_encode_t_stringliteral_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake zero Tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer Failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"648": [
									{
										"length": 32,
										"start": 1667
									},
									{
										"length": 32,
										"start": 2178
									},
									{
										"length": 32,
										"start": 2396
									},
									{
										"length": 32,
										"start": 3083
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cd575f3560e01c8063817b1cd21161008a578063a694fc3a11610064578063a694fc3a146101ed578063bb4d443614610209578063f2fde38b14610239578063f96dae0a14610255576100cd565b8063817b1cd2146101805780638da5cb5b1461019e578063a0873111146101bc576100cd565b806318fb4f32146100d15780633b64916e146100ed5780633ccfd60b1461011e5780636021726714610128578063715018a61461015857806379b5786214610162575b5f80fd5b6100eb60048036038101906100e69190610e35565b610273565b005b61010760048036038101906101029190610eba565b61053f565b604051610115929190610ef4565b60405180910390f35b610126610594565b005b610142600480360381019061013d9190610eba565b6107b9565b60405161014f9190610f1b565b60405180910390f35b6101606107ce565b005b61016a6107e1565b6040516101779190610f1b565b60405180910390f35b6101886107e8565b6040516101959190610f1b565b60405180910390f35b6101a66107ee565b6040516101b39190610f43565b60405180910390f35b6101d660048036038101906101d19190610eba565b610815565b6040516101e4929190610ef4565b60405180910390f35b61020760048036038101906102029190610e35565b610835565b005b610223600480360381019061021e9190610eba565b610b3f565b6040516102309190610f1b565b60405180910390f35b610253600480360381019061024e9190610eba565b610b85565b005b61025d610c09565b60405161026a9190610fb7565b60405180910390f35b61027b610c2d565b5f81116102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b49061102a565b60405180910390fd5b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561033d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033490611092565b60405180910390fd5b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154146103be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b5906110fa565b60405180910390fd5b61040e8160025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610c7c90919063ffffffff16565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061046481600354610c7c90919063ffffffff16565b6003819055505f62093a804261047a9190611145565b905060405180604001604052808381526020018281525060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f0155602082015181600101559050503373ffffffffffffffffffffffffffffffffffffffff167f9cee5eacd317086e5050733a5dad16ef5aaec185de792371a9625bfee2a3213b838360405161052b929190610ef4565b60405180910390a25061053c610c91565b50565b5f805f60045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050805f015481600101549250925050915091565b61059c610c2d565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015411610621576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610618906111c2565b60405180910390fd5b8060010154421015610668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065f9061122a565b60405180910390fd5b5f815f015490505f825f01819055505f82600101819055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016106dc929190611248565b6020604051808303815f875af11580156106f8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061071c91906112a4565b90508061075e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107559061133f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364836040516107a49190610f1b565b60405180910390a25050506107b7610c91565b565b6002602052805f5260405f205f915090505481565b6107d6610c9a565b6107df5f610d21565b565b62093a8081565b60035481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6004602052805f5260405f205f91509050805f0154908060010154905082565b61083d610c2d565b5f811161087f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610876906113a7565b60405180910390fd5b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108d99190610f43565b602060405180830381865afa1580156108f4573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061091891906113d9565b1015610959576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109509061144e565b60405180910390fd5b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016109b79392919061146c565b6020604051808303815f875af11580156109d3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109f791906112a4565b905080610a39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a30906114eb565b60405180910390fd5b610a898260025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610de290919063ffffffff16565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610adf82600354610de290919063ffffffff16565b6003819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d83604051610b2b9190610f1b565b60405180910390a250610b3c610c91565b50565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610b8d610c9a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bfd575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610bf49190610f43565b60405180910390fd5b610c0681610d21565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b600260015403610c72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6990611553565b60405180910390fd5b6002600181905550565b5f8183610c899190611571565b905092915050565b60018081905550565b610ca2610df7565b73ffffffffffffffffffffffffffffffffffffffff16610cc06107ee565b73ffffffffffffffffffffffffffffffffffffffff1614610d1f57610ce3610df7565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d169190610f43565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8183610def9190611145565b905092915050565b5f33905090565b5f80fd5b5f819050919050565b610e1481610e02565b8114610e1e575f80fd5b50565b5f81359050610e2f81610e0b565b92915050565b5f60208284031215610e4a57610e49610dfe565b5b5f610e5784828501610e21565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610e8982610e60565b9050919050565b610e9981610e7f565b8114610ea3575f80fd5b50565b5f81359050610eb481610e90565b92915050565b5f60208284031215610ecf57610ece610dfe565b5b5f610edc84828501610ea6565b91505092915050565b610eee81610e02565b82525050565b5f604082019050610f075f830185610ee5565b610f146020830184610ee5565b9392505050565b5f602082019050610f2e5f830184610ee5565b92915050565b610f3d81610e7f565b82525050565b5f602082019050610f565f830184610f34565b92915050565b5f819050919050565b5f610f7f610f7a610f7584610e60565b610f5c565b610e60565b9050919050565b5f610f9082610f65565b9050919050565b5f610fa182610f86565b9050919050565b610fb181610f97565b82525050565b5f602082019050610fca5f830184610fa8565b92915050565b5f82825260208201905092915050565b7f43616e6e6f7420556e7374616b65207a65726f20746f6b656e730000000000005f82015250565b5f611014601a83610fd0565b915061101f82610fe0565b602082019050919050565b5f6020820190508181035f83015261104181611008565b9050919050565b7f496e73756666696369656e74207374616b65642062616c616e636500000000005f82015250565b5f61107c601b83610fd0565b915061108782611048565b602082019050919050565b5f6020820190508181035f8301526110a981611070565b9050919050565b7f556e7374616b6520416c726561647920696e2050726f636573730000000000005f82015250565b5f6110e4601a83610fd0565b91506110ef826110b0565b602082019050919050565b5f6020820190508181035f830152611111816110d8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61114f82610e02565b915061115a83610e02565b925082820190508082111561117257611171611118565b5b92915050565b7f4e6f20556e7374616b65205265717565737420466f756e6400000000000000005f82015250565b5f6111ac601883610fd0565b91506111b782611178565b602082019050919050565b5f6020820190508181035f8301526111d9816111a0565b9050919050565b7f556e7374616b6520706572696f64206e6f74206f7665720000000000000000005f82015250565b5f611214601783610fd0565b915061121f826111e0565b602082019050919050565b5f6020820190508181035f83015261124181611208565b9050919050565b5f60408201905061125b5f830185610f34565b6112686020830184610ee5565b9392505050565b5f8115159050919050565b6112838161126f565b811461128d575f80fd5b50565b5f8151905061129e8161127a565b92915050565b5f602082840312156112b9576112b8610dfe565b5b5f6112c684828501611290565b91505092915050565b7f546f6b656e205472616e73666572204661696c656420647572696e6720556e535f8201527f74616b696e672050726f63657373000000000000000000000000000000000000602082015250565b5f611329602e83610fd0565b9150611334826112cf565b604082019050919050565b5f6020820190508181035f8301526113568161131d565b9050919050565b7f43616e6e6f74207374616b65207a65726f20546f6b656e7300000000000000005f82015250565b5f611391601883610fd0565b915061139c8261135d565b602082019050919050565b5f6020820190508181035f8301526113be81611385565b9050919050565b5f815190506113d381610e0b565b92915050565b5f602082840312156113ee576113ed610dfe565b5b5f6113fb848285016113c5565b91505092915050565b7f496e73756666696369656e742042616c616e63650000000000000000000000005f82015250565b5f611438601483610fd0565b915061144382611404565b602082019050919050565b5f6020820190508181035f8301526114658161142c565b9050919050565b5f60608201905061147f5f830186610f34565b61148c6020830185610f34565b6114996040830184610ee5565b949350505050565b7f5472616e73666572204661696c656400000000000000000000000000000000005f82015250565b5f6114d5600f83610fd0565b91506114e0826114a1565b602082019050919050565b5f6020820190508181035f830152611502816114c9565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61153d601f83610fd0565b915061154882611509565b602082019050919050565b5f6020820190508181035f83015261156a81611531565b9050919050565b5f61157b82610e02565b915061158683610e02565b925082820390508181111561159e5761159d611118565b5b9291505056fea2646970667358221220fa7070370293574d30dfd8e05efd63bd8f2b2509d3c1a00919f1144eff2ce81f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xBB4D4436 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xF96DAE0A EQ PUSH2 0x255 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xA0873111 EQ PUSH2 0x1BC JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x18FB4F32 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x3B64916E EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x60217267 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x79B57862 EQ PUSH2 0x162 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP3 SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x594 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x160 PUSH2 0x7CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP3 SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH2 0x835 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0xB85 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25D PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0xC2D JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x2BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B4 SWAP1 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ PUSH2 0x3BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B5 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40E DUP2 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xC7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x464 DUP2 PUSH1 0x3 SLOAD PUSH2 0xC7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH0 PUSH3 0x93A80 TIMESTAMP PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x1145 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9CEE5EACD317086E5050733A5DAD16EF5AAEC185DE792371A9625BFEE2A3213B DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x52B SWAP3 SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x53C PUSH2 0xC91 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x59C PUSH2 0xC2D JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x621 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x618 SWAP1 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x668 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DC SWAP3 SWAP2 SWAP1 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71C SWAP2 SWAP1 PUSH2 0x12A4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x755 SWAP1 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7A4 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x7B7 PUSH2 0xC91 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7D6 PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x7DF PUSH0 PUSH2 0xD21 JUMP JUMPDEST JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x83D PUSH2 0xC2D JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x876 SWAP1 PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x918 SWAP2 SWAP1 PUSH2 0x13D9 JUMP JUMPDEST LT ISZERO PUSH2 0x959 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x950 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x146C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9D3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F7 SWAP2 SWAP1 PUSH2 0x12A4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA30 SWAP1 PUSH2 0x14EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA89 DUP3 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xADF DUP3 PUSH1 0x3 SLOAD PUSH2 0xDE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD PUSH2 0xB2B SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xB3C PUSH2 0xC91 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8D PUSH2 0xC9A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBFD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC06 DUP2 PUSH2 0xD21 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xC72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC69 SWAP1 PUSH2 0x1553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xC89 SWAP2 SWAP1 PUSH2 0x1571 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xCA2 PUSH2 0xDF7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCC0 PUSH2 0x7EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD1F JUMPI PUSH2 0xCE3 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD16 SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xDEF SWAP2 SWAP1 PUSH2 0x1145 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE14 DUP2 PUSH2 0xE02 JUMP JUMPDEST DUP2 EQ PUSH2 0xE1E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE2F DUP2 PUSH2 0xE0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4A JUMPI PUSH2 0xE49 PUSH2 0xDFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE57 DUP5 DUP3 DUP6 ADD PUSH2 0xE21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE89 DUP3 PUSH2 0xE60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE99 DUP2 PUSH2 0xE7F JUMP JUMPDEST DUP2 EQ PUSH2 0xEA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB4 DUP2 PUSH2 0xE90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECF JUMPI PUSH2 0xECE PUSH2 0xDFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEDC DUP5 DUP3 DUP6 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEEE DUP2 PUSH2 0xE02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF07 PUSH0 DUP4 ADD DUP6 PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0xF14 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEE5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF2E PUSH0 DUP4 ADD DUP5 PUSH2 0xEE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF3D DUP2 PUSH2 0xE7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF56 PUSH0 DUP4 ADD DUP5 PUSH2 0xF34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF7F PUSH2 0xF7A PUSH2 0xF75 DUP5 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0xF5C JUMP JUMPDEST PUSH2 0xE60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF90 DUP3 PUSH2 0xF65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFA1 DUP3 PUSH2 0xF86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB1 DUP2 PUSH2 0xF97 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCA PUSH0 DUP4 ADD DUP5 PUSH2 0xFA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420556E7374616B65207A65726F20746F6B656E73000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1014 PUSH1 0x1A DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x101F DUP3 PUSH2 0xFE0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1041 DUP2 PUSH2 0x1008 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x107C PUSH1 0x1B DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1087 DUP3 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10A9 DUP2 PUSH2 0x1070 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E7374616B6520416C726561647920696E2050726F63657373000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10E4 PUSH1 0x1A DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x10EF DUP3 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1111 DUP2 PUSH2 0x10D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x114F DUP3 PUSH2 0xE02 JUMP JUMPDEST SWAP2 POP PUSH2 0x115A DUP4 PUSH2 0xE02 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1172 JUMPI PUSH2 0x1171 PUSH2 0x1118 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20556E7374616B65205265717565737420466F756E640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11AC PUSH1 0x18 DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B7 DUP3 PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11D9 DUP2 PUSH2 0x11A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E7374616B6520706572696F64206E6F74206F766572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1214 PUSH1 0x17 DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x121F DUP3 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1241 DUP2 PUSH2 0x1208 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x125B PUSH0 DUP4 ADD DUP6 PUSH2 0xF34 JUMP JUMPDEST PUSH2 0x1268 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEE5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1283 DUP2 PUSH2 0x126F JUMP JUMPDEST DUP2 EQ PUSH2 0x128D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x129E DUP2 PUSH2 0x127A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B9 JUMPI PUSH2 0x12B8 PUSH2 0xDFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12C6 DUP5 DUP3 DUP6 ADD PUSH2 0x1290 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E205472616E73666572204661696C656420647572696E6720556E53 PUSH0 DUP3 ADD MSTORE PUSH32 0x74616B696E672050726F63657373000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1329 PUSH1 0x2E DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1334 DUP3 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1356 DUP2 PUSH2 0x131D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B65207A65726F20546F6B656E730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1391 PUSH1 0x18 DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x139C DUP3 PUSH2 0x135D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13BE DUP2 PUSH2 0x1385 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x13D3 DUP2 PUSH2 0xE0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13EE JUMPI PUSH2 0x13ED PUSH2 0xDFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13FB DUP5 DUP3 DUP6 ADD PUSH2 0x13C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742042616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1438 PUSH1 0x14 DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1443 DUP3 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1465 DUP2 PUSH2 0x142C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x147F PUSH0 DUP4 ADD DUP7 PUSH2 0xF34 JUMP JUMPDEST PUSH2 0x148C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF34 JUMP JUMPDEST PUSH2 0x1499 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEE5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572204661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14D5 PUSH1 0xF DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x14E0 DUP3 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1502 DUP2 PUSH2 0x14C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x153D PUSH1 0x1F DUP4 PUSH2 0xFD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1548 DUP3 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x156A DUP2 PUSH2 0x1531 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x157B DUP3 PUSH2 0xE02 JUMP JUMPDEST SWAP2 POP PUSH2 0x1586 DUP4 PUSH2 0xE02 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x159E JUMPI PUSH2 0x159D PUSH2 0x1118 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL PUSH17 0x70370293574D30DFD8E05EFD63BD8F2B25 MULMOD 0xD3 0xC1 LOG0 MULMOD NOT CALL EQ 0x4E SELFDESTRUCT 0x2C 0xE8 0x1F PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "291:4692:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2546:757;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4749:230;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3477:662;;;:::i;:::-;;429:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;721:47:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;483:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;659:55:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1657:610;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4374:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;383:39:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2546:757;2261:21:1;:19;:21::i;:::-;2640:1:5::1;2630:7;:11;2622:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2719:7;2690:13;:25;2704:10;2690:25;;;;;;;;;;;;;;;;:36;;2682:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2815:1;2776:16;:28;2793:10;2776:28;;;;;;;;;;;;;;;:35;;;:40;2768:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;2922:38;2952:7;2922:13;:25;2936:10;2922:25;;;;;;;;;;;;;;;;:29;;:38;;;;:::i;:::-;2894:13;:25;2908:10;2894:25;;;;;;;;;;;;;;;:66;;;;2984:24;3000:7;2984:11;;:15;;:24;;;;:::i;:::-;2970:11;:38;;;;3049:18;762:6;3070:15;:32;;;;:::i;:::-;3049:53;;3143:88;;;;;;;;3177:7;3143:88;;;;3210:10;3143:88;;::::0;3112:16:::1;:28;3129:10;3112:28;;;;;;;;;;;;;;;:119;;;;;;;;;;;;;;;;;;;3264:10;3247:49;;;3276:7;3285:10;3247:49;;;;;;;:::i;:::-;;;;;;;;2612:691;2303:20:1::0;:18;:20::i;:::-;2546:757:5;:::o;4749:230::-;4817:14;4833:18;4863:27;4893:16;:26;4910:8;4893:26;;;;;;;;;;;;;;;4863:56;;4937:7;:14;;;4953:7;:18;;;4929:43;;;;;4749:230;;;:::o;3477:662::-;2261:21:1;:19;:21::i;:::-;3529:27:5::1;3559:16;:28;3576:10;3559:28;;;;;;;;;;;;;;;3529:58;;3622:1;3605:7;:14;;;:18;3597:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3689:7;:18;;;3670:15;:37;;3662:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3746:24;3773:7;:14;;;3746:41;;3868:1;3851:7;:14;;:18;;;;3900:1;3879:7;:18;;:22;;;;3932:12;3947:15;:24;;;3972:10;3984:16;3947:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3932:69;;4019:7;4011:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;4102:10;4093:38;;;4114:16;4093:38;;;;;;:::i;:::-;;;;;;;;3519:620;;;2303:20:1::0;:18;:20::i;:::-;3477:662:5:o;429:48::-;;;;;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;721:47:5:-;762:6;721:47;:::o;483:23::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;659:55:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1657:610::-;2261:21:1;:19;:21::i;:::-;1739:1:5::1;1729:7;:11;1721:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1828:7;1787:15;:25;;;1813:10;1787:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;1779:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:12;1947:15;:28;;;1976:10;1996:4;2003:7;1947:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1932:79;;2029:7;2021:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;2131:38;2161:7;2131:13;:25;2145:10;2131:25;;;;;;;;;;;;;;;;:29;;:38;;;;:::i;:::-;2103:13;:25;2117:10;2103:25;;;;;;;;;;;;;;;:66;;;;2193:24;2209:7;2193:11;;:15;;:24;;;;:::i;:::-;2179:11;:38;;;;2240:10;2233:27;;;2252:7;2233:27;;;;;;:::i;:::-;;;;;;;;1711:556;2303:20:1::0;:18;:20::i;:::-;1657:610:5;:::o;4374:118::-;4436:7;4462:13;:23;4476:8;4462:23;;;;;;;;;;;;;;;;4455:30;;4374:118;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;383:39:5:-;;;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;3122:96:4:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2629:209:1:-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2755:96:4:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;656::3:-;709:7;735:10;728:17;;656:96;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:118::-;1954:24;1972:5;1954:24;:::i;:::-;1949:3;1942:37;1867:118;;:::o;1991:332::-;2112:4;2150:2;2139:9;2135:18;2127:26;;2163:71;2231:1;2220:9;2216:17;2207:6;2163:71;:::i;:::-;2244:72;2312:2;2301:9;2297:18;2288:6;2244:72;:::i;:::-;1991:332;;;;;:::o;2329:222::-;2422:4;2460:2;2449:9;2445:18;2437:26;;2473:71;2541:1;2530:9;2526:17;2517:6;2473:71;:::i;:::-;2329:222;;;;:::o;2557:118::-;2644:24;2662:5;2644:24;:::i;:::-;2639:3;2632:37;2557:118;;:::o;2681:222::-;2774:4;2812:2;2801:9;2797:18;2789:26;;2825:71;2893:1;2882:9;2878:17;2869:6;2825:71;:::i;:::-;2681:222;;;;:::o;2909:60::-;2937:3;2958:5;2951:12;;2909:60;;;:::o;2975:142::-;3025:9;3058:53;3076:34;3085:24;3103:5;3085:24;:::i;:::-;3076:34;:::i;:::-;3058:53;:::i;:::-;3045:66;;2975:142;;;:::o;3123:126::-;3173:9;3206:37;3237:5;3206:37;:::i;:::-;3193:50;;3123:126;;;:::o;3255:140::-;3319:9;3352:37;3383:5;3352:37;:::i;:::-;3339:50;;3255:140;;;:::o;3401:159::-;3502:51;3547:5;3502:51;:::i;:::-;3497:3;3490:64;3401:159;;:::o;3566:250::-;3673:4;3711:2;3700:9;3696:18;3688:26;;3724:85;3806:1;3795:9;3791:17;3782:6;3724:85;:::i;:::-;3566:250;;;;:::o;3822:169::-;3906:11;3940:6;3935:3;3928:19;3980:4;3975:3;3971:14;3956:29;;3822:169;;;;:::o;3997:176::-;4137:28;4133:1;4125:6;4121:14;4114:52;3997:176;:::o;4179:366::-;4321:3;4342:67;4406:2;4401:3;4342:67;:::i;:::-;4335:74;;4418:93;4507:3;4418:93;:::i;:::-;4536:2;4531:3;4527:12;4520:19;;4179:366;;;:::o;4551:419::-;4717:4;4755:2;4744:9;4740:18;4732:26;;4804:9;4798:4;4794:20;4790:1;4779:9;4775:17;4768:47;4832:131;4958:4;4832:131;:::i;:::-;4824:139;;4551:419;;;:::o;4976:177::-;5116:29;5112:1;5104:6;5100:14;5093:53;4976:177;:::o;5159:366::-;5301:3;5322:67;5386:2;5381:3;5322:67;:::i;:::-;5315:74;;5398:93;5487:3;5398:93;:::i;:::-;5516:2;5511:3;5507:12;5500:19;;5159:366;;;:::o;5531:419::-;5697:4;5735:2;5724:9;5720:18;5712:26;;5784:9;5778:4;5774:20;5770:1;5759:9;5755:17;5748:47;5812:131;5938:4;5812:131;:::i;:::-;5804:139;;5531:419;;;:::o;5956:176::-;6096:28;6092:1;6084:6;6080:14;6073:52;5956:176;:::o;6138:366::-;6280:3;6301:67;6365:2;6360:3;6301:67;:::i;:::-;6294:74;;6377:93;6466:3;6377:93;:::i;:::-;6495:2;6490:3;6486:12;6479:19;;6138:366;;;:::o;6510:419::-;6676:4;6714:2;6703:9;6699:18;6691:26;;6763:9;6757:4;6753:20;6749:1;6738:9;6734:17;6727:47;6791:131;6917:4;6791:131;:::i;:::-;6783:139;;6510:419;;;:::o;6935:180::-;6983:77;6980:1;6973:88;7080:4;7077:1;7070:15;7104:4;7101:1;7094:15;7121:191;7161:3;7180:20;7198:1;7180:20;:::i;:::-;7175:25;;7214:20;7232:1;7214:20;:::i;:::-;7209:25;;7257:1;7254;7250:9;7243:16;;7278:3;7275:1;7272:10;7269:36;;;7285:18;;:::i;:::-;7269:36;7121:191;;;;:::o;7318:174::-;7458:26;7454:1;7446:6;7442:14;7435:50;7318:174;:::o;7498:366::-;7640:3;7661:67;7725:2;7720:3;7661:67;:::i;:::-;7654:74;;7737:93;7826:3;7737:93;:::i;:::-;7855:2;7850:3;7846:12;7839:19;;7498:366;;;:::o;7870:419::-;8036:4;8074:2;8063:9;8059:18;8051:26;;8123:9;8117:4;8113:20;8109:1;8098:9;8094:17;8087:47;8151:131;8277:4;8151:131;:::i;:::-;8143:139;;7870:419;;;:::o;8295:173::-;8435:25;8431:1;8423:6;8419:14;8412:49;8295:173;:::o;8474:366::-;8616:3;8637:67;8701:2;8696:3;8637:67;:::i;:::-;8630:74;;8713:93;8802:3;8713:93;:::i;:::-;8831:2;8826:3;8822:12;8815:19;;8474:366;;;:::o;8846:419::-;9012:4;9050:2;9039:9;9035:18;9027:26;;9099:9;9093:4;9089:20;9085:1;9074:9;9070:17;9063:47;9127:131;9253:4;9127:131;:::i;:::-;9119:139;;8846:419;;;:::o;9271:332::-;9392:4;9430:2;9419:9;9415:18;9407:26;;9443:71;9511:1;9500:9;9496:17;9487:6;9443:71;:::i;:::-;9524:72;9592:2;9581:9;9577:18;9568:6;9524:72;:::i;:::-;9271:332;;;;;:::o;9609:90::-;9643:7;9686:5;9679:13;9672:21;9661:32;;9609:90;;;:::o;9705:116::-;9775:21;9790:5;9775:21;:::i;:::-;9768:5;9765:32;9755:60;;9811:1;9808;9801:12;9755:60;9705:116;:::o;9827:137::-;9881:5;9912:6;9906:13;9897:22;;9928:30;9952:5;9928:30;:::i;:::-;9827:137;;;;:::o;9970:345::-;10037:6;10086:2;10074:9;10065:7;10061:23;10057:32;10054:119;;;10092:79;;:::i;:::-;10054:119;10212:1;10237:61;10290:7;10281:6;10270:9;10266:22;10237:61;:::i;:::-;10227:71;;10183:125;9970:345;;;;:::o;10321:233::-;10461:34;10457:1;10449:6;10445:14;10438:58;10530:16;10525:2;10517:6;10513:15;10506:41;10321:233;:::o;10560:366::-;10702:3;10723:67;10787:2;10782:3;10723:67;:::i;:::-;10716:74;;10799:93;10888:3;10799:93;:::i;:::-;10917:2;10912:3;10908:12;10901:19;;10560:366;;;:::o;10932:419::-;11098:4;11136:2;11125:9;11121:18;11113:26;;11185:9;11179:4;11175:20;11171:1;11160:9;11156:17;11149:47;11213:131;11339:4;11213:131;:::i;:::-;11205:139;;10932:419;;;:::o;11357:174::-;11497:26;11493:1;11485:6;11481:14;11474:50;11357:174;:::o;11537:366::-;11679:3;11700:67;11764:2;11759:3;11700:67;:::i;:::-;11693:74;;11776:93;11865:3;11776:93;:::i;:::-;11894:2;11889:3;11885:12;11878:19;;11537:366;;;:::o;11909:419::-;12075:4;12113:2;12102:9;12098:18;12090:26;;12162:9;12156:4;12152:20;12148:1;12137:9;12133:17;12126:47;12190:131;12316:4;12190:131;:::i;:::-;12182:139;;11909:419;;;:::o;12334:143::-;12391:5;12422:6;12416:13;12407:22;;12438:33;12465:5;12438:33;:::i;:::-;12334:143;;;;:::o;12483:351::-;12553:6;12602:2;12590:9;12581:7;12577:23;12573:32;12570:119;;;12608:79;;:::i;:::-;12570:119;12728:1;12753:64;12809:7;12800:6;12789:9;12785:22;12753:64;:::i;:::-;12743:74;;12699:128;12483:351;;;;:::o;12840:170::-;12980:22;12976:1;12968:6;12964:14;12957:46;12840:170;:::o;13016:366::-;13158:3;13179:67;13243:2;13238:3;13179:67;:::i;:::-;13172:74;;13255:93;13344:3;13255:93;:::i;:::-;13373:2;13368:3;13364:12;13357:19;;13016:366;;;:::o;13388:419::-;13554:4;13592:2;13581:9;13577:18;13569:26;;13641:9;13635:4;13631:20;13627:1;13616:9;13612:17;13605:47;13669:131;13795:4;13669:131;:::i;:::-;13661:139;;13388:419;;;:::o;13813:442::-;13962:4;14000:2;13989:9;13985:18;13977:26;;14013:71;14081:1;14070:9;14066:17;14057:6;14013:71;:::i;:::-;14094:72;14162:2;14151:9;14147:18;14138:6;14094:72;:::i;:::-;14176;14244:2;14233:9;14229:18;14220:6;14176:72;:::i;:::-;13813:442;;;;;;:::o;14261:165::-;14401:17;14397:1;14389:6;14385:14;14378:41;14261:165;:::o;14432:366::-;14574:3;14595:67;14659:2;14654:3;14595:67;:::i;:::-;14588:74;;14671:93;14760:3;14671:93;:::i;:::-;14789:2;14784:3;14780:12;14773:19;;14432:366;;;:::o;14804:419::-;14970:4;15008:2;14997:9;14993:18;14985:26;;15057:9;15051:4;15047:20;15043:1;15032:9;15028:17;15021:47;15085:131;15211:4;15085:131;:::i;:::-;15077:139;;14804:419;;;:::o;15229:181::-;15369:33;15365:1;15357:6;15353:14;15346:57;15229:181;:::o;15416:366::-;15558:3;15579:67;15643:2;15638:3;15579:67;:::i;:::-;15572:74;;15655:93;15744:3;15655:93;:::i;:::-;15773:2;15768:3;15764:12;15757:19;;15416:366;;;:::o;15788:419::-;15954:4;15992:2;15981:9;15977:18;15969:26;;16041:9;16035:4;16031:20;16027:1;16016:9;16012:17;16005:47;16069:131;16195:4;16069:131;:::i;:::-;16061:139;;15788:419;;;:::o;16213:194::-;16253:4;16273:20;16291:1;16273:20;:::i;:::-;16268:25;;16307:20;16325:1;16307:20;:::i;:::-;16302:25;;16351:1;16348;16344:9;16336:17;;16375:1;16369:4;16366:11;16363:37;;;16380:18;;:::i;:::-;16363:37;16213:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1118800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UNSTAKE_PERIOD()": "436",
								"getUnstakedRequest(address)": "infinite",
								"getVotingPower(address)": "2873",
								"governanceToken()": "infinite",
								"initiateUnstaking(uint256)": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"stake(uint256)": "infinite",
								"stakedBalance(address)": "2869",
								"totalStaked()": "2448",
								"transferOwnership(address)": "infinite",
								"unstakingRequest(address)": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 291,
									"end": 4983,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 291,
									"end": 4983,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 291,
									"end": 4983,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1213,
									"end": 1432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 1292,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1337,
									"end": 1338,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1312,
									"end": 1339,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1312,
									"end": 1339,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1312,
									"end": 1325,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1312,
									"end": 1339,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1312,
									"end": 1339,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1312,
									"end": 1339,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1304,
									"end": 1376,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1411,
									"end": 1424,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1425,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1386,
									"end": 1425,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1425,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1386,
									"end": 1425,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1425,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1386,
									"end": 1425,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1425,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1425,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1425,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1425,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 291,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 291,
									"end": 4983,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1805,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1828,
									"end": 1834,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1823,
									"end": 1826,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1816,
									"end": 1835,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1872,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1863,
									"end": 1866,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1859,
									"end": 1873,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1844,
									"end": 1873,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1844,
									"end": 1873,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 2067,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1885,
									"end": 2067,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2025,
									"end": 2059,
									"name": "PUSH",
									"source": 6,
									"value": "54686520546F6B656E20616464726573732063616E6E6F74206265207A65726F"
								},
								{
									"begin": 2021,
									"end": 2022,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2019,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2002,
									"end": 2060,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 2067,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 2067,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2439,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 2073,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2215,
									"end": 2218,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2303,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2300,
									"end": 2302,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2295,
									"end": 2298,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2236,
									"end": 2303,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2236,
									"end": 2303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2236,
									"end": 2303,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2236,
									"end": 2303,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2229,
									"end": 2303,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2229,
									"end": 2303,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2312,
									"end": 2405,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2401,
									"end": 2404,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2312,
									"end": 2405,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 2312,
									"end": 2405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2312,
									"end": 2405,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2312,
									"end": 2405,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2430,
									"end": 2432,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2425,
									"end": 2428,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2421,
									"end": 2433,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2414,
									"end": 2433,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2414,
									"end": 2433,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2439,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2439,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2439,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2439,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2445,
									"end": 2864,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 2445,
									"end": 2864,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2611,
									"end": 2615,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2649,
									"end": 2651,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2647,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2634,
									"end": 2652,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2652,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2652,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2698,
									"end": 2707,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2692,
									"end": 2696,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2688,
									"end": 2708,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2684,
									"end": 2685,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2673,
									"end": 2682,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2669,
									"end": 2686,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2662,
									"end": 2709,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 2726,
									"end": 2857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2857,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2726,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2718,
									"end": 2857,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2718,
									"end": 2857,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2445,
									"end": 2864,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2445,
									"end": 2864,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2445,
									"end": 2864,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2445,
									"end": 2864,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 291,
									"end": 4983,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 291,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 291,
									"end": 4983,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 291,
									"end": 4983,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 291,
									"end": 4983,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 291,
									"end": 4983,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 291,
									"end": 4983,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 4983,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 291,
									"end": 4983,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 4983,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "648"
								},
								{
									"begin": 291,
									"end": 4983,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 291,
									"end": 4983,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 4983,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fa7070370293574d30dfd8e05efd63bd8f2b2509d3c1a00919f1144eff2ce81f64736f6c634300081a0033",
									".code": [
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "817B1CD2"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "A694FC3A"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "A694FC3A"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "BB4D4436"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "F96DAE0A"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "817B1CD2"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "A0873111"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "18FB4F32"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "3B64916E"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "3CCFD60B"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "60217267"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "79B57862"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4983,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2546,
											"end": 3303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2546,
											"end": 3303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4749,
											"end": 4979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4749,
											"end": 4979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 4749,
											"end": 4979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 4139,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3477,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3477,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3477,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 4139,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3477,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 4139,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 429,
											"end": 477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 429,
											"end": 477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 429,
											"end": 477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 721,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 721,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 721,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 721,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 721,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 721,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 721,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 721,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 768,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 721,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 721,
											"end": 768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 721,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 721,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 721,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 721,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 721,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 721,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 768,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 721,
											"end": 768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 721,
											"end": 768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 721,
											"end": 768,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 721,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 721,
											"end": 768,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 483,
											"end": 506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 483,
											"end": 506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 659,
											"end": 714,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 659,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 659,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 659,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 2267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1657,
											"end": 2267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4374,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4374,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 4374,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 422,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 383,
											"end": 422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 383,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 383,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 383,
											"end": 422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 422,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 383,
											"end": 422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 383,
											"end": 422,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 422,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 383,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 383,
											"end": 422,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 383,
											"end": 422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 383,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 383,
											"end": 422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 422,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 383,
											"end": 422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 383,
											"end": 422,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 422,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 383,
											"end": 422,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 383,
											"end": 422,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 383,
											"end": 422,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 383,
											"end": 422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 383,
											"end": 422,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2641,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2622,
											"end": 2672,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 2726,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2714,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2726,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2726,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2682,
											"end": 2758,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2793,
											"end": 2803,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2811,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2811,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2816,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2768,
											"end": 2847,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2952,
											"end": 2959,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2946,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2951,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2922,
											"end": 2951,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2960,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2960,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2960,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2922,
											"end": 2960,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2918,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2984,
											"end": 3008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3000,
											"end": 3007,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2984,
											"end": 2995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2984,
											"end": 2995,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2984,
											"end": 2999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2984,
											"end": 2999,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2984,
											"end": 3008,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2984,
											"end": 3008,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2984,
											"end": 3008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2984,
											"end": 3008,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2984,
											"end": 3008,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2984,
											"end": 3008,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2984,
											"end": 3008,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2970,
											"end": 3008,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3008,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3008,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3008,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3049,
											"end": 3067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "93A80"
										},
										{
											"begin": 3070,
											"end": 3085,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3070,
											"end": 3102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3070,
											"end": 3102,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3070,
											"end": 3102,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3070,
											"end": 3102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3070,
											"end": 3102,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3070,
											"end": 3102,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3070,
											"end": 3102,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3049,
											"end": 3102,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3049,
											"end": 3102,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3177,
											"end": 3184,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3210,
											"end": 3220,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3112,
											"end": 3140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3129,
											"end": 3139,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3112,
											"end": 3140,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3112,
											"end": 3140,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3140,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3140,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3140,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3140,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3140,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3140,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3112,
											"end": 3140,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3264,
											"end": 3274,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9CEE5EACD317086E5050733A5DAD16EF5AAEC185DE792371A9625BFEE2A3213B"
										},
										{
											"begin": 3276,
											"end": 3283,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3295,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3247,
											"end": 3296,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2612,
											"end": 3303,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4817,
											"end": 4831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4863,
											"end": 4890,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4893,
											"end": 4909,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4893,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4918,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4893,
											"end": 4919,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4893,
											"end": 4919,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4919,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4893,
											"end": 4919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4919,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4893,
											"end": 4919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4893,
											"end": 4919,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4863,
											"end": 4919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4863,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 4944,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 4951,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4937,
											"end": 4951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 4951,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4953,
											"end": 4960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4953,
											"end": 4971,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4953,
											"end": 4971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4953,
											"end": 4971,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4929,
											"end": 4972,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4929,
											"end": 4972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4929,
											"end": 4972,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4929,
											"end": 4972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4929,
											"end": 4972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 4139,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3477,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3559,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3576,
											"end": 3586,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3559,
											"end": 3587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3559,
											"end": 3587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3587,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3587,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3559,
											"end": 3587,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3587,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3587,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3587,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3559,
											"end": 3587,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3587,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3529,
											"end": 3587,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3529,
											"end": 3587,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3622,
											"end": 3623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3605,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3605,
											"end": 3619,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3605,
											"end": 3623,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3652,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3696,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3689,
											"end": 3707,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3707,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3670,
											"end": 3685,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3670,
											"end": 3707,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3670,
											"end": 3707,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3662,
											"end": 3735,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3746,
											"end": 3770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3787,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3787,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3746,
											"end": 3787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3746,
											"end": 3787,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3858,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3865,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3869,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3869,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3869,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3869,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 3886,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3879,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3879,
											"end": 3897,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3879,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3879,
											"end": 3901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3879,
											"end": 3901,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3879,
											"end": 3901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 3944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3962,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "648"
										},
										{
											"begin": 3947,
											"end": 3971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3971,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 3971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 3972,
											"end": 3982,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4000,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3947,
											"end": 4001,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 4001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3947,
											"end": 4001,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 4001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4019,
											"end": 4026,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4011,
											"end": 4077,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4112,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 4114,
											"end": 4130,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 4093,
											"end": 4131,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 3519,
											"end": 4139,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3519,
											"end": 4139,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3519,
											"end": 4139,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 4139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 721,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 721,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 762,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "93A80"
										},
										{
											"begin": 721,
											"end": 768,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 721,
											"end": 768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 659,
											"end": 714,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1736,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1729,
											"end": 1740,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1721,
											"end": 1769,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1835,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1802,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "648"
										},
										{
											"begin": 1787,
											"end": 1812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1787,
											"end": 1812,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1813,
											"end": 1823,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1787,
											"end": 1824,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1787,
											"end": 1824,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1835,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1835,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1779,
											"end": 1860,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1962,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "648"
										},
										{
											"begin": 1947,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1975,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1976,
											"end": 1986,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2000,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2010,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1947,
											"end": 2011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 2011,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1947,
											"end": 2011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 2011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2021,
											"end": 2056,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2161,
											"end": 2168,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2155,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2131,
											"end": 2160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2169,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2131,
											"end": 2169,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2169,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2131,
											"end": 2169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2127,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2169,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2169,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2169,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2209,
											"end": 2216,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2193,
											"end": 2204,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2217,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2193,
											"end": 2217,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2217,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2193,
											"end": 2217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2179,
											"end": 2217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2217,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2217,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2250,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 2252,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2233,
											"end": 2260,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 2267,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4462,
											"end": 4475,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4476,
											"end": 4484,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4455,
											"end": 4485,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4455,
											"end": 4485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 422,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 383,
											"end": 422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 383,
											"end": 422,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "648"
										},
										{
											"begin": 383,
											"end": 422,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 383,
											"end": 422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1332,
											"end": 1356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1487,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1638,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1646,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 1825,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1791,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1972,
											"end": 1977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1954,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1979,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 1985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 2323,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1991,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2116,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2152,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2148,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2135,
											"end": 2153,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2231,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2229,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2213,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2163,
											"end": 2234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2234,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2163,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2244,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2316,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2244,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 2323,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 2323,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 2323,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 2323,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 2323,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 2323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2462,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2449,
											"end": 2458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2445,
											"end": 2463,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2437,
											"end": 2463,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2437,
											"end": 2463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2541,
											"end": 2542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2539,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2543,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2523,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2473,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2544,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2473,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2675,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2557,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2662,
											"end": 2667,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2644,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2668,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2644,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2669,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 2903,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2681,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2778,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2801,
											"end": 2810,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2893,
											"end": 2894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2891,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2869,
											"end": 2875,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2825,
											"end": 2896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2896,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2825,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 2903,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 2903,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 2903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 2903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 2903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2909,
											"end": 2969,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2909,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2958,
											"end": 2963,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2963,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2909,
											"end": 2969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2909,
											"end": 2969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2909,
											"end": 2969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2909,
											"end": 2969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2975,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3025,
											"end": 3034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 3076,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 3085,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 3103,
											"end": 3108,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3085,
											"end": 3109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3109,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 3085,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3076,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3110,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 3076,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3058,
											"end": 3111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3111,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 3058,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3111,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3111,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 3117,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 3117,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3249,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3123,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3173,
											"end": 3182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3237,
											"end": 3242,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3206,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3243,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3206,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3249,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3395,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3255,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3383,
											"end": 3388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3352,
											"end": 3389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3389,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3352,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3395,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3395,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3401,
											"end": 3560,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3401,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3547,
											"end": 3552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3502,
											"end": 3553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3553,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3502,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3554,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3401,
											"end": 3560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3401,
											"end": 3560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3401,
											"end": 3560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3816,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3566,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3673,
											"end": 3677,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3713,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3714,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3714,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3724,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3806,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3795,
											"end": 3804,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3782,
											"end": 3788,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3724,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3724,
											"end": 3809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3724,
											"end": 3809,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3724,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3816,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3816,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3906,
											"end": 3917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3935,
											"end": 3938,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 3947,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3980,
											"end": 3984,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3975,
											"end": 3978,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 3985,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3956,
											"end": 3985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3956,
											"end": 3985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3997,
											"end": 4173,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3997,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4165,
											"name": "PUSH",
											"source": 6,
											"value": "43616E6E6F7420556E7374616B65207A65726F20746F6B656E73000000000000"
										},
										{
											"begin": 4133,
											"end": 4134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4131,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4121,
											"end": 4135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4114,
											"end": 4166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3997,
											"end": 4173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3997,
											"end": 4173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4179,
											"end": 4545,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 4179,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 4406,
											"end": 4408,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 4401,
											"end": 4404,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4342,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 4342,
											"end": 4409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4342,
											"end": 4409,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 4342,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4409,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4507,
											"end": 4510,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 4418,
											"end": 4511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4511,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4418,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4536,
											"end": 4538,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4531,
											"end": 4534,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4539,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4179,
											"end": 4545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4179,
											"end": 4545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4179,
											"end": 4545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4179,
											"end": 4545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4970,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4551,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4755,
											"end": 4757,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4744,
											"end": 4753,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4804,
											"end": 4813,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4802,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4814,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4790,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4788,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4768,
											"end": 4815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 4958,
											"end": 4962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 4832,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 4963,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 4832,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4824,
											"end": 4963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4824,
											"end": 4963,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4970,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5153,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 4976,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E74207374616B65642062616C616E63650000000000"
										},
										{
											"begin": 5112,
											"end": 5113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5110,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5100,
											"end": 5114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5093,
											"end": 5146,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5525,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 5159,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5301,
											"end": 5304,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 5386,
											"end": 5388,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 5381,
											"end": 5384,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5322,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5322,
											"end": 5389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5322,
											"end": 5389,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 5322,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5487,
											"end": 5490,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 5398,
											"end": 5491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5491,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5398,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5516,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5511,
											"end": 5514,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 5519,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5500,
											"end": 5519,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5500,
											"end": 5519,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5525,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5531,
											"end": 5950,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 5531,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5735,
											"end": 5737,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5724,
											"end": 5733,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5720,
											"end": 5738,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5738,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5784,
											"end": 5793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5774,
											"end": 5794,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5770,
											"end": 5771,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5768,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5772,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5748,
											"end": 5795,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5938,
											"end": 5942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 5812,
											"end": 5943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5943,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5812,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5943,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5943,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5531,
											"end": 5950,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5531,
											"end": 5950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5531,
											"end": 5950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5531,
											"end": 5950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 6132,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 5956,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6096,
											"end": 6124,
											"name": "PUSH",
											"source": 6,
											"value": "556E7374616B6520416C726561647920696E2050726F63657373000000000000"
										},
										{
											"begin": 6092,
											"end": 6093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6080,
											"end": 6094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6125,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 6132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 6132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6138,
											"end": 6504,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 6138,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6280,
											"end": 6283,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 6365,
											"end": 6367,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 6360,
											"end": 6363,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6301,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 6301,
											"end": 6368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6301,
											"end": 6368,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 6301,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6294,
											"end": 6368,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6294,
											"end": 6368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6377,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 6466,
											"end": 6469,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6377,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 6377,
											"end": 6470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6377,
											"end": 6470,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 6377,
											"end": 6470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6497,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6490,
											"end": 6493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6486,
											"end": 6498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6138,
											"end": 6504,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6138,
											"end": 6504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6138,
											"end": 6504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6138,
											"end": 6504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6929,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 6510,
											"end": 6929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 6680,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6703,
											"end": 6712,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6699,
											"end": 6717,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 6717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 6717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6763,
											"end": 6772,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6757,
											"end": 6761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6753,
											"end": 6773,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6749,
											"end": 6750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6738,
											"end": 6747,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6727,
											"end": 6774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6791,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 6917,
											"end": 6921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6791,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 6791,
											"end": 6922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6791,
											"end": 6922,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 6791,
											"end": 6922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 6922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 6922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6929,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6929,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6929,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6935,
											"end": 7115,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 6935,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6983,
											"end": 7060,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6980,
											"end": 6981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6973,
											"end": 7061,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7084,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 7077,
											"end": 7078,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7070,
											"end": 7085,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7104,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7101,
											"end": 7102,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7094,
											"end": 7109,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7312,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 7121,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7161,
											"end": 7164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7180,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 7198,
											"end": 7199,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7180,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 7180,
											"end": 7200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7180,
											"end": 7200,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 7180,
											"end": 7200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7175,
											"end": 7200,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7175,
											"end": 7200,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 7232,
											"end": 7233,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 7214,
											"end": 7234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7234,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 7214,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7209,
											"end": 7234,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7209,
											"end": 7234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7257,
											"end": 7258,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7255,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7250,
											"end": 7259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7243,
											"end": 7259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7243,
											"end": 7259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7278,
											"end": 7281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7275,
											"end": 7276,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7272,
											"end": 7282,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7269,
											"end": 7305,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7269,
											"end": 7305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 7269,
											"end": 7305,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7285,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7285,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 7285,
											"end": 7303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7285,
											"end": 7303,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7285,
											"end": 7303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7269,
											"end": 7305,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 7269,
											"end": 7305,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7312,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7312,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7492,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 7318,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7484,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F20556E7374616B65205265717565737420466F756E640000000000000000"
										},
										{
											"begin": 7454,
											"end": 7455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7446,
											"end": 7452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7442,
											"end": 7456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7435,
											"end": 7485,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7492,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7498,
											"end": 7864,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 7498,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7640,
											"end": 7643,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7661,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 7725,
											"end": 7727,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 7720,
											"end": 7723,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7661,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 7661,
											"end": 7728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7661,
											"end": 7728,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 7661,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7654,
											"end": 7728,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7654,
											"end": 7728,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 7826,
											"end": 7829,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 7737,
											"end": 7830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7830,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 7737,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7855,
											"end": 7857,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7850,
											"end": 7853,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7846,
											"end": 7858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7858,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7498,
											"end": 7864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7498,
											"end": 7864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7498,
											"end": 7864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7498,
											"end": 7864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7870,
											"end": 8289,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 7870,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8036,
											"end": 8040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8074,
											"end": 8076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8063,
											"end": 8072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8123,
											"end": 8132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8117,
											"end": 8121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8109,
											"end": 8110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8094,
											"end": 8111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8087,
											"end": 8134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8151,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 8277,
											"end": 8281,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8151,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 8151,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8151,
											"end": 8282,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 8151,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8143,
											"end": 8282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8143,
											"end": 8282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7870,
											"end": 8289,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7870,
											"end": 8289,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7870,
											"end": 8289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7870,
											"end": 8289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8295,
											"end": 8468,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 8295,
											"end": 8468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8435,
											"end": 8460,
											"name": "PUSH",
											"source": 6,
											"value": "556E7374616B6520706572696F64206E6F74206F766572000000000000000000"
										},
										{
											"begin": 8431,
											"end": 8432,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8423,
											"end": 8429,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8419,
											"end": 8433,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8412,
											"end": 8461,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8295,
											"end": 8468,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8295,
											"end": 8468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8474,
											"end": 8840,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 8474,
											"end": 8840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8637,
											"end": 8704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8701,
											"end": 8703,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 8696,
											"end": 8699,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8637,
											"end": 8704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 8637,
											"end": 8704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8637,
											"end": 8704,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8637,
											"end": 8704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8630,
											"end": 8704,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8630,
											"end": 8704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8713,
											"end": 8806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8713,
											"end": 8806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 8713,
											"end": 8806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8713,
											"end": 8806,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 8713,
											"end": 8806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 8833,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8826,
											"end": 8829,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8822,
											"end": 8834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8815,
											"end": 8834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8815,
											"end": 8834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8474,
											"end": 8840,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8474,
											"end": 8840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8474,
											"end": 8840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8474,
											"end": 8840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8846,
											"end": 9265,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 8846,
											"end": 9265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9012,
											"end": 9016,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9050,
											"end": 9052,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9039,
											"end": 9048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9027,
											"end": 9053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9027,
											"end": 9053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9099,
											"end": 9108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9093,
											"end": 9097,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9089,
											"end": 9109,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9085,
											"end": 9086,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9074,
											"end": 9083,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9063,
											"end": 9110,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9127,
											"end": 9258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 9253,
											"end": 9257,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9127,
											"end": 9258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 9127,
											"end": 9258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9127,
											"end": 9258,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 9127,
											"end": 9258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9119,
											"end": 9258,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9119,
											"end": 9258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8846,
											"end": 9265,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8846,
											"end": 9265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8846,
											"end": 9265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8846,
											"end": 9265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9271,
											"end": 9603,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 9271,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9392,
											"end": 9396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9430,
											"end": 9432,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9419,
											"end": 9428,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9415,
											"end": 9433,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9407,
											"end": 9433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9407,
											"end": 9433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9443,
											"end": 9514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 9511,
											"end": 9512,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9500,
											"end": 9509,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9493,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9443,
											"end": 9514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 9443,
											"end": 9514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9443,
											"end": 9514,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 9443,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9581,
											"end": 9590,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9568,
											"end": 9574,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 9524,
											"end": 9596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9596,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 9524,
											"end": 9596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9271,
											"end": 9603,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9271,
											"end": 9603,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9271,
											"end": 9603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9271,
											"end": 9603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9271,
											"end": 9603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9271,
											"end": 9603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9609,
											"end": 9699,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 9609,
											"end": 9699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9643,
											"end": 9650,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9686,
											"end": 9691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9679,
											"end": 9692,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9672,
											"end": 9693,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9661,
											"end": 9693,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9661,
											"end": 9693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9609,
											"end": 9699,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9609,
											"end": 9699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9609,
											"end": 9699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9609,
											"end": 9699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9705,
											"end": 9821,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 9705,
											"end": 9821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9775,
											"end": 9796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 9790,
											"end": 9795,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9775,
											"end": 9796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 9775,
											"end": 9796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9775,
											"end": 9796,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 9775,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 9773,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9755,
											"end": 9815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 9755,
											"end": 9815,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9808,
											"end": 9809,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9801,
											"end": 9813,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9755,
											"end": 9815,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 9755,
											"end": 9815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9705,
											"end": 9821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9705,
											"end": 9821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9827,
											"end": 9964,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9827,
											"end": 9964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9881,
											"end": 9886,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9912,
											"end": 9918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9897,
											"end": 9919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9897,
											"end": 9919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9928,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 9952,
											"end": 9957,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9928,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 9928,
											"end": 9958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9928,
											"end": 9958,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 9928,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9827,
											"end": 9964,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9827,
											"end": 9964,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9827,
											"end": 9964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9827,
											"end": 9964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9827,
											"end": 9964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 10315,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 9970,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10037,
											"end": 10043,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10086,
											"end": 10088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10074,
											"end": 10083,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10065,
											"end": 10072,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10084,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10057,
											"end": 10089,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 10054,
											"end": 10173,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10054,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10054,
											"end": 10173,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10092,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 10092,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 10092,
											"end": 10171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10092,
											"end": 10171,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 10092,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10054,
											"end": 10173,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10054,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10213,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10237,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 10290,
											"end": 10297,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10281,
											"end": 10287,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10270,
											"end": 10279,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10266,
											"end": 10288,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10237,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 10237,
											"end": 10298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10237,
											"end": 10298,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 10237,
											"end": 10298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10227,
											"end": 10298,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10227,
											"end": 10298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10183,
											"end": 10308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 10315,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 10315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 10315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 10315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 10315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10321,
											"end": 10554,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 10321,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10461,
											"end": 10495,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E205472616E73666572204661696C656420647572696E6720556E53"
										},
										{
											"begin": 10457,
											"end": 10458,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10449,
											"end": 10455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10445,
											"end": 10459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10438,
											"end": 10496,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10530,
											"end": 10546,
											"name": "PUSH",
											"source": 6,
											"value": "74616B696E672050726F63657373000000000000000000000000000000000000"
										},
										{
											"begin": 10525,
											"end": 10527,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10517,
											"end": 10523,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10513,
											"end": 10528,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10506,
											"end": 10547,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10321,
											"end": 10554,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10321,
											"end": 10554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10560,
											"end": 10926,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 10560,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10702,
											"end": 10705,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10723,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 10787,
											"end": 10789,
											"name": "PUSH",
											"source": 6,
											"value": "2E"
										},
										{
											"begin": 10782,
											"end": 10785,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10723,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 10723,
											"end": 10790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10723,
											"end": 10790,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 10723,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10716,
											"end": 10790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10716,
											"end": 10790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10799,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 10888,
											"end": 10891,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10799,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 10799,
											"end": 10892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10799,
											"end": 10892,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 10799,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10917,
											"end": 10919,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10912,
											"end": 10915,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10908,
											"end": 10920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10901,
											"end": 10920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10901,
											"end": 10920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10560,
											"end": 10926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10560,
											"end": 10926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10560,
											"end": 10926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10560,
											"end": 10926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10932,
											"end": 11351,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 10932,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11098,
											"end": 11102,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11136,
											"end": 11138,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11125,
											"end": 11134,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11121,
											"end": 11139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11113,
											"end": 11139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11113,
											"end": 11139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11185,
											"end": 11194,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11179,
											"end": 11183,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11175,
											"end": 11195,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11171,
											"end": 11172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11160,
											"end": 11169,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11156,
											"end": 11173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11213,
											"end": 11344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 11339,
											"end": 11343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11213,
											"end": 11344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 11213,
											"end": 11344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11213,
											"end": 11344,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 11213,
											"end": 11344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11205,
											"end": 11344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11205,
											"end": 11344,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10932,
											"end": 11351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10932,
											"end": 11351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10932,
											"end": 11351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10932,
											"end": 11351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11357,
											"end": 11531,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 11357,
											"end": 11531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11497,
											"end": 11523,
											"name": "PUSH",
											"source": 6,
											"value": "43616E6E6F74207374616B65207A65726F20546F6B656E730000000000000000"
										},
										{
											"begin": 11493,
											"end": 11494,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11485,
											"end": 11491,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11481,
											"end": 11495,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11474,
											"end": 11524,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11357,
											"end": 11531,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11357,
											"end": 11531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11537,
											"end": 11903,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 11537,
											"end": 11903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11679,
											"end": 11682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11700,
											"end": 11767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 11764,
											"end": 11766,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 11759,
											"end": 11762,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11700,
											"end": 11767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 11700,
											"end": 11767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11700,
											"end": 11767,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 11700,
											"end": 11767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11693,
											"end": 11767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11693,
											"end": 11767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11776,
											"end": 11869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 11865,
											"end": 11868,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11776,
											"end": 11869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 11776,
											"end": 11869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11776,
											"end": 11869,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 11776,
											"end": 11869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11894,
											"end": 11896,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11889,
											"end": 11892,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11885,
											"end": 11897,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11878,
											"end": 11897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11878,
											"end": 11897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11537,
											"end": 11903,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11537,
											"end": 11903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11537,
											"end": 11903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11537,
											"end": 11903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 12328,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 11909,
											"end": 12328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12075,
											"end": 12079,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12113,
											"end": 12115,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12102,
											"end": 12111,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12098,
											"end": 12116,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12090,
											"end": 12116,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12090,
											"end": 12116,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12162,
											"end": 12171,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12156,
											"end": 12160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12152,
											"end": 12172,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12148,
											"end": 12149,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12137,
											"end": 12146,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12133,
											"end": 12150,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12126,
											"end": 12173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12190,
											"end": 12321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 12316,
											"end": 12320,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12190,
											"end": 12321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 12190,
											"end": 12321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12190,
											"end": 12321,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 12190,
											"end": 12321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12182,
											"end": 12321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12182,
											"end": 12321,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 12328,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 12328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 12328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11909,
											"end": 12328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12334,
											"end": 12477,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 12334,
											"end": 12477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12391,
											"end": 12396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12422,
											"end": 12428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12416,
											"end": 12429,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12407,
											"end": 12429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12407,
											"end": 12429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12438,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 12465,
											"end": 12470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12438,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 12438,
											"end": 12471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12438,
											"end": 12471,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 12438,
											"end": 12471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12334,
											"end": 12477,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12334,
											"end": 12477,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12334,
											"end": 12477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12334,
											"end": 12477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12334,
											"end": 12477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12483,
											"end": 12834,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 12483,
											"end": 12834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12553,
											"end": 12559,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12602,
											"end": 12604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12590,
											"end": 12599,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12581,
											"end": 12588,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12577,
											"end": 12600,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12573,
											"end": 12605,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 12570,
											"end": 12689,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12570,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 12570,
											"end": 12689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12608,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 12608,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 12608,
											"end": 12687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12608,
											"end": 12687,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 12608,
											"end": 12687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12570,
											"end": 12689,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 12570,
											"end": 12689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12728,
											"end": 12729,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12753,
											"end": 12817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 12809,
											"end": 12816,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12800,
											"end": 12806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12789,
											"end": 12798,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12785,
											"end": 12807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12753,
											"end": 12817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 12753,
											"end": 12817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12753,
											"end": 12817,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 12753,
											"end": 12817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12743,
											"end": 12817,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12743,
											"end": 12817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12699,
											"end": 12827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12483,
											"end": 12834,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12483,
											"end": 12834,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12483,
											"end": 12834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12483,
											"end": 12834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12483,
											"end": 12834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12840,
											"end": 13010,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 12840,
											"end": 13010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12980,
											"end": 13002,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742042616C616E6365000000000000000000000000"
										},
										{
											"begin": 12976,
											"end": 12977,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12968,
											"end": 12974,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12964,
											"end": 12978,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12957,
											"end": 13003,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12840,
											"end": 13010,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12840,
											"end": 13010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13016,
											"end": 13382,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 13016,
											"end": 13382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13158,
											"end": 13161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13179,
											"end": 13246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 13243,
											"end": 13245,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 13238,
											"end": 13241,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13179,
											"end": 13246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 13179,
											"end": 13246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13179,
											"end": 13246,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 13179,
											"end": 13246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13172,
											"end": 13246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13172,
											"end": 13246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13255,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 13344,
											"end": 13347,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13255,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 13255,
											"end": 13348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13255,
											"end": 13348,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 13255,
											"end": 13348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13373,
											"end": 13375,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13368,
											"end": 13371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13364,
											"end": 13376,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13357,
											"end": 13376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13357,
											"end": 13376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13016,
											"end": 13382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13016,
											"end": 13382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13016,
											"end": 13382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13016,
											"end": 13382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13388,
											"end": 13807,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 13388,
											"end": 13807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13554,
											"end": 13558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13592,
											"end": 13594,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13581,
											"end": 13590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13577,
											"end": 13595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13569,
											"end": 13595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13569,
											"end": 13595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13641,
											"end": 13650,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13635,
											"end": 13639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13631,
											"end": 13651,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13627,
											"end": 13628,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13616,
											"end": 13625,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13612,
											"end": 13629,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13605,
											"end": 13652,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13669,
											"end": 13800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 13795,
											"end": 13799,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13669,
											"end": 13800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 13669,
											"end": 13800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13669,
											"end": 13800,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 13669,
											"end": 13800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13661,
											"end": 13800,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13661,
											"end": 13800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13388,
											"end": 13807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13388,
											"end": 13807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13388,
											"end": 13807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13388,
											"end": 13807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13813,
											"end": 14255,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 13813,
											"end": 14255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13962,
											"end": 13966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14000,
											"end": 14002,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 13989,
											"end": 13998,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13985,
											"end": 14003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13977,
											"end": 14003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13977,
											"end": 14003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14013,
											"end": 14084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 14081,
											"end": 14082,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14070,
											"end": 14079,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14066,
											"end": 14083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14057,
											"end": 14063,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 14013,
											"end": 14084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 14013,
											"end": 14084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14013,
											"end": 14084,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 14013,
											"end": 14084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14094,
											"end": 14166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 14162,
											"end": 14164,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14151,
											"end": 14160,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14138,
											"end": 14144,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 14094,
											"end": 14166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 14094,
											"end": 14166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14094,
											"end": 14166,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 14094,
											"end": 14166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14176,
											"end": 14248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 14244,
											"end": 14246,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14233,
											"end": 14242,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14229,
											"end": 14247,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14220,
											"end": 14226,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14176,
											"end": 14248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 14176,
											"end": 14248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14176,
											"end": 14248,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 14176,
											"end": 14248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13813,
											"end": 14255,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 13813,
											"end": 14255,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13813,
											"end": 14255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13813,
											"end": 14255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13813,
											"end": 14255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13813,
											"end": 14255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13813,
											"end": 14255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14261,
											"end": 14426,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 14261,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14401,
											"end": 14418,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E73666572204661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 14397,
											"end": 14398,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14389,
											"end": 14395,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14385,
											"end": 14399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14378,
											"end": 14419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14261,
											"end": 14426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14261,
											"end": 14426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14432,
											"end": 14798,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 14432,
											"end": 14798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14574,
											"end": 14577,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14595,
											"end": 14662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 14659,
											"end": 14661,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 14654,
											"end": 14657,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14595,
											"end": 14662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 14595,
											"end": 14662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14595,
											"end": 14662,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 14595,
											"end": 14662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14588,
											"end": 14662,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14588,
											"end": 14662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14671,
											"end": 14764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 14760,
											"end": 14763,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14671,
											"end": 14764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 14671,
											"end": 14764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14671,
											"end": 14764,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 14671,
											"end": 14764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14789,
											"end": 14791,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14784,
											"end": 14787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14780,
											"end": 14792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14773,
											"end": 14792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14773,
											"end": 14792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14432,
											"end": 14798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14432,
											"end": 14798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14432,
											"end": 14798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14432,
											"end": 14798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14804,
											"end": 15223,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 14804,
											"end": 15223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14970,
											"end": 14974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15008,
											"end": 15010,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14997,
											"end": 15006,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14993,
											"end": 15011,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15057,
											"end": 15066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15051,
											"end": 15055,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15047,
											"end": 15067,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15043,
											"end": 15044,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15032,
											"end": 15041,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15028,
											"end": 15045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15021,
											"end": 15068,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15085,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15085,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 15085,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15085,
											"end": 15216,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 15085,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15077,
											"end": 15216,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15077,
											"end": 15216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14804,
											"end": 15223,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14804,
											"end": 15223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14804,
											"end": 15223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14804,
											"end": 15223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15229,
											"end": 15410,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 15229,
											"end": 15410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15369,
											"end": 15402,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 15365,
											"end": 15366,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15357,
											"end": 15363,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15353,
											"end": 15367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15346,
											"end": 15403,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15229,
											"end": 15410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15229,
											"end": 15410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15416,
											"end": 15782,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 15416,
											"end": 15782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15558,
											"end": 15561,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15579,
											"end": 15646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 15643,
											"end": 15645,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 15638,
											"end": 15641,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15579,
											"end": 15646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 15579,
											"end": 15646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15579,
											"end": 15646,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 15579,
											"end": 15646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15572,
											"end": 15646,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15572,
											"end": 15646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 15744,
											"end": 15747,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 15655,
											"end": 15748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15773,
											"end": 15775,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15771,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15764,
											"end": 15776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15757,
											"end": 15776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15757,
											"end": 15776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15416,
											"end": 15782,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15416,
											"end": 15782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15416,
											"end": 15782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15416,
											"end": 15782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15788,
											"end": 16207,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 15788,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15954,
											"end": 15958,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15992,
											"end": 15994,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15981,
											"end": 15990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15977,
											"end": 15995,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15969,
											"end": 15995,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15969,
											"end": 15995,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16041,
											"end": 16050,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16035,
											"end": 16039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16031,
											"end": 16051,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16027,
											"end": 16028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16016,
											"end": 16025,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16012,
											"end": 16029,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16005,
											"end": 16052,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16069,
											"end": 16200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 16195,
											"end": 16199,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16069,
											"end": 16200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 16069,
											"end": 16200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16069,
											"end": 16200,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 16069,
											"end": 16200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16061,
											"end": 16200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16061,
											"end": 16200,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15788,
											"end": 16207,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15788,
											"end": 16207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15788,
											"end": 16207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15788,
											"end": 16207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16213,
											"end": 16407,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 16213,
											"end": 16407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16253,
											"end": 16257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 16291,
											"end": 16292,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 16273,
											"end": 16293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 16273,
											"end": 16293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16268,
											"end": 16293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16268,
											"end": 16293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16307,
											"end": 16327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 16325,
											"end": 16326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16307,
											"end": 16327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 16307,
											"end": 16327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16307,
											"end": 16327,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 16307,
											"end": 16327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16302,
											"end": 16327,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16302,
											"end": 16327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16351,
											"end": 16352,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16348,
											"end": 16349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16344,
											"end": 16353,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16336,
											"end": 16353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16336,
											"end": 16353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16375,
											"end": 16376,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16369,
											"end": 16373,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16366,
											"end": 16377,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 16363,
											"end": 16400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16363,
											"end": 16400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 16363,
											"end": 16400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16380,
											"end": 16398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 16380,
											"end": 16398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 16380,
											"end": 16398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16380,
											"end": 16398,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 16380,
											"end": 16398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16363,
											"end": 16400,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 16363,
											"end": 16400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16213,
											"end": 16407,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16213,
											"end": 16407,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16213,
											"end": 16407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16213,
											"end": 16407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16213,
											"end": 16407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UNSTAKE_PERIOD()": "79b57862",
							"getUnstakedRequest(address)": "3b64916e",
							"getVotingPower(address)": "bb4d4436",
							"governanceToken()": "f96dae0a",
							"initiateUnstaking(uint256)": "18fb4f32",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stake(uint256)": "a694fc3a",
							"stakedBalance(address)": "60217267",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"unstakingRequest(address)": "a0873111",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"UnstakeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UNSTAKE_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getUnstakedRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"initiateUnstaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unstakingRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor sets the address of the Governance Token\",\"params\":{\"_initialOwner\":\"The address that will own the contract\",\"_tokenAddress\":\"The address to deploy GovernanceToken contract\"}},\"getUnstakedRequest(address)\":{\"params\":{\"_account\":\"The address to query.\"},\"returns\":{\"amount\":\"The amount pending withdrawal.\",\"unlockTime\":\"The timestamp when withdrawal is possible.\"}},\"getVotingPower(address)\":{\"params\":{\"_account\":\"The address to query.\"},\"returns\":{\"_0\":\"The amount of tokens staked by the account.\"}},\"initiateUnstaking(uint256)\":{\"details\":\"Tokens remain locked for UNSTAKE_PERIOD. Only one unstake request active at a time per user.\",\"params\":{\"_amount\":\"The amount of tokens to start unstaking.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"stake(uint256)\":{\"details\":\"User must first approve this contract to spend their tokens.\",\"params\":{\"_amount\":\"The amount of tokens to stake.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw()\":{\"details\":\"Can only be called after initiateUnstake and waiting UNSTAKE_PERIOD.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getUnstakedRequest(address)\":{\"notice\":\"Gets details of a pending unstake request for an account.\"},\"getVotingPower(address)\":{\"notice\":\"Gets the staked balance of an account, which represents voting power.\"},\"initiateUnstaking(uint256)\":{\"notice\":\"Initiates the unstaking process for a specified amount.\"},\"stake(uint256)\":{\"notice\":\"Stakes a specified amount of GovernanceToken.\"},\"withdraw()\":{\"notice\":\"Withdraws tokens after the unstaking period has passed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingContract.sol\":\"StakingContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/StakingContract.sol\":{\"keccak256\":\"0x82caa884e48780987b8e41d7e67abf72d791b8311c069d549f437785d5e6e29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa9837bc6432ed2311608678fe195696ad2b0d69cbda94b7fa8451113b0ac91f\",\"dweb:/ipfs/QmUd2sHAgc9SV4JA8E1LoJerkhMw5sobyFvZN4avQYmPcC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/StakingContract.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 158,
								"contract": "contracts/StakingContract.sol:StakingContract",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 652,
								"contract": "contracts/StakingContract.sol:StakingContract",
								"label": "stakedBalance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 654,
								"contract": "contracts/StakingContract.sol:StakingContract",
								"label": "totalStaked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 664,
								"contract": "contracts/StakingContract.sol:StakingContract",
								"label": "unstakingRequest",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(UnstakeInfo)659_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UnstakeInfo)659_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingContract.UnstakeInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UnstakeInfo)659_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(UnstakeInfo)659_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.UnstakeInfo",
								"members": [
									{
										"astId": 656,
										"contract": "contracts/StakingContract.sol:StakingContract",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 658,
										"contract": "contracts/StakingContract.sol:StakingContract",
										"label": "unlockTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getUnstakedRequest(address)": {
								"notice": "Gets details of a pending unstake request for an account."
							},
							"getVotingPower(address)": {
								"notice": "Gets the staked balance of an account, which represents voting power."
							},
							"initiateUnstaking(uint256)": {
								"notice": "Initiates the unstaking process for a specified amount."
							},
							"stake(uint256)": {
								"notice": "Stakes a specified amount of GovernanceToken."
							},
							"withdraw()": {
								"notice": "Withdraws tokens after the unstaking period has passed."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 321,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 320,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								320
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 224,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 233,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 290,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 290,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 290,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 290,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 290,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 290,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 291,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								224,
								233
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 298,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 297,
												"id": 300,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 320,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 307,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 306,
												"id": 309,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 320,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 320,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							632
						]
					},
					"id": 633,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 323,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 632,
							"linearizedBaseContracts": [
								632
							],
							"name": "SafeMath",
							"nameLocation": "490:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "717:140:4",
										"statements": [
											{
												"id": 353,
												"nodeType": "UncheckedBlock",
												"src": "727:124:4",
												"statements": [
													{
														"assignments": [
															336
														],
														"declarations": [
															{
																"constant": false,
																"id": 336,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 353,
																"src": "751:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 335,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 340,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 337,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "763:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 338,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "767:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 341,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "786:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 342,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "790:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 348,
														"nodeType": "IfStatement",
														"src": "782:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 346,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 334,
															"id": 347,
															"nodeType": "Return",
															"src": "793:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 350,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "838:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 351,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 334,
														"id": 352,
														"nodeType": "Return",
														"src": "824:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:4"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "702:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "708:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:4"
									},
									"scope": 632,
									"src": "641:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "1078:113:4",
										"statements": [
											{
												"id": 381,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 367,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "1116:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 368,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "1120:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 374,
														"nodeType": "IfStatement",
														"src": "1112:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 372,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 366,
															"id": 373,
															"nodeType": "Return",
															"src": "1123:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 358,
																		"src": "1168:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 377,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 360,
																		"src": "1172:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 379,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 366,
														"id": 380,
														"nodeType": "Return",
														"src": "1154:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1018:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1029:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:4"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1063:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:4"
									},
									"scope": 632,
									"src": "1002:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1415:417:4",
										"statements": [
											{
												"id": 423,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 395,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "1683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 402,
														"nodeType": "IfStatement",
														"src": "1679:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 400,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 394,
															"id": 401,
															"nodeType": "Return",
															"src": "1691:16:4"
														}
													},
													{
														"assignments": [
															404
														],
														"declarations": [
															{
																"constant": false,
																"id": 404,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 423,
																"src": "1721:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 403,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 408,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 405,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "1733:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 406,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "1737:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 409,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1756:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 410,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "1760:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 412,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "1765:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 418,
														"nodeType": "IfStatement",
														"src": "1752:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 416,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 394,
															"id": 417,
															"nodeType": "Return",
															"src": "1768:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 420,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1813:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 421,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 394,
														"id": 422,
														"nodeType": "Return",
														"src": "1799:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1355:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1366:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:4"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1400:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1406:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:4"
									},
									"scope": 632,
									"src": "1339:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "2057:114:4",
										"statements": [
											{
												"id": 451,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "2095:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 444,
														"nodeType": "IfStatement",
														"src": "2091:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 442,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 436,
															"id": 443,
															"nodeType": "Return",
															"src": "2103:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 446,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "2148:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 447,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "2152:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 449,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 436,
														"id": 450,
														"nodeType": "Return",
														"src": "2134:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1997:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2008:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:4"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2042:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2048:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:4"
									},
									"scope": 632,
									"src": "1981:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "2406:114:4",
										"statements": [
											{
												"id": 479,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 465,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "2444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 472,
														"nodeType": "IfStatement",
														"src": "2440:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 470,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 464,
															"id": 471,
															"nodeType": "Return",
															"src": "2452:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 474,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "2497:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 475,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "2501:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 477,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 464,
														"id": 478,
														"nodeType": "Return",
														"src": "2483:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2346:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2357:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:4"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2391:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 460,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2397:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:4"
									},
									"scope": 632,
									"src": "2330:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2822:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 491,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "2839:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 492,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "2843:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 490,
												"id": 494,
												"nodeType": "Return",
												"src": "2832:12:4"
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2768:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2779:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:4"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2813:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:4"
									},
									"scope": 632,
									"src": "2755:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "3189:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 506,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "3206:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 507,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "3210:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 505,
												"id": 509,
												"nodeType": "Return",
												"src": "3199:12:4"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3135:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:4"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3180:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:4"
									},
									"scope": 632,
									"src": "3122:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "3532:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 521,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "3549:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 522,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "3553:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 520,
												"id": 524,
												"nodeType": "Return",
												"src": "3542:12:4"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3478:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:4"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3523:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:4"
									},
									"scope": 632,
									"src": "3465:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "3917:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3934:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 537,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "3938:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 535,
												"id": 539,
												"nodeType": "Return",
												"src": "3927:12:4"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3863:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3874:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:4"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3908:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:4"
									},
									"scope": 632,
									"src": "3850:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "4466:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 551,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "4483:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 552,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "4487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 550,
												"id": 554,
												"nodeType": "Return",
												"src": "4476:12:4"
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "4412:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "4423:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:4"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "4457:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:4"
									},
									"scope": 632,
									"src": "4399:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "5054:106:4",
										"statements": [
											{
												"id": 579,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 569,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "5096:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 570,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "5101:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 572,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "5104:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 568,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 574,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 575,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 559,
																"src": "5138:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 576,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "5142:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 567,
														"id": 578,
														"nodeType": "Return",
														"src": "5131:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4972:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4983:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4994:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 562,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:4"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "5045:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:4"
									},
									"scope": 632,
									"src": "4959:201:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5739:105:4",
										"statements": [
											{
												"id": 604,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 594,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "5781:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 597,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "5788:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 593,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 599,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 600,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "5822:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 601,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "5826:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 592,
														"id": 603,
														"nodeType": "Return",
														"src": "5815:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5679:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 587,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:4"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5730:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:4"
									},
									"scope": 632,
									"src": "5644:200:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "6585:105:4",
										"statements": [
											{
												"id": 629,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 619,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 611,
																		"src": "6627:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 622,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "6634:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 618,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 624,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 625,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "6668:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 626,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "6672:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 617,
														"id": 628,
														"nodeType": "Return",
														"src": "6661:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "6503:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "6514:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "6525:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 612,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:4"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "6576:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:4"
									},
									"scope": 632,
									"src": "6490:200:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 633,
							"src": "482:6210:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:4"
				},
				"id": 4
			},
			"contracts/StakingContract.sol": {
				"ast": {
					"absolutePath": "contracts/StakingContract.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"IERC20": [
							290
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						],
						"SafeMath": [
							632
						],
						"StakingContract": [
							974
						]
					},
					"id": 975,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 634,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 975,
							"sourceUnit": 291,
							"src": "58:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 636,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 975,
							"sourceUnit": 148,
							"src": "115:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 637,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 975,
							"sourceUnit": 213,
							"src": "168:62:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 638,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 975,
							"sourceUnit": 633,
							"src": "231:57:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 639,
										"name": "Ownable",
										"nameLocations": [
											"319:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "319:7:5"
									},
									"id": 640,
									"nodeType": "InheritanceSpecifier",
									"src": "319:7:5"
								},
								{
									"baseName": {
										"id": 641,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"328:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "328:15:5"
									},
									"id": 642,
									"nodeType": "InheritanceSpecifier",
									"src": "328:15:5"
								}
							],
							"canonicalName": "StakingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 974,
							"linearizedBaseContracts": [
								974,
								212,
								147,
								320
							],
							"name": "StakingContract",
							"nameLocation": "300:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 645,
									"libraryName": {
										"id": 643,
										"name": "SafeMath",
										"nameLocations": [
											"356:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 632,
										"src": "356:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "350:27:5",
									"typeName": {
										"id": 644,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "369:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "f96dae0a",
									"id": 648,
									"mutability": "immutable",
									"name": "governanceToken",
									"nameLocation": "407:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 974,
									"src": "383:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$290",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 647,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 646,
											"name": "IERC20",
											"nameLocations": [
												"383:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 290,
											"src": "383:6:5"
										},
										"referencedDeclaration": 290,
										"src": "383:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$290",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "60217267",
									"id": 652,
									"mutability": "mutable",
									"name": "stakedBalance",
									"nameLocation": "464:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 974,
									"src": "429:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 651,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 649,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "437:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "429:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 650,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "448:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 654,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "495:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 974,
									"src": "483:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 653,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "483:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingContract.UnstakeInfo",
									"id": 659,
									"members": [
										{
											"constant": false,
											"id": 656,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "580:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 659,
											"src": "572:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 655,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "572:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 658,
											"mutability": "mutable",
											"name": "unlockTime",
											"nameLocation": "604:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 659,
											"src": "596:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 657,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "596:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UnstakeInfo",
									"nameLocation": "551:11:5",
									"nodeType": "StructDefinition",
									"scope": 974,
									"src": "544:77:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a0873111",
									"id": 664,
									"mutability": "mutable",
									"name": "unstakingRequest",
									"nameLocation": "698:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 974,
									"src": "659:55:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnstakeInfo_$659_storage_$",
										"typeString": "mapping(address => struct StakingContract.UnstakeInfo)"
									},
									"typeName": {
										"id": 663,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 660,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "667:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "659:31:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnstakeInfo_$659_storage_$",
											"typeString": "mapping(address => struct StakingContract.UnstakeInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 662,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 661,
												"name": "UnstakeInfo",
												"nameLocations": [
													"678:11:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 659,
												"src": "678:11:5"
											},
											"referencedDeclaration": 659,
											"src": "678:11:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
												"typeString": "struct StakingContract.UnstakeInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "79b57862",
									"id": 667,
									"mutability": "constant",
									"name": "UNSTAKE_PERIOD",
									"nameLocation": "745:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 974,
									"src": "721:47:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 665,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "721:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 666,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "762:6:5",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 673,
									"name": "Staked",
									"nameLocation": "795:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "818:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "802:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "832:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "824:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:38:5"
									},
									"src": "789:51:5"
								},
								{
									"anonymous": false,
									"eventSelector": "9cee5eacd317086e5050733a5dad16ef5aaec185de792371a9625bfee2a3213b",
									"id": 681,
									"name": "UnstakeInitiated",
									"nameLocation": "851:16:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "884:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "868:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "898:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "890:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"indexed": false,
												"mutability": "mutable",
												"name": "unlockTime",
												"nameLocation": "914:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "906:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:58:5"
									},
									"src": "845:81:5"
								},
								{
									"anonymous": false,
									"eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
									"id": 687,
									"name": "Withdraw",
									"nameLocation": "937:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "962:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "946:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "976:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "968:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:38:5"
									},
									"src": "931:53:5"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "1294:138:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 699,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "1312:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1337:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1329:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 700,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1329:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1329:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1312:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520546f6b656e20616464726573732063616e6e6f74206265207a65726f",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1341:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13",
																"typeString": "literal_string \"The Token address cannot be zero\""
															},
															"value": "The Token address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13",
																"typeString": "literal_string \"The Token address cannot be zero\""
															}
														],
														"id": 698,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1304:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1304:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "1304:72:5"
											},
											{
												"expression": {
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 708,
														"name": "governanceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "1386:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 710,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "1411:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 709,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "1404:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1404:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"src": "1386:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "1386:39:5"
											}
										]
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "990:218:5",
										"text": " @dev Constructor sets the address of the Governance Token\n @param _tokenAddress The address to deploy GovernanceToken contract\n @param _initialOwner The address that will own the contract"
									},
									"id": 715,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 695,
													"name": "_initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 692,
													"src": "1279:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 696,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 694,
												"name": "Ownable",
												"nameLocations": [
													"1271:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1271:7:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1271:22:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "1233:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1225:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "_initialOwner",
												"nameLocation": "1256:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1248:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1224:46:5"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1294:0:5"
									},
									"scope": 974,
									"src": "1213:219:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "1711:556:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 724,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "1729:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1739:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1729:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b65207a65726f20546f6b656e73",
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1742:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87",
																"typeString": "literal_string \"Cannot stake zero Tokens\""
															},
															"value": "Cannot stake zero Tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87",
																"typeString": "literal_string \"Cannot stake zero Tokens\""
															}
														],
														"id": 723,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1721:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "1721:48:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 733,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1813:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1817:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1813:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 731,
																		"name": "governanceToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 648,
																		"src": "1787:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$290",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1803:9:5",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 247,
																	"src": "1787:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1787:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 736,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "1828:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1787:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742042616c616e6365",
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1837:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															},
															"value": "Insufficient Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															}
														],
														"id": 730,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1779:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "1779:81:5"
											},
											{
												"assignments": [
													742
												],
												"declarations": [
													{
														"constant": false,
														"id": 742,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1937:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 785,
														"src": "1932:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 741,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1932:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 745,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1976:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1980:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1976:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 749,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1996:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$974",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$974",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1988:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 747,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1988:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1988:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 751,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "2003:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 743,
															"name": "governanceToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "1947:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1963:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 289,
														"src": "1947:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1947:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1932:79:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "2029:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572204661696c6564",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2038:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																"typeString": "literal_string \"Transfer Failed\""
															},
															"value": "Transfer Failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																"typeString": "literal_string \"Transfer Failed\""
															}
														],
														"id": 754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2021:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "2021:35:5"
											},
											{
												"expression": {
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 759,
															"name": "stakedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "2103:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 762,
														"indexExpression": {
															"expression": {
																"id": 760,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2117:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2121:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2117:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2103:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 768,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "2161:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 763,
																	"name": "stakedBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "2131:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 766,
																"indexExpression": {
																	"expression": {
																		"id": 764,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2145:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2149:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2145:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2131:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2157:3:5",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 496,
															"src": "2131:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2131:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2103:66:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "2103:66:5"
											},
											{
												"expression": {
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 772,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "2179:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 775,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "2209:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 773,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "2193:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2205:3:5",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 496,
															"src": "2193:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2193:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2179:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "2179:38:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 780,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2240:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2244:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2240:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "2252:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "2233:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2233:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "EmitStatement",
												"src": "2228:32:5"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "1454:198:5",
										"text": " @notice Stakes a specified amount of GovernanceToken.\n @dev User must first approve this contract to spend their tokens.\n @param _amount The amount of tokens to stake."
									},
									"functionSelector": "a694fc3a",
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 721,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 720,
												"name": "nonReentrant",
												"nameLocations": [
													"1698:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "1698:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1698:12:5"
										}
									],
									"name": "stake",
									"nameLocation": "1666:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1680:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "1672:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:17:5"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1711:0:5"
									},
									"scope": 974,
									"src": "1657:610:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "2612:691:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 795,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "2630:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2640:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2630:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420556e7374616b65207a65726f20746f6b656e73",
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2643:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc",
																"typeString": "literal_string \"Cannot Unstake zero tokens\""
															},
															"value": "Cannot Unstake zero tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc",
																"typeString": "literal_string \"Cannot Unstake zero tokens\""
															}
														],
														"id": 794,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2622:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2622:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "2622:50:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 802,
																	"name": "stakedBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "2690:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 805,
																"indexExpression": {
																	"expression": {
																		"id": 803,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2704:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2708:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2704:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2690:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 806,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "2719:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2690:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2728:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															},
															"value": "Insufficient staked balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															}
														],
														"id": 801,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2682:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:76:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "2682:76:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 812,
																		"name": "unstakingRequest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "2776:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnstakeInfo_$659_storage_$",
																			"typeString": "mapping(address => struct StakingContract.UnstakeInfo storage ref)"
																		}
																	},
																	"id": 815,
																	"indexExpression": {
																		"expression": {
																			"id": 813,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2793:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2797:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2793:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2776:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage",
																		"typeString": "struct StakingContract.UnstakeInfo storage ref"
																	}
																},
																"id": 816,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2805:6:5",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 656,
																"src": "2776:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2815:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2776:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e7374616b6520416c726561647920696e2050726f63657373",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2818:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660",
																"typeString": "literal_string \"Unstake Already in Process\""
															},
															"value": "Unstake Already in Process"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660",
																"typeString": "literal_string \"Unstake Already in Process\""
															}
														],
														"id": 811,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2768:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2768:79:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "2768:79:5"
											},
											{
												"expression": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 822,
															"name": "stakedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "2894:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 825,
														"indexExpression": {
															"expression": {
																"id": 823,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2908:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2912:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2908:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2894:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 831,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "2952:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 826,
																	"name": "stakedBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "2922:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 829,
																"indexExpression": {
																	"expression": {
																		"id": 827,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2936:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2940:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2936:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2922:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2948:3:5",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 511,
															"src": "2922:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2922:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2894:66:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "2894:66:5"
											},
											{
												"expression": {
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 835,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "2970:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 838,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "3000:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 836,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "2984:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2996:3:5",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 511,
															"src": "2984:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2984:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2970:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "2970:38:5"
											},
											{
												"assignments": [
													843
												],
												"declarations": [
													{
														"constant": false,
														"id": 843,
														"mutability": "mutable",
														"name": "unlockTime",
														"nameLocation": "3057:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 866,
														"src": "3049:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 842,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3049:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 848,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 844,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3070:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3076:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3070:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 846,
														"name": "UNSTAKE_PERIOD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "3088:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3070:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3049:53:5"
											},
											{
												"expression": {
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 849,
															"name": "unstakingRequest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "3112:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnstakeInfo_$659_storage_$",
																"typeString": "mapping(address => struct StakingContract.UnstakeInfo storage ref)"
															}
														},
														"id": 852,
														"indexExpression": {
															"expression": {
																"id": 850,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3129:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3133:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3129:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3112:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage",
															"typeString": "struct StakingContract.UnstakeInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 854,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "3177:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 855,
																"name": "unlockTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "3210:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 853,
															"name": "UnstakeInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "3143:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_UnstakeInfo_$659_storage_ptr_$",
																"typeString": "type(struct StakingContract.UnstakeInfo storage pointer)"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"3169:6:5",
															"3198:10:5"
														],
														"names": [
															"amount",
															"unlockTime"
														],
														"nodeType": "FunctionCall",
														"src": "3143:88:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UnstakeInfo_$659_memory_ptr",
															"typeString": "struct StakingContract.UnstakeInfo memory"
														}
													},
													"src": "3112:119:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage",
														"typeString": "struct StakingContract.UnstakeInfo storage ref"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "3112:119:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 860,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3264:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3268:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3264:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 862,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "3276:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 863,
															"name": "unlockTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "3285:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 859,
														"name": "UnstakeInitiated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "3247:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3247:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "EmitStatement",
												"src": "3242:54:5"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "2291:250:5",
										"text": " @notice Initiates the unstaking process for a specified amount.\n @dev Tokens remain locked for UNSTAKE_PERIOD. Only one unstake request active at a time per user.\n @param _amount The amount of tokens to start unstaking."
									},
									"functionSelector": "18fb4f32",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 792,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 791,
												"name": "nonReentrant",
												"nameLocations": [
													"2599:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "2599:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2599:12:5"
										}
									],
									"name": "initiateUnstaking",
									"nameLocation": "2555:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2581:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "2573:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2573:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2572:17:5"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2612:0:5"
									},
									"scope": 974,
									"src": "2546:757:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "3519:620:5",
										"statements": [
											{
												"assignments": [
													875
												],
												"declarations": [
													{
														"constant": false,
														"id": 875,
														"mutability": "mutable",
														"name": "request",
														"nameLocation": "3549:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 935,
														"src": "3529:27:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
															"typeString": "struct StakingContract.UnstakeInfo"
														},
														"typeName": {
															"id": 874,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 873,
																"name": "UnstakeInfo",
																"nameLocations": [
																	"3529:11:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 659,
																"src": "3529:11:5"
															},
															"referencedDeclaration": 659,
															"src": "3529:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
																"typeString": "struct StakingContract.UnstakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 880,
												"initialValue": {
													"baseExpression": {
														"id": 876,
														"name": "unstakingRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "3559:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnstakeInfo_$659_storage_$",
															"typeString": "mapping(address => struct StakingContract.UnstakeInfo storage ref)"
														}
													},
													"id": 879,
													"indexExpression": {
														"expression": {
															"id": 877,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3576:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3580:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3576:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3559:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage",
														"typeString": "struct StakingContract.UnstakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3529:58:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 882,
																	"name": "request",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "3605:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
																		"typeString": "struct StakingContract.UnstakeInfo storage pointer"
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3613:6:5",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 656,
																"src": "3605:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3622:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3605:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20556e7374616b65205265717565737420466f756e64",
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3625:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258",
																"typeString": "literal_string \"No Unstake Request Found\""
															},
															"value": "No Unstake Request Found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258",
																"typeString": "literal_string \"No Unstake Request Found\""
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3597:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3597:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "3597:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 890,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3670:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3676:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3670:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 892,
																	"name": "request",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "3689:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
																		"typeString": "struct StakingContract.UnstakeInfo storage pointer"
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3697:10:5",
																"memberName": "unlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 658,
																"src": "3689:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3670:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e7374616b6520706572696f64206e6f74206f766572",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3709:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed",
																"typeString": "literal_string \"Unstake period not over\""
															},
															"value": "Unstake period not over"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed",
																"typeString": "literal_string \"Unstake period not over\""
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3662:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3662:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "3662:73:5"
											},
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "amountToWithdraw",
														"nameLocation": "3754:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 935,
														"src": "3746:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 898,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3746:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"expression": {
														"id": 900,
														"name": "request",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "3773:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
															"typeString": "struct StakingContract.UnstakeInfo storage pointer"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3781:6:5",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 656,
													"src": "3773:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3746:41:5"
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 903,
															"name": "request",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "3851:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
																"typeString": "struct StakingContract.UnstakeInfo storage pointer"
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3859:6:5",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 656,
														"src": "3851:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3868:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3851:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "3851:18:5"
											},
											{
												"expression": {
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 909,
															"name": "request",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "3879:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
																"typeString": "struct StakingContract.UnstakeInfo storage pointer"
															}
														},
														"id": 911,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3887:10:5",
														"memberName": "unlockTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 658,
														"src": "3879:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3900:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3879:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "3879:22:5"
											},
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3937:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 935,
														"src": "3932:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 915,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3932:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 923,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 919,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3972:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3976:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3972:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 921,
															"name": "amountToWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "3984:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 917,
															"name": "governanceToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "3947:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3963:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "3947:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3947:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3932:69:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 925,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "4019:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e205472616e73666572204661696c656420647572696e6720556e5374616b696e672050726f63657373",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4028:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3",
																"typeString": "literal_string \"Token Transfer Failed during UnStaking Process\""
															},
															"value": "Token Transfer Failed during UnStaking Process"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3",
																"typeString": "literal_string \"Token Transfer Failed during UnStaking Process\""
															}
														],
														"id": 924,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4011:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4011:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "4011:66:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 930,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4102:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4106:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4102:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 932,
															"name": "amountToWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "4114:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 929,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "4093:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4093:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "EmitStatement",
												"src": "4088:43:5"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "3309:163:5",
										"text": " @notice Withdraws tokens after the unstaking period has passed.\n @dev Can only be called after initiateUnstake and waiting UNSTAKE_PERIOD."
									},
									"functionSelector": "3ccfd60b",
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 871,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 870,
												"name": "nonReentrant",
												"nameLocations": [
													"3506:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "3506:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3506:12:5"
										}
									],
									"name": "withdraw",
									"nameLocation": "3486:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3494:2:5"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3519:0:5"
									},
									"scope": 974,
									"src": "3477:662:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "4445:47:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 944,
														"name": "stakedBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "4462:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 946,
													"indexExpression": {
														"id": 945,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "4476:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4462:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 943,
												"id": 947,
												"nodeType": "Return",
												"src": "4455:30:5"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "4169:200:5",
										"text": " @notice Gets the staked balance of an account, which represents voting power.\n @param _account The address to query.\n @return The amount of tokens staked by the account."
									},
									"functionSelector": "bb4d4436",
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVotingPower",
									"nameLocation": "4383:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "4406:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "4398:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:18:5"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "4436:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4435:9:5"
									},
									"scope": 974,
									"src": "4374:118:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "4853:126:5",
										"statements": [
											{
												"assignments": [
													961
												],
												"declarations": [
													{
														"constant": false,
														"id": 961,
														"mutability": "mutable",
														"name": "request",
														"nameLocation": "4883:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 972,
														"src": "4863:27:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
															"typeString": "struct StakingContract.UnstakeInfo"
														},
														"typeName": {
															"id": 960,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 959,
																"name": "UnstakeInfo",
																"nameLocations": [
																	"4863:11:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 659,
																"src": "4863:11:5"
															},
															"referencedDeclaration": 659,
															"src": "4863:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
																"typeString": "struct StakingContract.UnstakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 965,
												"initialValue": {
													"baseExpression": {
														"id": 962,
														"name": "unstakingRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "4893:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnstakeInfo_$659_storage_$",
															"typeString": "mapping(address => struct StakingContract.UnstakeInfo storage ref)"
														}
													},
													"id": 964,
													"indexExpression": {
														"id": 963,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "4910:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4893:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage",
														"typeString": "struct StakingContract.UnstakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4863:56:5"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 966,
																"name": "request",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "4937:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
																	"typeString": "struct StakingContract.UnstakeInfo storage pointer"
																}
															},
															"id": 967,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4945:6:5",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 656,
															"src": "4937:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 968,
																"name": "request",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "4953:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
																	"typeString": "struct StakingContract.UnstakeInfo storage pointer"
																}
															},
															"id": 969,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4961:10:5",
															"memberName": "unlockTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 658,
															"src": "4953:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 970,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4936:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 958,
												"id": 971,
												"nodeType": "Return",
												"src": "4929:43:5"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "4498:246:5",
										"text": " @notice Gets details of a pending unstake request for an account.\n @param _account The address to query.\n @return amount The amount pending withdrawal.\n @return unlockTime The timestamp when withdrawal is possible."
									},
									"functionSelector": "3b64916e",
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUnstakedRequest",
									"nameLocation": "4758:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "4785:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "4777:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4777:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4776:18:5"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4825:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "4817:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4817:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "unlockTime",
												"nameLocation": "4841:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "4833:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4816:36:5"
									},
									"scope": 974,
									"src": "4749:230:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 975,
							"src": "291:4692:5",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								673,
								681,
								687
							]
						}
					],
					"src": "32:4951:5"
				},
				"id": 5
			}
		}
	}
}