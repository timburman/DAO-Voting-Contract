{
	"id": "0b762faa70881ac0beebd3567a520b9b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/StakingContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\n\ncontract StakingContract is Ownable, ReentrancyGuard {\n    using SafeMath for uint256;\n\n    IERC20 public immutable governanceToken;\n\n    mapping(address => uint256) public stakedBalance;\n    uint public totalStaked;\n\n    //Manage Unstaking Request\n    struct UnstakeInfo{\n        uint256 amount;\n        uint256 unlockTime;\n    }\n    // Tracks Unstaking Requests\n    mapping(address => UnstakeInfo) public unstakingRequest;\n\n    uint256 public constant UNSTAKE_PERIOD = 7 days;\n\n    // Events\n    event Staked(address indexed user, uint256 amount);\n    event UnstakeInitiated(address indexed user, uint256 amount, uint256 unlockTime);\n    event Withdraw(address indexed user, uint256 amount);\n\n    /** \n     * @dev Constructor sets the address of the Governance Token\n     * @param _tokenAddress The address to deploy GovernanceToken contract\n     * @param _initialOwner The address that will own the contract\n    */\n    constructor(address _tokenAddress, address _initialOwner) Ownable(_initialOwner) {\n        require(_tokenAddress != address(0), \"The Token address cannot be zero\");\n        governanceToken = IERC20(_tokenAddress);\n    }\n\n    // Staking\n\n    /**\n     * @notice Stakes a specified amount of GovernanceToken.\n     * @dev User must first approve this contract to spend their tokens.\n     * @param _amount The amount of tokens to stake.\n     */\n    function stake(uint256 _amount) external nonReentrant {\n        require(_amount > 0, \"Cannot stake zero Tokens\");\n        require(governanceToken.balanceOf(msg.sender) >= _amount, \"Insufficient Balance\");\n        \n        // Transfer Tokens from user to the contract\n        bool success = governanceToken.transferFrom(msg.sender, address(this), _amount);\n        require(success, \"Transfer Failed\");\n\n        // Updating Staking Records\n        stakedBalance[msg.sender] = stakedBalance[msg.sender].add(_amount);\n        totalStaked = totalStaked.add(_amount);\n\n        emit Staked(msg.sender, _amount);\n    }\n\n    // UnStaking\n\n    /**\n     * @notice Initiates the unstaking process for a specified amount.\n     * @dev Tokens remain locked for UNSTAKE_PERIOD. Only one unstake request active at a time per user.\n     * @param _amount The amount of tokens to start unstaking.\n     */\n    function initiateUnstaking(uint256 _amount) external nonReentrant {\n        require(_amount > 0, \"Cannot Unstake zero tokens\");\n        require(stakedBalance[msg.sender] >= _amount, \"Insufficient staked balance\");\n        require(unstakingRequest[msg.sender].amount == 0, \"Unstake Already in Process\");\n\n        // Updating Staking Records\n        stakedBalance[msg.sender] = stakedBalance[msg.sender].sub(_amount);\n        totalStaked = totalStaked.sub(_amount);\n\n        // Recoring Unstaking\n        uint256 unlockTime = block.timestamp + UNSTAKE_PERIOD;\n        unstakingRequest[msg.sender] = UnstakeInfo({\n            amount: _amount,\n            unlockTime: unlockTime\n        });\n\n        emit UnstakeInitiated(msg.sender, _amount, unlockTime);\n    }\n\n    /**\n     * @notice Withdraws tokens after the unstaking period has passed.\n     * @dev Can only be called after initiateUnstake and waiting UNSTAKE_PERIOD.\n     */\n    function withdraw() external nonReentrant {\n        UnstakeInfo storage request = unstakingRequest[msg.sender];\n        require(request.amount > 0, \"No Unstake Request Found\");\n        require(block.timestamp >= request.unlockTime, \"Unstake period not over\");\n\n        uint256 amountToWithdraw = request.amount;\n\n        // Reset the unstake request before transfer\n        request.amount = 0;\n        request.unlockTime = 0;\n\n        // Transfer\n        bool success = governanceToken.transfer(msg.sender, amountToWithdraw);\n        require(success, \"Token Transfer Failed during UnStaking Process\");\n\n        emit Withdraw(msg.sender, amountToWithdraw);\n\n    }\n\n\n    // View Functions\n\n    /**\n     * @notice Gets the staked balance of an account, which represents voting power.\n     * @param _account The address to query.\n     * @return The amount of tokens staked by the account.\n     */\n    function getVotingPower(address _account) external view returns(uint256) {\n        return stakedBalance[_account];\n    }\n\n    /**\n    * @notice Gets details of a pending unstake request for an account.\n    * @param _account The address to query.\n    * @return amount The amount pending withdrawal.\n    * @return unlockTime The timestamp when withdrawal is possible.\n    */\n    function getUnstakedRequest(address _account) external view returns(uint256 amount, uint256 unlockTime) {\n        UnstakeInfo storage request = unstakingRequest[_account];\n        return (request.amount, request.unlockTime);\n    } \n\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122027182289f99e7bb41ba120ce34f18e662af818753b23c8bbf4a74ede36f3a4db64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122027182289f99e7bb41ba120ce34f18e662af818753b23c8bbf4a74ede36f3a4db64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 XOR 0x22 DUP10 0xF9 SWAP15 PUSH28 0xB41BA120CE34F18E662AF818753B23C8BBF4A74EDE36F3A4DB64736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "482:6210:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122027182289f99e7bb41ba120ce34f18e662af818753b23c8bbf4a74ede36f3a4db64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 XOR 0x22 DUP10 0xF9 SWAP15 PUSH28 0xB41BA120CE34F18E662AF818753B23C8BBF4A74EDE36F3A4DB64736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "482:6210:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122027182289f99e7bb41ba120ce34f18e662af818753b23c8bbf4a74ede36f3a4db64736f6c634300081a0033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/StakingContract.sol": {
				"StakingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"name": "UnstakeInitiated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UNSTAKE_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getUnstakedRequest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getVotingPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "initiateUnstaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "unstakingRequest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Constructor sets the address of the Governance Token",
								"params": {
									"_initialOwner": "The address that will own the contract",
									"_tokenAddress": "The address to deploy GovernanceToken contract"
								}
							},
							"getUnstakedRequest(address)": {
								"params": {
									"_account": "The address to query."
								},
								"returns": {
									"amount": "The amount pending withdrawal.",
									"unlockTime": "The timestamp when withdrawal is possible."
								}
							},
							"getVotingPower(address)": {
								"params": {
									"_account": "The address to query."
								},
								"returns": {
									"_0": "The amount of tokens staked by the account."
								}
							},
							"initiateUnstaking(uint256)": {
								"details": "Tokens remain locked for UNSTAKE_PERIOD. Only one unstake request active at a time per user.",
								"params": {
									"_amount": "The amount of tokens to start unstaking."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"stake(uint256)": {
								"details": "User must first approve this contract to spend their tokens.",
								"params": {
									"_amount": "The amount of tokens to stake."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw()": {
								"details": "Can only be called after initiateUnstake and waiting UNSTAKE_PERIOD."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StakingContract.sol\":291:4985  contract StakingContract is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/StakingContract.sol\":1213:1432  constructor(address _tokenAddress, address _initialOwner) Ownable(_initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/StakingContract.sol\":1279:1292  _initialOwner */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":640:691   */\n  mstore\n    /* \"#utility.yul\":613:631   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/StakingContract.sol\":1312:1339  _tokenAddress != address(0) */\n  dup3\n  and\n    /* \"contracts/StakingContract.sol\":1304:1376  require(_tokenAddress != address(0), \"The Token address cannot be zero\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":904:906   */\n  0x20\n    /* \"contracts/StakingContract.sol\":1304:1376  require(_tokenAddress != address(0), \"The Token address cannot be zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":886:907   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":923:941   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":916:946   */\n  mstore\n    /* \"#utility.yul\":982:1016   */\n  0x54686520546f6b656e20616464726573732063616e6e6f74206265207a65726f\n    /* \"#utility.yul\":962:980   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":955:1017   */\n  mstore\n    /* \"#utility.yul\":1034:1052   */\n  0x64\n  add\n    /* \"contracts/StakingContract.sol\":1304:1376  require(_tokenAddress != address(0), \"The Token address cannot be zero\") */\n  tag_9\n    /* \"#utility.yul\":702:1058   */\n  jump\n    /* \"contracts/StakingContract.sol\":1304:1376  require(_tokenAddress != address(0), \"The Token address cannot be zero\") */\ntag_15:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/StakingContract.sol\":1386:1425  governanceToken = IERC20(_tokenAddress) */\n  and\n  0x80\n  mstore\n    /* \"contracts/StakingContract.sol\":291:4985  contract StakingContract is Ownable, ReentrancyGuard {... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_20:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_23:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_25:\n    /* \"#utility.yul\":375:415   */\n  tag_26\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_20\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_27\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_20\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":702:1058   */\ntag_21:\n    /* \"contracts/StakingContract.sol\":291:4985  contract StakingContract is Ownable, ReentrancyGuard {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x42fa20e8c2fc174121a60bb5704cfd8579fc4a2698f9ae487d1310659094676e\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/StakingContract.sol\":291:4985  contract StakingContract is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa694fc3a\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xbb4d4436\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf96dae0a\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x817b1cd2\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa0873111\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x60217267\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x60217267\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x79b57862\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x18fb4f32\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3b64916e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/StakingContract.sol\":2546:3303  function initiateUnstaking(uint256 _amount) external nonReentrant {... */\n    tag_3:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/StakingContract.sol\":4751:4981  function getUnstakedRequest(address _account) external view returns(uint256 amount, uint256 unlockTime) {... */\n    tag_4:\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StakingContract.sol\":4895:4921  unstakingRequest[_account] */\n      and\n        /* \"contracts/StakingContract.sol\":4819:4833  uint256 amount */\n      0x00\n        /* \"contracts/StakingContract.sol\":4895:4921  unstakingRequest[_account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StakingContract.sol\":4895:4911  unstakingRequest */\n      0x04\n        /* \"contracts/StakingContract.sol\":4895:4921  unstakingRequest[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/StakingContract.sol\":4939:4953  request.amount */\n      dup1\n      sload\n        /* \"contracts/StakingContract.sol\":4955:4973  request.unlockTime */\n      0x01\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/StakingContract.sol\":4939:4953  request.amount */\n      swap1\n      swap2\n        /* \"contracts/StakingContract.sol\":4751:4981  function getUnstakedRequest(address _account) external view returns(uint256 amount, uint256 unlockTime) {... */\n      jump\n    tag_23:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":687:712   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":743:745   */\n      0x20\n        /* \"#utility.yul\":728:746   */\n      dup4\n      add\n        /* \"#utility.yul\":721:755   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":660:678   */\n      add\n        /* \"contracts/StakingContract.sol\":4751:4981  function getUnstakedRequest(address _account) external view returns(uint256 amount, uint256 unlockTime) {... */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingContract.sol\":3477:4139  function withdraw() external nonReentrant {... */\n    tag_5:\n      tag_19\n      tag_30\n      jump\t// in\n        /* \"contracts/StakingContract.sol\":429:477  mapping(address => uint256) public stakedBalance */\n    tag_6:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_32:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":912:937   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":900:902   */\n      0x20\n        /* \"#utility.yul\":885:903   */\n      add\n        /* \"contracts/StakingContract.sol\":429:477  mapping(address => uint256) public stakedBalance */\n      tag_27\n        /* \"#utility.yul\":766:943   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_19\n      tag_37\n      jump\t// in\n        /* \"contracts/StakingContract.sol\":721:768  uint256 public constant UNSTAKE_PERIOD = 7 days */\n    tag_8:\n      tag_31\n        /* \"contracts/StakingContract.sol\":762:768  7 days */\n      0x093a80\n        /* \"contracts/StakingContract.sol\":721:768  uint256 public constant UNSTAKE_PERIOD = 7 days */\n      dup2\n      jump\n        /* \"contracts/StakingContract.sol\":483:506  uint public totalStaked */\n    tag_9:\n      tag_31\n      sload(0x03)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_44:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1112:1167   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1094:1168   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1082:1084   */\n      0x20\n        /* \"#utility.yul\":1067:1085   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_27\n        /* \"#utility.yul\":948:1174   */\n      jump\n        /* \"contracts/StakingContract.sol\":659:714  mapping(address => UnstakeInfo) public unstakingRequest */\n    tag_11:\n      tag_23\n      tag_49\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_49:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n        /* \"contracts/StakingContract.sol\":1657:2267  function stake(uint256 _amount) external nonReentrant {... */\n    tag_12:\n      tag_19\n      tag_53\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"contracts/StakingContract.sol\":4374:4494  function getVotingPower(address _account) external view returns(uint256) {... */\n    tag_13:\n      tag_31\n      tag_56\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StakingContract.sol\":4464:4487  stakedBalance[_account] */\n      and\n        /* \"contracts/StakingContract.sol\":4438:4445  uint256 */\n      0x00\n        /* \"contracts/StakingContract.sol\":4464:4487  stakedBalance[_account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StakingContract.sol\":4464:4477  stakedBalance */\n      0x02\n        /* \"contracts/StakingContract.sol\":4464:4487  stakedBalance[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/StakingContract.sol\":4374:4494  function getVotingPower(address _account) external view returns(uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_19\n      tag_60\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"contracts/StakingContract.sol\":383:422  IERC20 public immutable governanceToken */\n    tag_15:\n      tag_44\n      immutable(\"0x42fa20e8c2fc174121a60bb5704cfd8579fc4a2698f9ae487d1310659094676e\")\n      dup2\n      jump\n        /* \"contracts/StakingContract.sol\":2546:3303  function initiateUnstaking(uint256 _amount) external nonReentrant {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_67\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_68\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_67:\n        /* \"contracts/StakingContract.sol\":2640:2641  0 */\n      0x00\n        /* \"contracts/StakingContract.sol\":2630:2637  _amount */\n      dup2\n        /* \"contracts/StakingContract.sol\":2630:2641  _amount > 0 */\n      gt\n        /* \"contracts/StakingContract.sol\":2622:2672  require(_amount > 0, \"Cannot Unstake zero tokens\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1626:1628   */\n      0x20\n        /* \"contracts/StakingContract.sol\":2622:2672  require(_amount > 0, \"Cannot Unstake zero tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1608:1629   */\n      mstore\n        /* \"#utility.yul\":1665:1667   */\n      0x1a\n        /* \"#utility.yul\":1645:1663   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1638:1668   */\n      mstore\n        /* \"#utility.yul\":1704:1732   */\n      0x43616e6e6f7420556e7374616b65207a65726f20746f6b656e73000000000000\n        /* \"#utility.yul\":1684:1702   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1677:1733   */\n      mstore\n        /* \"#utility.yul\":1750:1768   */\n      0x64\n      add\n        /* \"contracts/StakingContract.sol\":2622:2672  require(_amount > 0, \"Cannot Unstake zero tokens\") */\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"contracts/StakingContract.sol\":2704:2714  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":2690:2715  stakedBalance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StakingContract.sol\":2690:2703  stakedBalance */\n      0x02\n        /* \"contracts/StakingContract.sol\":2690:2715  stakedBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/StakingContract.sol\":2690:2726  stakedBalance[msg.sender] >= _amount */\n      dup2\n      gt\n      iszero\n        /* \"contracts/StakingContract.sol\":2682:2758  require(stakedBalance[msg.sender] >= _amount, \"Insufficient staked balance\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1981:1983   */\n      0x20\n        /* \"contracts/StakingContract.sol\":2682:2758  require(stakedBalance[msg.sender] >= _amount, \"Insufficient staked balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1963:1984   */\n      mstore\n        /* \"#utility.yul\":2020:2022   */\n      0x1b\n        /* \"#utility.yul\":2000:2018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1993:2023   */\n      mstore\n        /* \"#utility.yul\":2059:2088   */\n      0x496e73756666696369656e74207374616b65642062616c616e63650000000000\n        /* \"#utility.yul\":2039:2057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2032:2089   */\n      mstore\n        /* \"#utility.yul\":2106:2124   */\n      0x64\n      add\n        /* \"contracts/StakingContract.sol\":2682:2758  require(stakedBalance[msg.sender] >= _amount, \"Insufficient staked balance\") */\n      tag_71\n        /* \"#utility.yul\":1779:2130   */\n      jump\n        /* \"contracts/StakingContract.sol\":2682:2758  require(stakedBalance[msg.sender] >= _amount, \"Insufficient staked balance\") */\n    tag_73:\n        /* \"contracts/StakingContract.sol\":2793:2803  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":2776:2804  unstakingRequest[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StakingContract.sol\":2776:2792  unstakingRequest */\n      0x04\n        /* \"contracts/StakingContract.sol\":2776:2804  unstakingRequest[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/StakingContract.sol\":2776:2811  unstakingRequest[msg.sender].amount */\n      sload\n        /* \"contracts/StakingContract.sol\":2776:2816  unstakingRequest[msg.sender].amount == 0 */\n      iszero\n        /* \"contracts/StakingContract.sol\":2768:2847  require(unstakingRequest[msg.sender].amount == 0, \"Unstake Already in Process\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2337:2339   */\n      0x20\n        /* \"contracts/StakingContract.sol\":2768:2847  require(unstakingRequest[msg.sender].amount == 0, \"Unstake Already in Process\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2319:2340   */\n      mstore\n        /* \"#utility.yul\":2376:2378   */\n      0x1a\n        /* \"#utility.yul\":2356:2374   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2349:2379   */\n      mstore\n        /* \"#utility.yul\":2415:2443   */\n      0x556e7374616b6520416c726561647920696e2050726f63657373000000000000\n        /* \"#utility.yul\":2395:2413   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2388:2444   */\n      mstore\n        /* \"#utility.yul\":2461:2479   */\n      0x64\n      add\n        /* \"contracts/StakingContract.sol\":2768:2847  require(unstakingRequest[msg.sender].amount == 0, \"Unstake Already in Process\") */\n      tag_71\n        /* \"#utility.yul\":2135:2485   */\n      jump\n        /* \"contracts/StakingContract.sol\":2768:2847  require(unstakingRequest[msg.sender].amount == 0, \"Unstake Already in Process\") */\n    tag_76:\n        /* \"contracts/StakingContract.sol\":2936:2946  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":2922:2947  stakedBalance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StakingContract.sol\":2922:2935  stakedBalance */\n      0x02\n        /* \"contracts/StakingContract.sol\":2922:2947  stakedBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/StakingContract.sol\":2922:2960  stakedBalance[msg.sender].sub(_amount) */\n      tag_79\n      swap1\n        /* \"contracts/StakingContract.sol\":2952:2959  _amount */\n      dup3\n        /* \"contracts/StakingContract.sol\":2922:2951  stakedBalance[msg.sender].sub */\n      tag_80\n        /* \"contracts/StakingContract.sol\":2922:2960  stakedBalance[msg.sender].sub(_amount) */\n      jump\t// in\n    tag_79:\n        /* \"contracts/StakingContract.sol\":2908:2918  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":2894:2919  stakedBalance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StakingContract.sol\":2894:2907  stakedBalance */\n      0x02\n        /* \"contracts/StakingContract.sol\":2894:2919  stakedBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/StakingContract.sol\":2894:2960  stakedBalance[msg.sender] = stakedBalance[msg.sender].sub(_amount) */\n      sstore\n        /* \"contracts/StakingContract.sol\":2984:2995  totalStaked */\n      sload(0x03)\n        /* \"contracts/StakingContract.sol\":2984:3008  totalStaked.sub(_amount) */\n      tag_81\n      swap1\n        /* \"contracts/StakingContract.sol\":3000:3007  _amount */\n      dup3\n        /* \"contracts/StakingContract.sol\":2984:2999  totalStaked.sub */\n      tag_80\n        /* \"contracts/StakingContract.sol\":2984:3008  totalStaked.sub(_amount) */\n      jump\t// in\n    tag_81:\n        /* \"contracts/StakingContract.sol\":2970:2981  totalStaked */\n      0x03\n        /* \"contracts/StakingContract.sol\":2970:3008  totalStaked = totalStaked.sub(_amount) */\n      sstore\n        /* \"contracts/StakingContract.sol\":3049:3067  uint256 unlockTime */\n      0x00\n        /* \"contracts/StakingContract.sol\":3070:3102  block.timestamp + UNSTAKE_PERIOD */\n      tag_82\n        /* \"contracts/StakingContract.sol\":762:768  7 days */\n      0x093a80\n        /* \"contracts/StakingContract.sol\":3070:3085  block.timestamp */\n      timestamp\n        /* \"contracts/StakingContract.sol\":3070:3102  block.timestamp + UNSTAKE_PERIOD */\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"contracts/StakingContract.sol\":3143:3231  UnstakeInfo({... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup5\n      dup2\n      mstore\n        /* \"contracts/StakingContract.sol\":3129:3139  msg.sender */\n      caller\n      0x00\n        /* \"contracts/StakingContract.sol\":3112:3140  unstakingRequest[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/StakingContract.sol\":3112:3128  unstakingRequest */\n      0x04\n        /* \"contracts/StakingContract.sol\":3112:3140  unstakingRequest[msg.sender] */\n      dup5\n      mstore\n      dup6\n      swap1\n      keccak256\n        /* \"contracts/StakingContract.sol\":3112:3231  unstakingRequest[msg.sender] = UnstakeInfo({... */\n      swap4\n      mload\n      dup5\n      sstore\n      swap1\n      mload\n      0x01\n      swap1\n      swap4\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/StakingContract.sol\":3247:3296  UnstakeInitiated(msg.sender, _amount, unlockTime) */\n      dup3\n      mload\n        /* \"#utility.yul\":687:712   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":728:746   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":721:755   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/StakingContract.sol\":3143:3231  UnstakeInfo({... */\n      swap3\n      swap4\n      pop\n        /* \"contracts/StakingContract.sol\":3129:3139  msg.sender */\n      swap2\n        /* \"contracts/StakingContract.sol\":3247:3296  UnstakeInitiated(msg.sender, _amount, unlockTime) */\n      0x9cee5eacd317086e5050733a5dad16ef5aaec185de792371a9625bfee2a3213b\n      swap2\n        /* \"#utility.yul\":660:678   */\n      add\n        /* \"contracts/StakingContract.sol\":3247:3296  UnstakeInitiated(msg.sender, _amount, unlockTime) */\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingContract.sol\":2612:3303  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_85\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_85:\n        /* \"contracts/StakingContract.sol\":2546:3303  function initiateUnstaking(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingContract.sol\":3477:4139  function withdraw() external nonReentrant {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_89\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_68\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_89:\n        /* \"contracts/StakingContract.sol\":3576:3586  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":3529:3556  UnstakeInfo storage request */\n      0x00\n        /* \"contracts/StakingContract.sol\":3559:3587  unstakingRequest[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StakingContract.sol\":3559:3575  unstakingRequest */\n      0x04\n        /* \"contracts/StakingContract.sol\":3559:3587  unstakingRequest[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/StakingContract.sol\":3605:3619  request.amount */\n      dup1\n      sload\n        /* \"contracts/StakingContract.sol\":3597:3652  require(request.amount > 0, \"No Unstake Request Found\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3011:3013   */\n      0x20\n        /* \"contracts/StakingContract.sol\":3597:3652  require(request.amount > 0, \"No Unstake Request Found\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2993:3014   */\n      mstore\n        /* \"#utility.yul\":3050:3052   */\n      0x18\n        /* \"#utility.yul\":3030:3048   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3023:3053   */\n      mstore\n        /* \"#utility.yul\":3089:3115   */\n      0x4e6f20556e7374616b65205265717565737420466f756e640000000000000000\n        /* \"#utility.yul\":3069:3087   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3062:3116   */\n      mstore\n        /* \"#utility.yul\":3133:3151   */\n      0x64\n      add\n        /* \"contracts/StakingContract.sol\":3597:3652  require(request.amount > 0, \"No Unstake Request Found\") */\n      tag_71\n        /* \"#utility.yul\":2809:3157   */\n      jump\n        /* \"contracts/StakingContract.sol\":3597:3652  require(request.amount > 0, \"No Unstake Request Found\") */\n    tag_91:\n        /* \"contracts/StakingContract.sol\":3689:3696  request */\n      dup1\n        /* \"contracts/StakingContract.sol\":3689:3707  request.unlockTime */\n      0x01\n      add\n      sload\n        /* \"contracts/StakingContract.sol\":3670:3685  block.timestamp */\n      timestamp\n        /* \"contracts/StakingContract.sol\":3670:3707  block.timestamp >= request.unlockTime */\n      lt\n      iszero\n        /* \"contracts/StakingContract.sol\":3662:3735  require(block.timestamp >= request.unlockTime, \"Unstake period not over\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3364:3366   */\n      0x20\n        /* \"contracts/StakingContract.sol\":3662:3735  require(block.timestamp >= request.unlockTime, \"Unstake period not over\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3346:3367   */\n      mstore\n        /* \"#utility.yul\":3403:3405   */\n      0x17\n        /* \"#utility.yul\":3383:3401   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3376:3406   */\n      mstore\n        /* \"#utility.yul\":3442:3467   */\n      0x556e7374616b6520706572696f64206e6f74206f766572000000000000000000\n        /* \"#utility.yul\":3422:3440   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3415:3468   */\n      mstore\n        /* \"#utility.yul\":3485:3503   */\n      0x64\n      add\n        /* \"contracts/StakingContract.sol\":3662:3735  require(block.timestamp >= request.unlockTime, \"Unstake period not over\") */\n      tag_71\n        /* \"#utility.yul\":3162:3509   */\n      jump\n        /* \"contracts/StakingContract.sol\":3662:3735  require(block.timestamp >= request.unlockTime, \"Unstake period not over\") */\n    tag_94:\n        /* \"contracts/StakingContract.sol\":3773:3787  request.amount */\n      dup1\n      sload\n        /* \"contracts/StakingContract.sol\":3746:3770  uint256 amountToWithdraw */\n      0x00\n        /* \"contracts/StakingContract.sol\":3851:3869  request.amount = 0 */\n      dup1\n      dup4\n      sstore\n      0x01\n        /* \"contracts/StakingContract.sol\":3879:3897  request.unlockTime */\n      dup4\n      add\n        /* \"contracts/StakingContract.sol\":3879:3901  request.unlockTime = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/StakingContract.sol\":3947:4001  governanceToken.transfer(msg.sender, amountToWithdraw) */\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/StakingContract.sol\":3972:3982  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":3947:4001  governanceToken.transfer(msg.sender, amountToWithdraw) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3688:3762   */\n      mstore\n        /* \"#utility.yul\":3778:3796   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3771:3805   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/StakingContract.sol\":3947:3962  governanceToken */\n      immutable(\"0x42fa20e8c2fc174121a60bb5704cfd8579fc4a2698f9ae487d1310659094676e\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StakingContract.sol\":3947:3971  governanceToken.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3661:3679   */\n      0x44\n      add\n        /* \"contracts/StakingContract.sol\":3947:4001  governanceToken.transfer(msg.sender, amountToWithdraw) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"contracts/StakingContract.sol\":3932:4001  bool success = governanceToken.transfer(msg.sender, amountToWithdraw) */\n      swap1\n      pop\n        /* \"contracts/StakingContract.sol\":4019:4026  success */\n      dup1\n        /* \"contracts/StakingContract.sol\":4011:4077  require(success, \"Token Transfer Failed during UnStaking Process\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4300:4302   */\n      0x20\n        /* \"contracts/StakingContract.sol\":4011:4077  require(success, \"Token Transfer Failed during UnStaking Process\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4282:4303   */\n      mstore\n        /* \"#utility.yul\":4339:4341   */\n      0x2e\n        /* \"#utility.yul\":4319:4337   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4312:4342   */\n      mstore\n        /* \"#utility.yul\":4378:4412   */\n      0x546f6b656e205472616e73666572204661696c656420647572696e6720556e53\n        /* \"#utility.yul\":4358:4376   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4351:4413   */\n      mstore\n        /* \"#utility.yul\":4449:4465   */\n      0x74616b696e672050726f63657373000000000000000000000000000000000000\n        /* \"#utility.yul\":4429:4447   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4422:4466   */\n      mstore\n        /* \"#utility.yul\":4483:4502   */\n      0x84\n      add\n        /* \"contracts/StakingContract.sol\":4011:4077  require(success, \"Token Transfer Failed during UnStaking Process\") */\n      tag_71\n        /* \"#utility.yul\":4098:4508   */\n      jump\n        /* \"contracts/StakingContract.sol\":4011:4077  require(success, \"Token Transfer Failed during UnStaking Process\") */\n    tag_103:\n        /* \"contracts/StakingContract.sol\":4093:4131  Withdraw(msg.sender, amountToWithdraw) */\n      mload(0x40)\n        /* \"#utility.yul\":912:937   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/StakingContract.sol\":4102:4112  msg.sender */\n      caller\n      swap1\n        /* \"contracts/StakingContract.sol\":4093:4131  Withdraw(msg.sender, amountToWithdraw) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n      swap1\n        /* \"#utility.yul\":900:902   */\n      0x20\n        /* \"#utility.yul\":885:903   */\n      add\n        /* \"contracts/StakingContract.sol\":4093:4131  Withdraw(msg.sender, amountToWithdraw) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingContract.sol\":3519:4139  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_107\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_107:\n        /* \"contracts/StakingContract.sol\":3477:4139  function withdraw() external nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/StakingContract.sol\":1657:2267  function stake(uint256 _amount) external nonReentrant {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_116\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_68\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_116:\n        /* \"contracts/StakingContract.sol\":1739:1740  0 */\n      0x00\n        /* \"contracts/StakingContract.sol\":1729:1736  _amount */\n      dup2\n        /* \"contracts/StakingContract.sol\":1729:1740  _amount > 0 */\n      gt\n        /* \"contracts/StakingContract.sol\":1721:1769  require(_amount > 0, \"Cannot stake zero Tokens\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4715:4717   */\n      0x20\n        /* \"contracts/StakingContract.sol\":1721:1769  require(_amount > 0, \"Cannot stake zero Tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4697:4718   */\n      mstore\n        /* \"#utility.yul\":4754:4756   */\n      0x18\n        /* \"#utility.yul\":4734:4752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4727:4757   */\n      mstore\n        /* \"#utility.yul\":4793:4819   */\n      0x43616e6e6f74207374616b65207a65726f20546f6b656e730000000000000000\n        /* \"#utility.yul\":4773:4791   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4766:4820   */\n      mstore\n        /* \"#utility.yul\":4837:4855   */\n      0x64\n      add\n        /* \"contracts/StakingContract.sol\":1721:1769  require(_amount > 0, \"Cannot stake zero Tokens\") */\n      tag_71\n        /* \"#utility.yul\":4513:4861   */\n      jump\n        /* \"contracts/StakingContract.sol\":1721:1769  require(_amount > 0, \"Cannot stake zero Tokens\") */\n    tag_118:\n        /* \"contracts/StakingContract.sol\":1787:1824  governanceToken.balanceOf(msg.sender) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/StakingContract.sol\":1813:1823  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":1787:1824  governanceToken.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1094:1168   */\n      mstore\n        /* \"contracts/StakingContract.sol\":1828:1835  _amount */\n      dup2\n      swap1\n        /* \"contracts/StakingContract.sol\":1787:1802  governanceToken */\n      immutable(\"0x42fa20e8c2fc174121a60bb5704cfd8579fc4a2698f9ae487d1310659094676e\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StakingContract.sol\":1787:1812  governanceToken.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1067:1085   */\n      0x24\n      add\n        /* \"contracts/StakingContract.sol\":1787:1824  governanceToken.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"contracts/StakingContract.sol\":1787:1835  governanceToken.balanceOf(msg.sender) >= _amount */\n      lt\n      iszero\n        /* \"contracts/StakingContract.sol\":1779:1860  require(governanceToken.balanceOf(msg.sender) >= _amount, \"Insufficient Balance\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5257:5259   */\n      0x20\n        /* \"contracts/StakingContract.sol\":1779:1860  require(governanceToken.balanceOf(msg.sender) >= _amount, \"Insufficient Balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5239:5260   */\n      mstore\n        /* \"#utility.yul\":5296:5298   */\n      0x14\n        /* \"#utility.yul\":5276:5294   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5269:5299   */\n      mstore\n        /* \"#utility.yul\":5335:5357   */\n      0x496e73756666696369656e742042616c616e6365000000000000000000000000\n        /* \"#utility.yul\":5315:5333   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5308:5358   */\n      mstore\n        /* \"#utility.yul\":5375:5393   */\n      0x64\n      add\n        /* \"contracts/StakingContract.sol\":1779:1860  require(governanceToken.balanceOf(msg.sender) >= _amount, \"Insufficient Balance\") */\n      tag_71\n        /* \"#utility.yul\":5055:5399   */\n      jump\n        /* \"contracts/StakingContract.sol\":1779:1860  require(governanceToken.balanceOf(msg.sender) >= _amount, \"Insufficient Balance\") */\n    tag_126:\n        /* \"contracts/StakingContract.sol\":1947:2011  governanceToken.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/StakingContract.sol\":1976:1986  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":1947:2011  governanceToken.transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5606:5680   */\n      mstore\n        /* \"contracts/StakingContract.sol\":1996:2000  this */\n      address\n        /* \"#utility.yul\":5696:5714   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5689:5772   */\n      mstore\n        /* \"#utility.yul\":5788:5806   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":5781:5815   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/StakingContract.sol\":1932:1944  bool success */\n      0x00\n      swap1\n        /* \"contracts/StakingContract.sol\":1947:1962  governanceToken */\n      immutable(\"0x42fa20e8c2fc174121a60bb5704cfd8579fc4a2698f9ae487d1310659094676e\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/StakingContract.sol\":1947:1975  governanceToken.transferFrom */\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":5579:5597   */\n      0x64\n      add\n        /* \"contracts/StakingContract.sol\":1947:2011  governanceToken.transferFrom(msg.sender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_133:\n        /* \"contracts/StakingContract.sol\":1932:2011  bool success = governanceToken.transferFrom(msg.sender, address(this), _amount) */\n      swap1\n      pop\n        /* \"contracts/StakingContract.sol\":2029:2036  success */\n      dup1\n        /* \"contracts/StakingContract.sol\":2021:2056  require(success, \"Transfer Failed\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6028:6030   */\n      0x20\n        /* \"contracts/StakingContract.sol\":2021:2056  require(success, \"Transfer Failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6010:6031   */\n      mstore\n        /* \"#utility.yul\":6067:6069   */\n      0x0f\n        /* \"#utility.yul\":6047:6065   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6040:6070   */\n      mstore\n        /* \"#utility.yul\":6106:6123   */\n      0x5472616e73666572204661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":6086:6104   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6079:6124   */\n      mstore\n        /* \"#utility.yul\":6141:6159   */\n      0x64\n      add\n        /* \"contracts/StakingContract.sol\":2021:2056  require(success, \"Transfer Failed\") */\n      tag_71\n        /* \"#utility.yul\":5826:6165   */\n      jump\n        /* \"contracts/StakingContract.sol\":2021:2056  require(success, \"Transfer Failed\") */\n    tag_134:\n        /* \"contracts/StakingContract.sol\":2145:2155  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":2131:2156  stakedBalance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StakingContract.sol\":2131:2144  stakedBalance */\n      0x02\n        /* \"contracts/StakingContract.sol\":2131:2156  stakedBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/StakingContract.sol\":2131:2169  stakedBalance[msg.sender].add(_amount) */\n      tag_137\n      swap1\n        /* \"contracts/StakingContract.sol\":2161:2168  _amount */\n      dup4\n        /* \"contracts/StakingContract.sol\":2131:2160  stakedBalance[msg.sender].add */\n      tag_138\n        /* \"contracts/StakingContract.sol\":2131:2169  stakedBalance[msg.sender].add(_amount) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/StakingContract.sol\":2117:2127  msg.sender */\n      caller\n        /* \"contracts/StakingContract.sol\":2103:2128  stakedBalance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/StakingContract.sol\":2103:2116  stakedBalance */\n      0x02\n        /* \"contracts/StakingContract.sol\":2103:2128  stakedBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/StakingContract.sol\":2103:2169  stakedBalance[msg.sender] = stakedBalance[msg.sender].add(_amount) */\n      sstore\n        /* \"contracts/StakingContract.sol\":2193:2204  totalStaked */\n      sload(0x03)\n        /* \"contracts/StakingContract.sol\":2193:2217  totalStaked.add(_amount) */\n      tag_139\n      swap1\n        /* \"contracts/StakingContract.sol\":2209:2216  _amount */\n      dup4\n        /* \"contracts/StakingContract.sol\":2193:2208  totalStaked.add */\n      tag_138\n        /* \"contracts/StakingContract.sol\":2193:2217  totalStaked.add(_amount) */\n      jump\t// in\n    tag_139:\n        /* \"contracts/StakingContract.sol\":2179:2190  totalStaked */\n      0x03\n        /* \"contracts/StakingContract.sol\":2179:2217  totalStaked = totalStaked.add(_amount) */\n      sstore\n        /* \"contracts/StakingContract.sol\":2233:2260  Staked(msg.sender, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":912:937   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/StakingContract.sol\":2240:2250  msg.sender */\n      caller\n      swap1\n        /* \"contracts/StakingContract.sol\":2233:2260  Staked(msg.sender, _amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      swap1\n        /* \"#utility.yul\":900:902   */\n      0x20\n        /* \"#utility.yul\":885:903   */\n      add\n        /* \"contracts/StakingContract.sol\":2233:2260  Staked(msg.sender, _amount) */\n      tag_84\n        /* \"#utility.yul\":766:943   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1094:1168   */\n      mstore\n        /* \"#utility.yul\":1067:1085   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_71\n        /* \"#utility.yul\":948:1174   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6372:6374   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6354:6375   */\n      mstore\n        /* \"#utility.yul\":6411:6413   */\n      0x1f\n        /* \"#utility.yul\":6391:6409   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6384:6414   */\n      mstore\n        /* \"#utility.yul\":6450:6483   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":6430:6448   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6423:6484   */\n      mstore\n        /* \"#utility.yul\":6501:6519   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_71\n        /* \"#utility.yul\":6170:6525   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_150:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_154\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_153:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_107\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1094:1168   */\n      mstore\n        /* \"#utility.yul\":1067:1085   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_71\n        /* \"#utility.yul\":948:1174   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_154\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_83\n      jump\t// in\n        /* \"#utility.yul\":14:194   */\n    tag_21:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":199:508   */\n    tag_25:\n        /* \"#utility.yul\":258:264   */\n      0x00\n        /* \"#utility.yul\":311:313   */\n      0x20\n        /* \"#utility.yul\":299:308   */\n      dup3\n        /* \"#utility.yul\":290:297   */\n      dup5\n        /* \"#utility.yul\":286:309   */\n      sub\n        /* \"#utility.yul\":282:314   */\n      slt\n        /* \"#utility.yul\":279:331   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":327:328   */\n      0x00\n        /* \"#utility.yul\":324:325   */\n      dup1\n        /* \"#utility.yul\":317:329   */\n      revert\n        /* \"#utility.yul\":279:331   */\n    tag_173:\n        /* \"#utility.yul\":366:375   */\n      dup2\n        /* \"#utility.yul\":353:376   */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":409:414   */\n      dup2\n        /* \"#utility.yul\":405:459   */\n      and\n        /* \"#utility.yul\":398:403   */\n      dup2\n        /* \"#utility.yul\":395:460   */\n      eq\n        /* \"#utility.yul\":385:478   */\n      tag_174\n      jumpi\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":471:472   */\n      dup1\n        /* \"#utility.yul\":464:476   */\n      revert\n        /* \"#utility.yul\":385:478   */\n    tag_174:\n        /* \"#utility.yul\":497:502   */\n      swap4\n        /* \"#utility.yul\":199:508   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2490:2674   */\n    tag_168:\n        /* \"#utility.yul\":2542:2619   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2539:2540   */\n      0x00\n        /* \"#utility.yul\":2532:2620   */\n      mstore\n        /* \"#utility.yul\":2639:2643   */\n      0x11\n        /* \"#utility.yul\":2636:2637   */\n      0x04\n        /* \"#utility.yul\":2629:2644   */\n      mstore\n        /* \"#utility.yul\":2663:2667   */\n      0x24\n        /* \"#utility.yul\":2660:2661   */\n      0x00\n        /* \"#utility.yul\":2653:2668   */\n      revert\n        /* \"#utility.yul\":2679:2804   */\n    tag_83:\n        /* \"#utility.yul\":2744:2753   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2765:2775   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2762:2798   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":2778:2796   */\n      tag_153\n      tag_168\n      jump\t// in\n        /* \"#utility.yul\":3816:4093   */\n    tag_102:\n        /* \"#utility.yul\":3883:3889   */\n      0x00\n        /* \"#utility.yul\":3936:3938   */\n      0x20\n        /* \"#utility.yul\":3924:3933   */\n      dup3\n        /* \"#utility.yul\":3915:3922   */\n      dup5\n        /* \"#utility.yul\":3911:3934   */\n      sub\n        /* \"#utility.yul\":3907:3939   */\n      slt\n        /* \"#utility.yul\":3904:3956   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":3952:3953   */\n      0x00\n        /* \"#utility.yul\":3949:3950   */\n      dup1\n        /* \"#utility.yul\":3942:3954   */\n      revert\n        /* \"#utility.yul\":3904:3956   */\n    tag_190:\n        /* \"#utility.yul\":3984:3993   */\n      dup2\n        /* \"#utility.yul\":3978:3994   */\n      mload\n        /* \"#utility.yul\":4037:4042   */\n      dup1\n        /* \"#utility.yul\":4030:4043   */\n      iszero\n        /* \"#utility.yul\":4023:4044   */\n      iszero\n        /* \"#utility.yul\":4016:4021   */\n      dup2\n        /* \"#utility.yul\":4013:4045   */\n      eq\n        /* \"#utility.yul\":4003:4063   */\n      tag_174\n      jumpi\n        /* \"#utility.yul\":4059:4060   */\n      0x00\n        /* \"#utility.yul\":4056:4057   */\n      dup1\n        /* \"#utility.yul\":4049:4061   */\n      revert\n        /* \"#utility.yul\":4866:5050   */\n    tag_125:\n        /* \"#utility.yul\":4936:4942   */\n      0x00\n        /* \"#utility.yul\":4989:4991   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4968:4975   */\n      dup5\n        /* \"#utility.yul\":4964:4987   */\n      sub\n        /* \"#utility.yul\":4960:4992   */\n      slt\n        /* \"#utility.yul\":4957:5009   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":5005:5006   */\n      0x00\n        /* \"#utility.yul\":5002:5003   */\n      dup1\n        /* \"#utility.yul\":4995:5007   */\n      revert\n        /* \"#utility.yul\":4957:5009   */\n    tag_195:\n      pop\n        /* \"#utility.yul\":5028:5044   */\n      mload\n      swap2\n        /* \"#utility.yul\":4866:5050   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6530:6658   */\n    tag_155:\n        /* \"#utility.yul\":6597:6606   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6618:6629   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6615:6652   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":6632:6650   */\n      tag_153\n      tag_168\n      jump\t// in\n\n    auxdata: 0xa264697066735822122094d8dd9c8dc80333cbbcda28d474c7fe88ff6bcfed5f025f6f85248266179f4b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_715": {
									"entryPoint": null,
									"id": 715,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 211,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1060:6",
										"nodeType": "YulBlock",
										"src": "0:1060:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:6",
													"nodeType": "YulBlock",
													"src": "74:117:6",
													"statements": [
														{
															"nativeSrc": "84:22:6",
															"nodeType": "YulAssignment",
															"src": "84:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:6"
																},
																"nativeSrc": "93:13:6",
																"nodeType": "YulFunctionCall",
																"src": "93:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:6",
																"nodeType": "YulBlock",
																"src": "169:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "178:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:6",
																					"nodeType": "YulLiteral",
																					"src": "181:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:6"
																			},
																			"nativeSrc": "171:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:6"
																		},
																		"nativeSrc": "171:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:6",
																										"nodeType": "YulLiteral",
																										"src": "154:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:6",
																										"nodeType": "YulLiteral",
																										"src": "159:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:6"
																								},
																								"nativeSrc": "150:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:6",
																								"nodeType": "YulLiteral",
																								"src": "163:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:6"
																						},
																						"nativeSrc": "146:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:6"
																				},
																				"nativeSrc": "135:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:6"
																		},
																		"nativeSrc": "125:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:6"
																},
																"nativeSrc": "118:50:6",
																"nodeType": "YulFunctionCall",
																"src": "118:50:6"
															},
															"nativeSrc": "115:70:6",
															"nodeType": "YulIf",
															"src": "115:70:6"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:6",
														"nodeType": "YulTypedName",
														"src": "53:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:6",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "14:177:6"
											},
											{
												"body": {
													"nativeSrc": "294:195:6",
													"nodeType": "YulBlock",
													"src": "294:195:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:6",
																"nodeType": "YulBlock",
																"src": "340:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:6",
																					"nodeType": "YulLiteral",
																					"src": "349:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:6",
																					"nodeType": "YulLiteral",
																					"src": "352:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:6"
																			},
																			"nativeSrc": "342:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:6"
																		},
																		"nativeSrc": "342:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:6"
																		},
																		"nativeSrc": "311:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:6",
																		"nodeType": "YulLiteral",
																		"src": "336:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:6"
																},
																"nativeSrc": "307:32:6",
																"nodeType": "YulFunctionCall",
																"src": "307:32:6"
															},
															"nativeSrc": "304:52:6",
															"nodeType": "YulIf",
															"src": "304:52:6"
														},
														{
															"nativeSrc": "365:50:6",
															"nodeType": "YulAssignment",
															"src": "365:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:6"
																},
																"nativeSrc": "375:40:6",
																"nodeType": "YulFunctionCall",
																"src": "375:40:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:6"
																}
															]
														},
														{
															"nativeSrc": "424:59:6",
															"nodeType": "YulAssignment",
															"src": "424:59:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:6",
																				"nodeType": "YulLiteral",
																				"src": "479:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:6"
																		},
																		"nativeSrc": "464:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:6"
																},
																"nativeSrc": "434:49:6",
																"nodeType": "YulFunctionCall",
																"src": "434:49:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:6",
														"nodeType": "YulTypedName",
														"src": "252:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:6",
														"nodeType": "YulTypedName",
														"src": "263:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:6",
														"nodeType": "YulTypedName",
														"src": "275:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:6",
														"nodeType": "YulTypedName",
														"src": "283:6:6",
														"type": ""
													}
												],
												"src": "196:293:6"
											},
											{
												"body": {
													"nativeSrc": "595:102:6",
													"nodeType": "YulBlock",
													"src": "595:102:6",
													"statements": [
														{
															"nativeSrc": "605:26:6",
															"nodeType": "YulAssignment",
															"src": "605:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "617:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "617:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "628:2:6",
																		"nodeType": "YulLiteral",
																		"src": "628:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "613:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "613:3:6"
																},
																"nativeSrc": "613:18:6",
																"nodeType": "YulFunctionCall",
																"src": "613:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "605:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "605:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "647:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "647:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "662:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "662:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "678:3:6",
																								"nodeType": "YulLiteral",
																								"src": "678:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "683:1:6",
																								"nodeType": "YulLiteral",
																								"src": "683:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "674:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:6"
																						},
																						"nativeSrc": "674:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "674:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "687:1:6",
																						"nodeType": "YulLiteral",
																						"src": "687:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "670:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:6"
																				},
																				"nativeSrc": "670:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "670:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "658:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:6"
																		},
																		"nativeSrc": "658:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "658:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "640:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:6"
																},
																"nativeSrc": "640:51:6",
																"nodeType": "YulFunctionCall",
																"src": "640:51:6"
															},
															"nativeSrc": "640:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "640:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "494:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "564:9:6",
														"nodeType": "YulTypedName",
														"src": "564:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "575:6:6",
														"nodeType": "YulTypedName",
														"src": "575:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "586:4:6",
														"nodeType": "YulTypedName",
														"src": "586:4:6",
														"type": ""
													}
												],
												"src": "494:203:6"
											},
											{
												"body": {
													"nativeSrc": "876:182:6",
													"nodeType": "YulBlock",
													"src": "876:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "893:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "893:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "904:2:6",
																		"nodeType": "YulLiteral",
																		"src": "904:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "886:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "886:6:6"
																},
																"nativeSrc": "886:21:6",
																"nodeType": "YulFunctionCall",
																"src": "886:21:6"
															},
															"nativeSrc": "886:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "886:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "927:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "927:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "938:2:6",
																				"nodeType": "YulLiteral",
																				"src": "938:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "923:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "923:3:6"
																		},
																		"nativeSrc": "923:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "923:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "943:2:6",
																		"nodeType": "YulLiteral",
																		"src": "943:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "916:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "916:6:6"
																},
																"nativeSrc": "916:30:6",
																"nodeType": "YulFunctionCall",
																"src": "916:30:6"
															},
															"nativeSrc": "916:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "916:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "966:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "966:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "977:2:6",
																				"nodeType": "YulLiteral",
																				"src": "977:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "962:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "962:3:6"
																		},
																		"nativeSrc": "962:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "962:18:6"
																	},
																	{
																		"hexValue": "54686520546f6b656e20616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "982:34:6",
																		"nodeType": "YulLiteral",
																		"src": "982:34:6",
																		"type": "",
																		"value": "The Token address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "955:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "955:6:6"
																},
																"nativeSrc": "955:62:6",
																"nodeType": "YulFunctionCall",
																"src": "955:62:6"
															},
															"nativeSrc": "955:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "955:62:6"
														},
														{
															"nativeSrc": "1026:26:6",
															"nodeType": "YulAssignment",
															"src": "1026:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1038:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1038:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1049:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1049:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1034:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1034:3:6"
																},
																"nativeSrc": "1034:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1034:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1026:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1026:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "702:356:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "853:9:6",
														"nodeType": "YulTypedName",
														"src": "853:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "867:4:6",
														"nodeType": "YulTypedName",
														"src": "867:4:6",
														"type": ""
													}
												],
												"src": "702:356:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"The Token address cannot be zero\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b50604051610d17380380610d1783398101604081905261002e9161013d565b806001600160a01b03811661005d57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b610066816100d3565b50600180556001600160a01b0382166100c15760405162461bcd60e51b815260206004820181905260248201527f54686520546f6b656e20616464726573732063616e6e6f74206265207a65726f6044820152606401610054565b506001600160a01b031660805261016e565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114610138575f80fd5b919050565b5f806040838503121561014e575f80fd5b61015783610122565b915061016560208401610122565b90509250929050565b608051610b7c61019b5f395f818161022a01528181610519015281816106db01526107d70152610b7c5ff3fe608060405234801561000f575f80fd5b50600436106100da575f3560e01c8063817b1cd211610088578063a694fc3a11610063578063a694fc3a146101d7578063bb4d4436146101ea578063f2fde38b14610212578063f96dae0a14610225575f80fd5b8063817b1cd2146101845780638da5cb5b1461018d578063a0873111146101b1575f80fd5b806360217267116100b85780636021726714610145578063715018a61461017257806379b578621461017a575f80fd5b806318fb4f32146100de5780633b64916e146100f35780633ccfd60b1461013d575b5f80fd5b6100f16100ec366004610a79565b61024c565b005b610123610101366004610a90565b6001600160a01b03165f90815260046020526040902080546001909101549091565b604080519283526020830191909152015b60405180910390f35b6100f161041f565b610164610153366004610a90565b60026020525f908152604090205481565b604051908152602001610134565b6100f1610643565b61016462093a8081565b61016460035481565b5f546001600160a01b03165b6040516001600160a01b039091168152602001610134565b6101236101bf366004610a90565b60046020525f90815260409020805460019091015482565b6100f16101e5366004610a79565b610654565b6101646101f8366004610a90565b6001600160a01b03165f9081526002602052604090205490565b6100f1610220366004610a90565b610902565b6101997f000000000000000000000000000000000000000000000000000000000000000081565b610254610955565b5f81116102a85760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f7420556e7374616b65207a65726f20746f6b656e7300000000000060448201526064015b60405180910390fd5b335f908152600260205260409020548111156103065760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e74207374616b65642062616c616e63650000000000604482015260640161029f565b335f90815260046020526040902054156103625760405162461bcd60e51b815260206004820152601a60248201527f556e7374616b6520416c726561647920696e2050726f63657373000000000000604482015260640161029f565b335f9081526002602052604090205461037b90826109ae565b335f9081526002602052604090205560035461039790826109ae565b6003555f6103a862093a8042610aea565b6040805180820182528481526020808201848152335f818152600484528590209351845590516001909301929092558251868152908101849052929350917f9cee5eacd317086e5050733a5dad16ef5aaec185de792371a9625bfee2a3213b91015b60405180910390a25061041c60018055565b50565b610427610955565b335f90815260046020526040902080546104835760405162461bcd60e51b815260206004820152601860248201527f4e6f20556e7374616b65205265717565737420466f756e640000000000000000604482015260640161029f565b80600101544210156104d75760405162461bcd60e51b815260206004820152601760248201527f556e7374616b6520706572696f64206e6f74206f766572000000000000000000604482015260640161029f565b80545f808355600183018190556040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303815f875af1158015610567573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061058b9190610afd565b9050806106005760405162461bcd60e51b815260206004820152602e60248201527f546f6b656e205472616e73666572204661696c656420647572696e6720556e5360448201527f74616b696e672050726f63657373000000000000000000000000000000000000606482015260840161029f565b60405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a250505061064160018055565b565b61064b6109c2565b6106415f610a07565b61065c610955565b5f81116106ab5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f74207374616b65207a65726f20546f6b656e730000000000000000604482015260640161029f565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610728573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061074c9190610b1c565b101561079a5760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742042616c616e6365000000000000000000000000604482015260640161029f565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018290525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303815f875af1158015610825573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108499190610afd565b9050806108985760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572204661696c65640000000000000000000000000000000000604482015260640161029f565b335f908152600260205260409020546108b19083610a6e565b335f908152600260205260409020556003546108cd9083610a6e565b60035560405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200161040a565b61090a6109c2565b6001600160a01b03811661094c576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f600482015260240161029f565b61041c81610a07565b6002600154036109a75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161029f565b6002600155565b5f6109b98284610b33565b90505b92915050565b5f546001600160a01b03163314610641576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161029f565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f6109b98284610aea565b5f60208284031215610a89575f80fd5b5035919050565b5f60208284031215610aa0575f80fd5b81356001600160a01b0381168114610ab6575f80fd5b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b808201808211156109bc576109bc610abd565b5f60208284031215610b0d575f80fd5b81518015158114610ab6575f80fd5b5f60208284031215610b2c575f80fd5b5051919050565b818103818111156109bc576109bc610abd56fea264697066735822122094d8dd9c8dc80333cbbcda28d474c7fe88ff6bcfed5f025f6f85248266179f4b64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD17 CODESIZE SUB DUP1 PUSH2 0xD17 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x13D JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66 DUP2 PUSH2 0xD3 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520546F6B656E20616464726573732063616E6E6F74206265207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x16E JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x138 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x157 DUP4 PUSH2 0x122 JUMP JUMPDEST SWAP2 POP PUSH2 0x165 PUSH1 0x20 DUP5 ADD PUSH2 0x122 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xB7C PUSH2 0x19B PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x22A ADD MSTORE DUP2 DUP2 PUSH2 0x519 ADD MSTORE DUP2 DUP2 PUSH2 0x6DB ADD MSTORE PUSH2 0x7D7 ADD MSTORE PUSH2 0xB7C PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xBB4D4436 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xF96DAE0A EQ PUSH2 0x225 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xA0873111 EQ PUSH2 0x1B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x60217267 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0x60217267 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x79B57862 EQ PUSH2 0x17A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18FB4F32 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x3B64916E EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x13D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF1 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0x41F JUMP JUMPDEST PUSH2 0x164 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x643 JUMP JUMPDEST PUSH2 0x164 PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH2 0x164 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x902 JUMP JUMPDEST PUSH2 0x199 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x955 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x2A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420556E7374616B65207A65726F20746F6B656E73000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x362 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B6520416C726561647920696E2050726F63657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x37B SWAP1 DUP3 PUSH2 0x9AE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0x397 SWAP1 DUP3 PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH0 PUSH2 0x3A8 PUSH3 0x93A80 TIMESTAMP PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP5 MSTORE DUP6 SWAP1 KECCAK256 SWAP4 MLOAD DUP5 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 PUSH32 0x9CEE5EACD317086E5050733A5DAD16EF5AAEC185DE792371A9625BFEE2A3213B SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x41C PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x427 PUSH2 0x955 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20556E7374616B65205265717565737420466F756E640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B6520706572696F64206E6F74206F766572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST DUP1 SLOAD PUSH0 DUP1 DUP4 SSTORE PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x567 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0xAFD JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x600 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E205472616E73666572204661696C656420647572696E6720556E53 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74616B696E672050726F63657373000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x641 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x64B PUSH2 0x9C2 JUMP JUMPDEST PUSH2 0x641 PUSH0 PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x65C PUSH2 0x955 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x6AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207374616B65207A65726F20546F6B656E730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x728 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0xB1C JUMP JUMPDEST LT ISZERO PUSH2 0x79A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x825 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x849 SWAP2 SWAP1 PUSH2 0xAFD JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572204661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x8B1 SWAP1 DUP4 PUSH2 0xA6E JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0x8CD SWAP1 DUP4 PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH1 0x20 ADD PUSH2 0x40A JUMP JUMPDEST PUSH2 0x90A PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x94C JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29F JUMP JUMPDEST PUSH2 0x41C DUP2 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x9A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x9B9 DUP3 DUP5 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x641 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29F JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9B9 DUP3 DUP5 PUSH2 0xAEA JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x9BC JUMPI PUSH2 0x9BC PUSH2 0xABD JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB0D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB2C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x9BC JUMPI PUSH2 0x9BC PUSH2 0xABD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xD8 0xDD SWAP13 DUP14 0xC8 SUB CALLER 0xCB 0xBC 0xDA 0x28 0xD4 PUSH21 0xC7FE88FF6BCFED5F025F6F85248266179F4B64736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "291:4694:5:-:0;;;1213:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1279:13;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;640:51:6;613:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1716:1:1;1821:22;;-1:-1:-1;;;;;1312:27:5;::::1;1304:72;;;::::0;-1:-1:-1;;;1304:72:5;;904:2:6;1304:72:5::1;::::0;::::1;886:21:6::0;;;923:18;;;916:30;982:34;962:18;;;955:62;1034:18;;1304:72:5::1;702:356:6::0;1304:72:5::1;-1:-1:-1::0;;;;;;1386:39:5::1;;::::0;291:4694;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:6:-;93:13;;-1:-1:-1;;;;;135:31:6;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;702:356::-;291:4694:5;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UNSTAKE_PERIOD_667": {
									"entryPoint": null,
									"id": 667,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2498,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_302": {
									"entryPoint": null,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": null,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 2389,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2567,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_496": {
									"entryPoint": 2670,
									"id": 496,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getUnstakedRequest_973": {
									"entryPoint": null,
									"id": 973,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getVotingPower_949": {
									"entryPoint": null,
									"id": 949,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@governanceToken_648": {
									"entryPoint": null,
									"id": 648,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initiateUnstaking_867": {
									"entryPoint": 588,
									"id": 867,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1603,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_786": {
									"entryPoint": 1620,
									"id": 786,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedBalance_652": {
									"entryPoint": null,
									"id": 652,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_511": {
									"entryPoint": 2478,
									"id": 511,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalStaked_654": {
									"entryPoint": null,
									"id": 654,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2306,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstakingRequest_664": {
									"entryPoint": null,
									"id": 664,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_936": {
									"entryPoint": 1055,
									"id": 936,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2749,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6660:6",
										"nodeType": "YulBlock",
										"src": "0:6660:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:6",
													"nodeType": "YulBlock",
													"src": "84:110:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:6",
																"nodeType": "YulBlock",
																"src": "130:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:6",
																					"nodeType": "YulLiteral",
																					"src": "139:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:6",
																					"nodeType": "YulLiteral",
																					"src": "142:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:6"
																			},
																			"nativeSrc": "132:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:6"
																		},
																		"nativeSrc": "132:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:6"
																		},
																		"nativeSrc": "101:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:6",
																		"nodeType": "YulLiteral",
																		"src": "126:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:6"
																},
																"nativeSrc": "97:32:6",
																"nodeType": "YulFunctionCall",
																"src": "97:32:6"
															},
															"nativeSrc": "94:52:6",
															"nodeType": "YulIf",
															"src": "94:52:6"
														},
														{
															"nativeSrc": "155:33:6",
															"nodeType": "YulAssignment",
															"src": "155:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:6"
																},
																"nativeSrc": "165:23:6",
																"nodeType": "YulFunctionCall",
																"src": "165:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:6",
														"nodeType": "YulTypedName",
														"src": "50:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:6",
														"nodeType": "YulTypedName",
														"src": "61:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:6",
														"nodeType": "YulTypedName",
														"src": "73:6:6",
														"type": ""
													}
												],
												"src": "14:180:6"
											},
											{
												"body": {
													"nativeSrc": "269:239:6",
													"nodeType": "YulBlock",
													"src": "269:239:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "315:16:6",
																"nodeType": "YulBlock",
																"src": "315:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "324:1:6",
																					"nodeType": "YulLiteral",
																					"src": "324:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "327:1:6",
																					"nodeType": "YulLiteral",
																					"src": "327:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "317:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "317:6:6"
																			},
																			"nativeSrc": "317:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "317:12:6"
																		},
																		"nativeSrc": "317:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "317:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "290:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "290:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "299:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "299:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "286:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "286:3:6"
																		},
																		"nativeSrc": "286:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "286:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "311:2:6",
																		"nodeType": "YulLiteral",
																		"src": "311:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "282:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "282:3:6"
																},
																"nativeSrc": "282:32:6",
																"nodeType": "YulFunctionCall",
																"src": "282:32:6"
															},
															"nativeSrc": "279:52:6",
															"nodeType": "YulIf",
															"src": "279:52:6"
														},
														{
															"nativeSrc": "340:36:6",
															"nodeType": "YulVariableDeclaration",
															"src": "340:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "366:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "366:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "353:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "353:12:6"
																},
																"nativeSrc": "353:23:6",
																"nodeType": "YulFunctionCall",
																"src": "353:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "344:5:6",
																	"nodeType": "YulTypedName",
																	"src": "344:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "462:16:6",
																"nodeType": "YulBlock",
																"src": "462:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "471:1:6",
																					"nodeType": "YulLiteral",
																					"src": "471:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:6",
																					"nodeType": "YulLiteral",
																					"src": "474:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "464:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "464:6:6"
																			},
																			"nativeSrc": "464:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "464:12:6"
																		},
																		"nativeSrc": "464:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "464:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "398:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "398:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "409:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "409:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "416:42:6",
																						"nodeType": "YulLiteral",
																						"src": "416:42:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "405:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "405:3:6"
																				},
																				"nativeSrc": "405:54:6",
																				"nodeType": "YulFunctionCall",
																				"src": "405:54:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "395:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "395:2:6"
																		},
																		"nativeSrc": "395:65:6",
																		"nodeType": "YulFunctionCall",
																		"src": "395:65:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "388:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "388:6:6"
																},
																"nativeSrc": "388:73:6",
																"nodeType": "YulFunctionCall",
																"src": "388:73:6"
															},
															"nativeSrc": "385:93:6",
															"nodeType": "YulIf",
															"src": "385:93:6"
														},
														{
															"nativeSrc": "487:15:6",
															"nodeType": "YulAssignment",
															"src": "487:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "497:5:6",
																"nodeType": "YulIdentifier",
																"src": "497:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "487:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "487:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "199:309:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "235:9:6",
														"nodeType": "YulTypedName",
														"src": "235:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "246:7:6",
														"nodeType": "YulTypedName",
														"src": "246:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "258:6:6",
														"nodeType": "YulTypedName",
														"src": "258:6:6",
														"type": ""
													}
												],
												"src": "199:309:6"
											},
											{
												"body": {
													"nativeSrc": "642:119:6",
													"nodeType": "YulBlock",
													"src": "642:119:6",
													"statements": [
														{
															"nativeSrc": "652:26:6",
															"nodeType": "YulAssignment",
															"src": "652:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "664:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "664:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "675:2:6",
																		"nodeType": "YulLiteral",
																		"src": "675:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "660:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "660:3:6"
																},
																"nativeSrc": "660:18:6",
																"nodeType": "YulFunctionCall",
																"src": "660:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "652:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "652:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "694:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "694:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "705:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "705:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "687:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "687:6:6"
																},
																"nativeSrc": "687:25:6",
																"nodeType": "YulFunctionCall",
																"src": "687:25:6"
															},
															"nativeSrc": "687:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "687:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "743:2:6",
																				"nodeType": "YulLiteral",
																				"src": "743:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "728:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "728:3:6"
																		},
																		"nativeSrc": "728:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "728:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "748:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "748:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "721:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "721:6:6"
																},
																"nativeSrc": "721:34:6",
																"nodeType": "YulFunctionCall",
																"src": "721:34:6"
															},
															"nativeSrc": "721:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "721:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "513:248:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "603:9:6",
														"nodeType": "YulTypedName",
														"src": "603:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "614:6:6",
														"nodeType": "YulTypedName",
														"src": "614:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "622:6:6",
														"nodeType": "YulTypedName",
														"src": "622:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "633:4:6",
														"nodeType": "YulTypedName",
														"src": "633:4:6",
														"type": ""
													}
												],
												"src": "513:248:6"
											},
											{
												"body": {
													"nativeSrc": "867:76:6",
													"nodeType": "YulBlock",
													"src": "867:76:6",
													"statements": [
														{
															"nativeSrc": "877:26:6",
															"nodeType": "YulAssignment",
															"src": "877:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "889:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "889:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "900:2:6",
																		"nodeType": "YulLiteral",
																		"src": "900:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "885:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "885:3:6"
																},
																"nativeSrc": "885:18:6",
																"nodeType": "YulFunctionCall",
																"src": "885:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "877:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "877:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "919:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "919:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "930:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "930:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "912:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "912:6:6"
																},
																"nativeSrc": "912:25:6",
																"nodeType": "YulFunctionCall",
																"src": "912:25:6"
															},
															"nativeSrc": "912:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "912:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "766:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "836:9:6",
														"nodeType": "YulTypedName",
														"src": "836:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "847:6:6",
														"nodeType": "YulTypedName",
														"src": "847:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "858:4:6",
														"nodeType": "YulTypedName",
														"src": "858:4:6",
														"type": ""
													}
												],
												"src": "766:177:6"
											},
											{
												"body": {
													"nativeSrc": "1049:125:6",
													"nodeType": "YulBlock",
													"src": "1049:125:6",
													"statements": [
														{
															"nativeSrc": "1059:26:6",
															"nodeType": "YulAssignment",
															"src": "1059:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1071:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1071:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1082:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1082:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1067:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1067:3:6"
																},
																"nativeSrc": "1067:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1067:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1059:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1101:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1101:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1116:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1124:42:6",
																				"nodeType": "YulLiteral",
																				"src": "1124:42:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1112:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1112:3:6"
																		},
																		"nativeSrc": "1112:55:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:55:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1094:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1094:6:6"
																},
																"nativeSrc": "1094:74:6",
																"nodeType": "YulFunctionCall",
																"src": "1094:74:6"
															},
															"nativeSrc": "1094:74:6",
															"nodeType": "YulExpressionStatement",
															"src": "1094:74:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "948:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1018:9:6",
														"nodeType": "YulTypedName",
														"src": "1018:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1029:6:6",
														"nodeType": "YulTypedName",
														"src": "1029:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1040:4:6",
														"nodeType": "YulTypedName",
														"src": "1040:4:6",
														"type": ""
													}
												],
												"src": "948:226:6"
											},
											{
												"body": {
													"nativeSrc": "1294:125:6",
													"nodeType": "YulBlock",
													"src": "1294:125:6",
													"statements": [
														{
															"nativeSrc": "1304:26:6",
															"nodeType": "YulAssignment",
															"src": "1304:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1316:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1316:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1327:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1327:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1312:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:6"
																},
																"nativeSrc": "1312:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1312:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1304:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1304:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1346:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1346:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1361:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1369:42:6",
																				"nodeType": "YulLiteral",
																				"src": "1369:42:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1357:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1357:3:6"
																		},
																		"nativeSrc": "1357:55:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1357:55:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1339:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1339:6:6"
																},
																"nativeSrc": "1339:74:6",
																"nodeType": "YulFunctionCall",
																"src": "1339:74:6"
															},
															"nativeSrc": "1339:74:6",
															"nodeType": "YulExpressionStatement",
															"src": "1339:74:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed",
												"nativeSrc": "1179:240:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1263:9:6",
														"nodeType": "YulTypedName",
														"src": "1263:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1274:6:6",
														"nodeType": "YulTypedName",
														"src": "1274:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1285:4:6",
														"nodeType": "YulTypedName",
														"src": "1285:4:6",
														"type": ""
													}
												],
												"src": "1179:240:6"
											},
											{
												"body": {
													"nativeSrc": "1598:176:6",
													"nodeType": "YulBlock",
													"src": "1598:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1615:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1615:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1626:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1626:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1608:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1608:6:6"
																},
																"nativeSrc": "1608:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1608:21:6"
															},
															"nativeSrc": "1608:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1608:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1649:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1649:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1660:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1660:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1645:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1645:3:6"
																		},
																		"nativeSrc": "1645:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1645:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1665:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1665:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1638:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:6"
																},
																"nativeSrc": "1638:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1638:30:6"
															},
															"nativeSrc": "1638:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "1638:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1688:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1688:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1699:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1699:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1684:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1684:3:6"
																		},
																		"nativeSrc": "1684:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1684:18:6"
																	},
																	{
																		"hexValue": "43616e6e6f7420556e7374616b65207a65726f20746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "1704:28:6",
																		"nodeType": "YulLiteral",
																		"src": "1704:28:6",
																		"type": "",
																		"value": "Cannot Unstake zero tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1677:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1677:6:6"
																},
																"nativeSrc": "1677:56:6",
																"nodeType": "YulFunctionCall",
																"src": "1677:56:6"
															},
															"nativeSrc": "1677:56:6",
															"nodeType": "YulExpressionStatement",
															"src": "1677:56:6"
														},
														{
															"nativeSrc": "1742:26:6",
															"nodeType": "YulAssignment",
															"src": "1742:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1754:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1754:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1765:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1765:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1750:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:6"
																},
																"nativeSrc": "1750:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1750:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1742:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1742:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1424:350:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1575:9:6",
														"nodeType": "YulTypedName",
														"src": "1575:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1589:4:6",
														"nodeType": "YulTypedName",
														"src": "1589:4:6",
														"type": ""
													}
												],
												"src": "1424:350:6"
											},
											{
												"body": {
													"nativeSrc": "1953:177:6",
													"nodeType": "YulBlock",
													"src": "1953:177:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1970:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1970:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1981:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1981:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1963:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1963:6:6"
																},
																"nativeSrc": "1963:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1963:21:6"
															},
															"nativeSrc": "1963:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1963:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2004:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2004:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2015:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2015:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2000:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2000:3:6"
																		},
																		"nativeSrc": "2000:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2000:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2020:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1993:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1993:6:6"
																},
																"nativeSrc": "1993:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1993:30:6"
															},
															"nativeSrc": "1993:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "1993:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2043:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2043:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2054:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2054:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2039:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2039:3:6"
																		},
																		"nativeSrc": "2039:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2039:18:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "2059:29:6",
																		"nodeType": "YulLiteral",
																		"src": "2059:29:6",
																		"type": "",
																		"value": "Insufficient staked balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2032:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:6"
																},
																"nativeSrc": "2032:57:6",
																"nodeType": "YulFunctionCall",
																"src": "2032:57:6"
															},
															"nativeSrc": "2032:57:6",
															"nodeType": "YulExpressionStatement",
															"src": "2032:57:6"
														},
														{
															"nativeSrc": "2098:26:6",
															"nodeType": "YulAssignment",
															"src": "2098:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2110:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2110:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2121:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2121:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2106:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2106:3:6"
																},
																"nativeSrc": "2106:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2106:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2098:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2098:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1779:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1930:9:6",
														"nodeType": "YulTypedName",
														"src": "1930:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1944:4:6",
														"nodeType": "YulTypedName",
														"src": "1944:4:6",
														"type": ""
													}
												],
												"src": "1779:351:6"
											},
											{
												"body": {
													"nativeSrc": "2309:176:6",
													"nodeType": "YulBlock",
													"src": "2309:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2326:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2326:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2337:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2337:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2319:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2319:6:6"
																},
																"nativeSrc": "2319:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2319:21:6"
															},
															"nativeSrc": "2319:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "2319:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2360:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2360:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2371:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2371:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2356:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2356:3:6"
																		},
																		"nativeSrc": "2356:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2356:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2376:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2376:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2349:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2349:6:6"
																},
																"nativeSrc": "2349:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2349:30:6"
															},
															"nativeSrc": "2349:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "2349:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2399:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2399:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2410:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2410:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2395:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2395:3:6"
																		},
																		"nativeSrc": "2395:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2395:18:6"
																	},
																	{
																		"hexValue": "556e7374616b6520416c726561647920696e2050726f63657373",
																		"kind": "string",
																		"nativeSrc": "2415:28:6",
																		"nodeType": "YulLiteral",
																		"src": "2415:28:6",
																		"type": "",
																		"value": "Unstake Already in Process"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2388:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2388:6:6"
																},
																"nativeSrc": "2388:56:6",
																"nodeType": "YulFunctionCall",
																"src": "2388:56:6"
															},
															"nativeSrc": "2388:56:6",
															"nodeType": "YulExpressionStatement",
															"src": "2388:56:6"
														},
														{
															"nativeSrc": "2453:26:6",
															"nodeType": "YulAssignment",
															"src": "2453:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2465:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2465:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2476:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2476:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2461:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2461:3:6"
																},
																"nativeSrc": "2461:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2461:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2453:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2453:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2135:350:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2286:9:6",
														"nodeType": "YulTypedName",
														"src": "2286:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2300:4:6",
														"nodeType": "YulTypedName",
														"src": "2300:4:6",
														"type": ""
													}
												],
												"src": "2135:350:6"
											},
											{
												"body": {
													"nativeSrc": "2522:152:6",
													"nodeType": "YulBlock",
													"src": "2522:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2539:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2539:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2542:77:6",
																		"nodeType": "YulLiteral",
																		"src": "2542:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2532:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2532:6:6"
																},
																"nativeSrc": "2532:88:6",
																"nodeType": "YulFunctionCall",
																"src": "2532:88:6"
															},
															"nativeSrc": "2532:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "2532:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2636:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2636:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2639:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2639:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2629:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2629:6:6"
																},
																"nativeSrc": "2629:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2629:15:6"
															},
															"nativeSrc": "2629:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2629:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2660:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2660:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2663:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2663:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2653:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:6"
																},
																"nativeSrc": "2653:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2653:15:6"
															},
															"nativeSrc": "2653:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2653:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2490:184:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2490:184:6"
											},
											{
												"body": {
													"nativeSrc": "2727:77:6",
													"nodeType": "YulBlock",
													"src": "2727:77:6",
													"statements": [
														{
															"nativeSrc": "2737:16:6",
															"nodeType": "YulAssignment",
															"src": "2737:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2748:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2748:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2751:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2751:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2744:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2744:3:6"
																},
																"nativeSrc": "2744:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2744:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2737:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2737:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2776:22:6",
																"nodeType": "YulBlock",
																"src": "2776:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2778:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2778:16:6"
																			},
																			"nativeSrc": "2778:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2778:18:6"
																		},
																		"nativeSrc": "2778:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2778:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2768:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2768:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2771:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2771:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2765:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2765:2:6"
																},
																"nativeSrc": "2765:10:6",
																"nodeType": "YulFunctionCall",
																"src": "2765:10:6"
															},
															"nativeSrc": "2762:36:6",
															"nodeType": "YulIf",
															"src": "2762:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2679:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2710:1:6",
														"nodeType": "YulTypedName",
														"src": "2710:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2713:1:6",
														"nodeType": "YulTypedName",
														"src": "2713:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2719:3:6",
														"nodeType": "YulTypedName",
														"src": "2719:3:6",
														"type": ""
													}
												],
												"src": "2679:125:6"
											},
											{
												"body": {
													"nativeSrc": "2983:174:6",
													"nodeType": "YulBlock",
													"src": "2983:174:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3000:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3000:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3011:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3011:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2993:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:6"
																},
																"nativeSrc": "2993:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2993:21:6"
															},
															"nativeSrc": "2993:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "2993:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3034:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3034:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3045:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3045:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3030:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3030:3:6"
																		},
																		"nativeSrc": "3030:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3050:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3050:2:6",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3023:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3023:6:6"
																},
																"nativeSrc": "3023:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3023:30:6"
															},
															"nativeSrc": "3023:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3023:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3073:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3073:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3084:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3084:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3069:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3069:3:6"
																		},
																		"nativeSrc": "3069:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3069:18:6"
																	},
																	{
																		"hexValue": "4e6f20556e7374616b65205265717565737420466f756e64",
																		"kind": "string",
																		"nativeSrc": "3089:26:6",
																		"nodeType": "YulLiteral",
																		"src": "3089:26:6",
																		"type": "",
																		"value": "No Unstake Request Found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3062:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3062:6:6"
																},
																"nativeSrc": "3062:54:6",
																"nodeType": "YulFunctionCall",
																"src": "3062:54:6"
															},
															"nativeSrc": "3062:54:6",
															"nodeType": "YulExpressionStatement",
															"src": "3062:54:6"
														},
														{
															"nativeSrc": "3125:26:6",
															"nodeType": "YulAssignment",
															"src": "3125:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3137:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3137:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3148:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3148:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3133:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3133:3:6"
																},
																"nativeSrc": "3133:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3133:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3125:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3125:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2809:348:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2960:9:6",
														"nodeType": "YulTypedName",
														"src": "2960:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2974:4:6",
														"nodeType": "YulTypedName",
														"src": "2974:4:6",
														"type": ""
													}
												],
												"src": "2809:348:6"
											},
											{
												"body": {
													"nativeSrc": "3336:173:6",
													"nodeType": "YulBlock",
													"src": "3336:173:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3353:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3353:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3364:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3364:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3346:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3346:6:6"
																},
																"nativeSrc": "3346:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3346:21:6"
															},
															"nativeSrc": "3346:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3346:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3387:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3387:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3398:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3398:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3383:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3383:3:6"
																		},
																		"nativeSrc": "3383:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3383:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3403:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3403:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3376:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3376:6:6"
																},
																"nativeSrc": "3376:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3376:30:6"
															},
															"nativeSrc": "3376:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3376:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3426:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3426:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3437:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3437:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3422:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:6"
																		},
																		"nativeSrc": "3422:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3422:18:6"
																	},
																	{
																		"hexValue": "556e7374616b6520706572696f64206e6f74206f766572",
																		"kind": "string",
																		"nativeSrc": "3442:25:6",
																		"nodeType": "YulLiteral",
																		"src": "3442:25:6",
																		"type": "",
																		"value": "Unstake period not over"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3415:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3415:6:6"
																},
																"nativeSrc": "3415:53:6",
																"nodeType": "YulFunctionCall",
																"src": "3415:53:6"
															},
															"nativeSrc": "3415:53:6",
															"nodeType": "YulExpressionStatement",
															"src": "3415:53:6"
														},
														{
															"nativeSrc": "3477:26:6",
															"nodeType": "YulAssignment",
															"src": "3477:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3489:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3489:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3500:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3500:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3485:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3485:3:6"
																},
																"nativeSrc": "3485:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3485:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3477:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3477:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3162:347:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3313:9:6",
														"nodeType": "YulTypedName",
														"src": "3313:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3327:4:6",
														"nodeType": "YulTypedName",
														"src": "3327:4:6",
														"type": ""
													}
												],
												"src": "3162:347:6"
											},
											{
												"body": {
													"nativeSrc": "3643:168:6",
													"nodeType": "YulBlock",
													"src": "3643:168:6",
													"statements": [
														{
															"nativeSrc": "3653:26:6",
															"nodeType": "YulAssignment",
															"src": "3653:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3665:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3665:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3676:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3676:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3661:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3661:3:6"
																},
																"nativeSrc": "3661:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3661:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3653:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3653:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3695:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3695:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3710:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3710:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3718:42:6",
																				"nodeType": "YulLiteral",
																				"src": "3718:42:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3706:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3706:3:6"
																		},
																		"nativeSrc": "3706:55:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3706:55:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3688:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3688:6:6"
																},
																"nativeSrc": "3688:74:6",
																"nodeType": "YulFunctionCall",
																"src": "3688:74:6"
															},
															"nativeSrc": "3688:74:6",
															"nodeType": "YulExpressionStatement",
															"src": "3688:74:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3782:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3782:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3793:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3793:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3778:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3778:3:6"
																		},
																		"nativeSrc": "3778:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3778:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3798:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3798:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3771:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3771:6:6"
																},
																"nativeSrc": "3771:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3771:34:6"
															},
															"nativeSrc": "3771:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3771:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3514:297:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3604:9:6",
														"nodeType": "YulTypedName",
														"src": "3604:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3615:6:6",
														"nodeType": "YulTypedName",
														"src": "3615:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3623:6:6",
														"nodeType": "YulTypedName",
														"src": "3623:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3634:4:6",
														"nodeType": "YulTypedName",
														"src": "3634:4:6",
														"type": ""
													}
												],
												"src": "3514:297:6"
											},
											{
												"body": {
													"nativeSrc": "3894:199:6",
													"nodeType": "YulBlock",
													"src": "3894:199:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3940:16:6",
																"nodeType": "YulBlock",
																"src": "3940:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3949:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3949:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3952:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3952:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3942:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3942:6:6"
																			},
																			"nativeSrc": "3942:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3942:12:6"
																		},
																		"nativeSrc": "3942:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3942:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3915:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3915:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3924:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3924:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3911:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3911:3:6"
																		},
																		"nativeSrc": "3911:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3911:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3936:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3936:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3907:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3907:3:6"
																},
																"nativeSrc": "3907:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3907:32:6"
															},
															"nativeSrc": "3904:52:6",
															"nodeType": "YulIf",
															"src": "3904:52:6"
														},
														{
															"nativeSrc": "3965:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3965:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3984:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3984:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3978:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3978:5:6"
																},
																"nativeSrc": "3978:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3978:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3969:5:6",
																	"nodeType": "YulTypedName",
																	"src": "3969:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4047:16:6",
																"nodeType": "YulBlock",
																"src": "4047:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4056:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4056:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4059:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4059:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4049:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4049:6:6"
																			},
																			"nativeSrc": "4049:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4049:12:6"
																		},
																		"nativeSrc": "4049:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4049:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4016:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4016:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "4037:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "4037:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4030:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "4030:6:6"
																						},
																						"nativeSrc": "4030:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4030:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4023:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4023:6:6"
																				},
																				"nativeSrc": "4023:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4023:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4013:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4013:2:6"
																		},
																		"nativeSrc": "4013:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4013:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4006:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4006:6:6"
																},
																"nativeSrc": "4006:40:6",
																"nodeType": "YulFunctionCall",
																"src": "4006:40:6"
															},
															"nativeSrc": "4003:60:6",
															"nodeType": "YulIf",
															"src": "4003:60:6"
														},
														{
															"nativeSrc": "4072:15:6",
															"nodeType": "YulAssignment",
															"src": "4072:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "4082:5:6",
																"nodeType": "YulIdentifier",
																"src": "4082:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4072:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4072:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "3816:277:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3860:9:6",
														"nodeType": "YulTypedName",
														"src": "3860:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3871:7:6",
														"nodeType": "YulTypedName",
														"src": "3871:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3883:6:6",
														"nodeType": "YulTypedName",
														"src": "3883:6:6",
														"type": ""
													}
												],
												"src": "3816:277:6"
											},
											{
												"body": {
													"nativeSrc": "4272:236:6",
													"nodeType": "YulBlock",
													"src": "4272:236:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4289:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4289:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4300:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4300:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4282:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4282:6:6"
																},
																"nativeSrc": "4282:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4282:21:6"
															},
															"nativeSrc": "4282:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4282:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4323:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4323:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4334:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4334:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4319:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4319:3:6"
																		},
																		"nativeSrc": "4319:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4339:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4339:2:6",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4312:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4312:6:6"
																},
																"nativeSrc": "4312:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4312:30:6"
															},
															"nativeSrc": "4312:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4312:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4362:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4362:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4373:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4373:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4358:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4358:3:6"
																		},
																		"nativeSrc": "4358:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4358:18:6"
																	},
																	{
																		"hexValue": "546f6b656e205472616e73666572204661696c656420647572696e6720556e53",
																		"kind": "string",
																		"nativeSrc": "4378:34:6",
																		"nodeType": "YulLiteral",
																		"src": "4378:34:6",
																		"type": "",
																		"value": "Token Transfer Failed during UnS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4351:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4351:6:6"
																},
																"nativeSrc": "4351:62:6",
																"nodeType": "YulFunctionCall",
																"src": "4351:62:6"
															},
															"nativeSrc": "4351:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "4351:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4433:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4433:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4444:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4444:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4429:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4429:3:6"
																		},
																		"nativeSrc": "4429:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4429:18:6"
																	},
																	{
																		"hexValue": "74616b696e672050726f63657373",
																		"kind": "string",
																		"nativeSrc": "4449:16:6",
																		"nodeType": "YulLiteral",
																		"src": "4449:16:6",
																		"type": "",
																		"value": "taking Process"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4422:6:6"
																},
																"nativeSrc": "4422:44:6",
																"nodeType": "YulFunctionCall",
																"src": "4422:44:6"
															},
															"nativeSrc": "4422:44:6",
															"nodeType": "YulExpressionStatement",
															"src": "4422:44:6"
														},
														{
															"nativeSrc": "4475:27:6",
															"nodeType": "YulAssignment",
															"src": "4475:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4487:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4487:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4498:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4483:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:6"
																},
																"nativeSrc": "4483:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4483:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4475:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4475:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4098:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4249:9:6",
														"nodeType": "YulTypedName",
														"src": "4249:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4263:4:6",
														"nodeType": "YulTypedName",
														"src": "4263:4:6",
														"type": ""
													}
												],
												"src": "4098:410:6"
											},
											{
												"body": {
													"nativeSrc": "4687:174:6",
													"nodeType": "YulBlock",
													"src": "4687:174:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4704:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4704:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4715:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4715:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4697:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4697:6:6"
																},
																"nativeSrc": "4697:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4697:21:6"
															},
															"nativeSrc": "4697:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4697:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4738:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4738:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4749:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4749:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4734:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4734:3:6"
																		},
																		"nativeSrc": "4734:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4734:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4754:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4754:2:6",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4727:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4727:6:6"
																},
																"nativeSrc": "4727:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4727:30:6"
															},
															"nativeSrc": "4727:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4727:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4777:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4777:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4788:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4788:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4773:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4773:3:6"
																		},
																		"nativeSrc": "4773:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4773:18:6"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b65207a65726f20546f6b656e73",
																		"kind": "string",
																		"nativeSrc": "4793:26:6",
																		"nodeType": "YulLiteral",
																		"src": "4793:26:6",
																		"type": "",
																		"value": "Cannot stake zero Tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4766:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4766:6:6"
																},
																"nativeSrc": "4766:54:6",
																"nodeType": "YulFunctionCall",
																"src": "4766:54:6"
															},
															"nativeSrc": "4766:54:6",
															"nodeType": "YulExpressionStatement",
															"src": "4766:54:6"
														},
														{
															"nativeSrc": "4829:26:6",
															"nodeType": "YulAssignment",
															"src": "4829:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4841:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4841:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4852:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4852:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4837:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4837:3:6"
																},
																"nativeSrc": "4837:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4837:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4829:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4829:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4513:348:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4664:9:6",
														"nodeType": "YulTypedName",
														"src": "4664:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4678:4:6",
														"nodeType": "YulTypedName",
														"src": "4678:4:6",
														"type": ""
													}
												],
												"src": "4513:348:6"
											},
											{
												"body": {
													"nativeSrc": "4947:103:6",
													"nodeType": "YulBlock",
													"src": "4947:103:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4993:16:6",
																"nodeType": "YulBlock",
																"src": "4993:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5002:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5002:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5005:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5005:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4995:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4995:6:6"
																			},
																			"nativeSrc": "4995:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4995:12:6"
																		},
																		"nativeSrc": "4995:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4995:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4968:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4968:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4977:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4977:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4964:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4964:3:6"
																		},
																		"nativeSrc": "4964:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4964:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4989:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4989:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4960:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4960:3:6"
																},
																"nativeSrc": "4960:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4960:32:6"
															},
															"nativeSrc": "4957:52:6",
															"nodeType": "YulIf",
															"src": "4957:52:6"
														},
														{
															"nativeSrc": "5018:26:6",
															"nodeType": "YulAssignment",
															"src": "5018:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5034:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5034:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5028:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5028:5:6"
																},
																"nativeSrc": "5028:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5028:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5018:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5018:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4866:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4913:9:6",
														"nodeType": "YulTypedName",
														"src": "4913:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4924:7:6",
														"nodeType": "YulTypedName",
														"src": "4924:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4936:6:6",
														"nodeType": "YulTypedName",
														"src": "4936:6:6",
														"type": ""
													}
												],
												"src": "4866:184:6"
											},
											{
												"body": {
													"nativeSrc": "5229:170:6",
													"nodeType": "YulBlock",
													"src": "5229:170:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5246:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5246:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5257:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5257:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5239:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5239:6:6"
																},
																"nativeSrc": "5239:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5239:21:6"
															},
															"nativeSrc": "5239:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5239:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5280:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5280:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5291:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5291:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5276:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5276:3:6"
																		},
																		"nativeSrc": "5276:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5276:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5296:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5269:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5269:6:6"
																},
																"nativeSrc": "5269:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5269:30:6"
															},
															"nativeSrc": "5269:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5269:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5319:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5319:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5330:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5330:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5315:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5315:3:6"
																		},
																		"nativeSrc": "5315:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5315:18:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e742042616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5335:22:6",
																		"nodeType": "YulLiteral",
																		"src": "5335:22:6",
																		"type": "",
																		"value": "Insufficient Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5308:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5308:6:6"
																},
																"nativeSrc": "5308:50:6",
																"nodeType": "YulFunctionCall",
																"src": "5308:50:6"
															},
															"nativeSrc": "5308:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "5308:50:6"
														},
														{
															"nativeSrc": "5367:26:6",
															"nodeType": "YulAssignment",
															"src": "5367:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5379:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5379:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5390:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5390:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5375:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5375:3:6"
																},
																"nativeSrc": "5375:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5375:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5367:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5367:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5055:344:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5206:9:6",
														"nodeType": "YulTypedName",
														"src": "5206:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5220:4:6",
														"nodeType": "YulTypedName",
														"src": "5220:4:6",
														"type": ""
													}
												],
												"src": "5055:344:6"
											},
											{
												"body": {
													"nativeSrc": "5561:260:6",
													"nodeType": "YulBlock",
													"src": "5561:260:6",
													"statements": [
														{
															"nativeSrc": "5571:26:6",
															"nodeType": "YulAssignment",
															"src": "5571:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5583:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5583:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5594:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5594:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5579:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5579:3:6"
																},
																"nativeSrc": "5579:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5579:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5571:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5571:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5613:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5613:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5628:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5628:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5636:42:6",
																				"nodeType": "YulLiteral",
																				"src": "5636:42:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5624:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5624:3:6"
																		},
																		"nativeSrc": "5624:55:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5624:55:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5606:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5606:6:6"
																},
																"nativeSrc": "5606:74:6",
																"nodeType": "YulFunctionCall",
																"src": "5606:74:6"
															},
															"nativeSrc": "5606:74:6",
															"nodeType": "YulExpressionStatement",
															"src": "5606:74:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5700:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5700:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5711:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5711:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5696:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5696:3:6"
																		},
																		"nativeSrc": "5696:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5696:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5720:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5720:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5728:42:6",
																				"nodeType": "YulLiteral",
																				"src": "5728:42:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5716:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5716:3:6"
																		},
																		"nativeSrc": "5716:55:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5716:55:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5689:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5689:6:6"
																},
																"nativeSrc": "5689:83:6",
																"nodeType": "YulFunctionCall",
																"src": "5689:83:6"
															},
															"nativeSrc": "5689:83:6",
															"nodeType": "YulExpressionStatement",
															"src": "5689:83:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5792:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5792:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5803:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5803:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5788:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5788:3:6"
																		},
																		"nativeSrc": "5788:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5788:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5808:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5808:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5781:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5781:6:6"
																},
																"nativeSrc": "5781:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5781:34:6"
															},
															"nativeSrc": "5781:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5781:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5404:417:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5514:9:6",
														"nodeType": "YulTypedName",
														"src": "5514:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5525:6:6",
														"nodeType": "YulTypedName",
														"src": "5525:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5533:6:6",
														"nodeType": "YulTypedName",
														"src": "5533:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5541:6:6",
														"nodeType": "YulTypedName",
														"src": "5541:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5552:4:6",
														"nodeType": "YulTypedName",
														"src": "5552:4:6",
														"type": ""
													}
												],
												"src": "5404:417:6"
											},
											{
												"body": {
													"nativeSrc": "6000:165:6",
													"nodeType": "YulBlock",
													"src": "6000:165:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6017:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6017:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6028:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6028:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6010:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6010:6:6"
																},
																"nativeSrc": "6010:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6010:21:6"
															},
															"nativeSrc": "6010:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6010:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6051:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6051:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6062:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6062:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6047:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6047:3:6"
																		},
																		"nativeSrc": "6047:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6047:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6067:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6067:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6040:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6040:6:6"
																},
																"nativeSrc": "6040:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6040:30:6"
															},
															"nativeSrc": "6040:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6040:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6090:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6090:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6101:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6101:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6086:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6086:3:6"
																		},
																		"nativeSrc": "6086:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6086:18:6"
																	},
																	{
																		"hexValue": "5472616e73666572204661696c6564",
																		"kind": "string",
																		"nativeSrc": "6106:17:6",
																		"nodeType": "YulLiteral",
																		"src": "6106:17:6",
																		"type": "",
																		"value": "Transfer Failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6079:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6079:6:6"
																},
																"nativeSrc": "6079:45:6",
																"nodeType": "YulFunctionCall",
																"src": "6079:45:6"
															},
															"nativeSrc": "6079:45:6",
															"nodeType": "YulExpressionStatement",
															"src": "6079:45:6"
														},
														{
															"nativeSrc": "6133:26:6",
															"nodeType": "YulAssignment",
															"src": "6133:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6145:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6145:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6156:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6156:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6141:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6141:3:6"
																},
																"nativeSrc": "6141:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6141:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6133:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6133:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5826:339:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5977:9:6",
														"nodeType": "YulTypedName",
														"src": "5977:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5991:4:6",
														"nodeType": "YulTypedName",
														"src": "5991:4:6",
														"type": ""
													}
												],
												"src": "5826:339:6"
											},
											{
												"body": {
													"nativeSrc": "6344:181:6",
													"nodeType": "YulBlock",
													"src": "6344:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6361:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6361:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6372:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6372:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6354:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6354:6:6"
																},
																"nativeSrc": "6354:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6354:21:6"
															},
															"nativeSrc": "6354:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6354:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6395:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6395:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6406:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6406:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6391:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6391:3:6"
																		},
																		"nativeSrc": "6391:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6391:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6411:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6411:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6384:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6384:6:6"
																},
																"nativeSrc": "6384:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6384:30:6"
															},
															"nativeSrc": "6384:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6384:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6434:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6434:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6445:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6445:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6430:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6430:3:6"
																		},
																		"nativeSrc": "6430:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6430:18:6"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "6450:33:6",
																		"nodeType": "YulLiteral",
																		"src": "6450:33:6",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6423:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6423:6:6"
																},
																"nativeSrc": "6423:61:6",
																"nodeType": "YulFunctionCall",
																"src": "6423:61:6"
															},
															"nativeSrc": "6423:61:6",
															"nodeType": "YulExpressionStatement",
															"src": "6423:61:6"
														},
														{
															"nativeSrc": "6493:26:6",
															"nodeType": "YulAssignment",
															"src": "6493:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6505:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6505:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6516:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6516:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6501:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6501:3:6"
																},
																"nativeSrc": "6501:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6501:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6493:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6493:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6170:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6321:9:6",
														"nodeType": "YulTypedName",
														"src": "6321:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6335:4:6",
														"nodeType": "YulTypedName",
														"src": "6335:4:6",
														"type": ""
													}
												],
												"src": "6170:355:6"
											},
											{
												"body": {
													"nativeSrc": "6579:79:6",
													"nodeType": "YulBlock",
													"src": "6579:79:6",
													"statements": [
														{
															"nativeSrc": "6589:17:6",
															"nodeType": "YulAssignment",
															"src": "6589:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6601:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6601:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6604:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6604:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6597:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6597:3:6"
																},
																"nativeSrc": "6597:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6597:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6589:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6589:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6630:22:6",
																"nodeType": "YulBlock",
																"src": "6630:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6632:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6632:16:6"
																			},
																			"nativeSrc": "6632:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6632:18:6"
																		},
																		"nativeSrc": "6632:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6632:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6621:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6621:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6627:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6627:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6618:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6618:2:6"
																},
																"nativeSrc": "6618:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6618:11:6"
															},
															"nativeSrc": "6615:37:6",
															"nodeType": "YulIf",
															"src": "6615:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6530:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6561:1:6",
														"nodeType": "YulTypedName",
														"src": "6561:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6564:1:6",
														"nodeType": "YulTypedName",
														"src": "6564:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6570:4:6",
														"nodeType": "YulTypedName",
														"src": "6570:4:6",
														"type": ""
													}
												],
												"src": "6530:128:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Cannot Unstake zero tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Insufficient staked balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Unstake Already in Process\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"No Unstake Request Found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Unstake period not over\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Token Transfer Failed during UnS\")\n        mstore(add(headStart, 96), \"taking Process\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Cannot stake zero Tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient Balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer Failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"648": [
									{
										"length": 32,
										"start": 554
									},
									{
										"length": 32,
										"start": 1305
									},
									{
										"length": 32,
										"start": 1755
									},
									{
										"length": 32,
										"start": 2007
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100da575f3560e01c8063817b1cd211610088578063a694fc3a11610063578063a694fc3a146101d7578063bb4d4436146101ea578063f2fde38b14610212578063f96dae0a14610225575f80fd5b8063817b1cd2146101845780638da5cb5b1461018d578063a0873111146101b1575f80fd5b806360217267116100b85780636021726714610145578063715018a61461017257806379b578621461017a575f80fd5b806318fb4f32146100de5780633b64916e146100f35780633ccfd60b1461013d575b5f80fd5b6100f16100ec366004610a79565b61024c565b005b610123610101366004610a90565b6001600160a01b03165f90815260046020526040902080546001909101549091565b604080519283526020830191909152015b60405180910390f35b6100f161041f565b610164610153366004610a90565b60026020525f908152604090205481565b604051908152602001610134565b6100f1610643565b61016462093a8081565b61016460035481565b5f546001600160a01b03165b6040516001600160a01b039091168152602001610134565b6101236101bf366004610a90565b60046020525f90815260409020805460019091015482565b6100f16101e5366004610a79565b610654565b6101646101f8366004610a90565b6001600160a01b03165f9081526002602052604090205490565b6100f1610220366004610a90565b610902565b6101997f000000000000000000000000000000000000000000000000000000000000000081565b610254610955565b5f81116102a85760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f7420556e7374616b65207a65726f20746f6b656e7300000000000060448201526064015b60405180910390fd5b335f908152600260205260409020548111156103065760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e74207374616b65642062616c616e63650000000000604482015260640161029f565b335f90815260046020526040902054156103625760405162461bcd60e51b815260206004820152601a60248201527f556e7374616b6520416c726561647920696e2050726f63657373000000000000604482015260640161029f565b335f9081526002602052604090205461037b90826109ae565b335f9081526002602052604090205560035461039790826109ae565b6003555f6103a862093a8042610aea565b6040805180820182528481526020808201848152335f818152600484528590209351845590516001909301929092558251868152908101849052929350917f9cee5eacd317086e5050733a5dad16ef5aaec185de792371a9625bfee2a3213b91015b60405180910390a25061041c60018055565b50565b610427610955565b335f90815260046020526040902080546104835760405162461bcd60e51b815260206004820152601860248201527f4e6f20556e7374616b65205265717565737420466f756e640000000000000000604482015260640161029f565b80600101544210156104d75760405162461bcd60e51b815260206004820152601760248201527f556e7374616b6520706572696f64206e6f74206f766572000000000000000000604482015260640161029f565b80545f808355600183018190556040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303815f875af1158015610567573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061058b9190610afd565b9050806106005760405162461bcd60e51b815260206004820152602e60248201527f546f6b656e205472616e73666572204661696c656420647572696e6720556e5360448201527f74616b696e672050726f63657373000000000000000000000000000000000000606482015260840161029f565b60405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a250505061064160018055565b565b61064b6109c2565b6106415f610a07565b61065c610955565b5f81116106ab5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f74207374616b65207a65726f20546f6b656e730000000000000000604482015260640161029f565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610728573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061074c9190610b1c565b101561079a5760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742042616c616e6365000000000000000000000000604482015260640161029f565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018290525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303815f875af1158015610825573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108499190610afd565b9050806108985760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572204661696c65640000000000000000000000000000000000604482015260640161029f565b335f908152600260205260409020546108b19083610a6e565b335f908152600260205260409020556003546108cd9083610a6e565b60035560405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200161040a565b61090a6109c2565b6001600160a01b03811661094c576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f600482015260240161029f565b61041c81610a07565b6002600154036109a75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161029f565b6002600155565b5f6109b98284610b33565b90505b92915050565b5f546001600160a01b03163314610641576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161029f565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f6109b98284610aea565b5f60208284031215610a89575f80fd5b5035919050565b5f60208284031215610aa0575f80fd5b81356001600160a01b0381168114610ab6575f80fd5b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b808201808211156109bc576109bc610abd565b5f60208284031215610b0d575f80fd5b81518015158114610ab6575f80fd5b5f60208284031215610b2c575f80fd5b5051919050565b818103818111156109bc576109bc610abd56fea264697066735822122094d8dd9c8dc80333cbbcda28d474c7fe88ff6bcfed5f025f6f85248266179f4b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xBB4D4436 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xF96DAE0A EQ PUSH2 0x225 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xA0873111 EQ PUSH2 0x1B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x60217267 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0x60217267 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x79B57862 EQ PUSH2 0x17A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18FB4F32 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x3B64916E EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x13D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF1 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0x41F JUMP JUMPDEST PUSH2 0x164 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x643 JUMP JUMPDEST PUSH2 0x164 PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH2 0x164 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x902 JUMP JUMPDEST PUSH2 0x199 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x955 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x2A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420556E7374616B65207A65726F20746F6B656E73000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x362 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B6520416C726561647920696E2050726F63657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x37B SWAP1 DUP3 PUSH2 0x9AE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0x397 SWAP1 DUP3 PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH0 PUSH2 0x3A8 PUSH3 0x93A80 TIMESTAMP PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP5 MSTORE DUP6 SWAP1 KECCAK256 SWAP4 MLOAD DUP5 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 PUSH32 0x9CEE5EACD317086E5050733A5DAD16EF5AAEC185DE792371A9625BFEE2A3213B SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x41C PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x427 PUSH2 0x955 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20556E7374616B65205265717565737420466F756E640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B6520706572696F64206E6F74206F766572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST DUP1 SLOAD PUSH0 DUP1 DUP4 SSTORE PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x567 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0xAFD JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x600 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E205472616E73666572204661696C656420647572696E6720556E53 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74616B696E672050726F63657373000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x641 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x64B PUSH2 0x9C2 JUMP JUMPDEST PUSH2 0x641 PUSH0 PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x65C PUSH2 0x955 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x6AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207374616B65207A65726F20546F6B656E730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x728 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0xB1C JUMP JUMPDEST LT ISZERO PUSH2 0x79A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x825 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x849 SWAP2 SWAP1 PUSH2 0xAFD JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572204661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x8B1 SWAP1 DUP4 PUSH2 0xA6E JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0x8CD SWAP1 DUP4 PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH1 0x20 ADD PUSH2 0x40A JUMP JUMPDEST PUSH2 0x90A PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x94C JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29F JUMP JUMPDEST PUSH2 0x41C DUP2 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x9A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x9B9 DUP3 DUP5 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x641 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x29F JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9B9 DUP3 DUP5 PUSH2 0xAEA JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x9BC JUMPI PUSH2 0x9BC PUSH2 0xABD JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB0D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB2C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x9BC JUMPI PUSH2 0x9BC PUSH2 0xABD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xD8 0xDD SWAP13 DUP14 0xC8 SUB CALLER 0xCB 0xBC 0xDA 0x28 0xD4 PUSH21 0xC7FE88FF6BCFED5F025F6F85248266179F4B64736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "291:4694:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2546:757;;;;;;:::i;:::-;;:::i;:::-;;4751:230;;;;;;:::i;:::-;-1:-1:-1;;;;;4895:26:5;4819:14;4895:26;;;:16;:26;;;;;4939:14;;4955:18;;;;;4939:14;;4751:230;;;;;687:25:6;;;743:2;728:18;;721:34;;;;660:18;4751:230:5;;;;;;;;3477:662;;;:::i;429:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;912:25:6;;;900:2;885:18;429:48:5;766:177:6;2293:101:0;;;:::i;721:47:5:-;;762:6;721:47;;483:23;;;;;;1638:85:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;1112:55:6;;;1094:74;;1082:2;1067:18;1638:85:0;948:226:6;659:55:5;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1657:610;;;;;;:::i;:::-;;:::i;4374:120::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4464:23:5;4438:7;4464:23;;;:13;:23;;;;;;;4374:120;2543:215:0;;;;;;:::i;:::-;;:::i;383:39:5:-;;;;;2546:757;2261:21:1;:19;:21::i;:::-;2640:1:5::1;2630:7;:11;2622:50;;;::::0;-1:-1:-1;;;2622:50:5;;1626:2:6;2622:50:5::1;::::0;::::1;1608:21:6::0;1665:2;1645:18;;;1638:30;1704:28;1684:18;;;1677:56;1750:18;;2622:50:5::1;;;;;;;;;2704:10;2690:25;::::0;;;:13:::1;:25;::::0;;;;;:36;-1:-1:-1;2690:36:5::1;2682:76;;;::::0;-1:-1:-1;;;2682:76:5;;1981:2:6;2682:76:5::1;::::0;::::1;1963:21:6::0;2020:2;2000:18;;;1993:30;2059:29;2039:18;;;2032:57;2106:18;;2682:76:5::1;1779:351:6::0;2682:76:5::1;2793:10;2776:28;::::0;;;:16:::1;:28;::::0;;;;:35;:40;2768:79:::1;;;::::0;-1:-1:-1;;;2768:79:5;;2337:2:6;2768:79:5::1;::::0;::::1;2319:21:6::0;2376:2;2356:18;;;2349:30;2415:28;2395:18;;;2388:56;2461:18;;2768:79:5::1;2135:350:6::0;2768:79:5::1;2936:10;2922:25;::::0;;;:13:::1;:25;::::0;;;;;:38:::1;::::0;2952:7;2922:29:::1;:38::i;:::-;2908:10;2894:25;::::0;;;:13:::1;:25;::::0;;;;:66;2984:11:::1;::::0;:24:::1;::::0;3000:7;2984:15:::1;:24::i;:::-;2970:11;:38:::0;3049:18:::1;3070:32;762:6;3070:15;:32;:::i;:::-;3143:88;::::0;;;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;3129:10:::1;-1:-1:-1::0;3112:28:5;;;:16:::1;:28:::0;;;;;:119;;;;;;::::1;::::0;;::::1;::::0;;;;3247:49;;687:25:6;;;728:18;;;721:34;;;3143:88:5;;-1:-1:-1;3129:10:5;3247:49:::1;::::0;660:18:6;3247:49:5::1;;;;;;;;2612:691;2303:20:1::0;1716:1;2809:22;;2629:209;2303:20;2546:757:5;:::o;3477:662::-;2261:21:1;:19;:21::i;:::-;3576:10:5::1;3529:27;3559:28:::0;;;:16:::1;:28;::::0;;;;3605:14;;3597:55:::1;;;::::0;-1:-1:-1;;;3597:55:5;;3011:2:6;3597:55:5::1;::::0;::::1;2993:21:6::0;3050:2;3030:18;;;3023:30;3089:26;3069:18;;;3062:54;3133:18;;3597:55:5::1;2809:348:6::0;3597:55:5::1;3689:7;:18;;;3670:15;:37;;3662:73;;;::::0;-1:-1:-1;;;3662:73:5;;3364:2:6;3662:73:5::1;::::0;::::1;3346:21:6::0;3403:2;3383:18;;;3376:30;3442:25;3422:18;;;3415:53;3485:18;;3662:73:5::1;3162:347:6::0;3662:73:5::1;3773:14:::0;;3746:24:::1;3851:18:::0;;;-1:-1:-1;3879:18:5;::::1;:22:::0;;;3947:54:::1;::::0;;;;3972:10:::1;3947:54;::::0;::::1;3688:74:6::0;3778:18;;;3771:34;;;3947:15:5::1;-1:-1:-1::0;;;;;3947:24:5::1;::::0;::::1;::::0;3661:18:6;;3947:54:5::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3932:69;;4019:7;4011:66;;;::::0;-1:-1:-1;;;4011:66:5;;4300:2:6;4011:66:5::1;::::0;::::1;4282:21:6::0;4339:2;4319:18;;;4312:30;4378:34;4358:18;;;4351:62;4449:16;4429:18;;;4422:44;4483:19;;4011:66:5::1;4098:410:6::0;4011:66:5::1;4093:38;::::0;912:25:6;;;4102:10:5::1;::::0;4093:38:::1;::::0;900:2:6;885:18;4093:38:5::1;;;;;;;3519:620;;;2303:20:1::0;1716:1;2809:22;;2629:209;2303:20;3477:662:5:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;1657:610:5:-:0;2261:21:1;:19;:21::i;:::-;1739:1:5::1;1729:7;:11;1721:48;;;::::0;-1:-1:-1;;;1721:48:5;;4715:2:6;1721:48:5::1;::::0;::::1;4697:21:6::0;4754:2;4734:18;;;4727:30;4793:26;4773:18;;;4766:54;4837:18;;1721:48:5::1;4513:348:6::0;1721:48:5::1;1787:37;::::0;;;;1813:10:::1;1787:37;::::0;::::1;1094:74:6::0;1828:7:5;;1787:15:::1;-1:-1:-1::0;;;;;1787:25:5::1;::::0;::::1;::::0;1067:18:6;;1787:37:5::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;1779:81;;;::::0;-1:-1:-1;;;1779:81:5;;5257:2:6;1779:81:5::1;::::0;::::1;5239:21:6::0;5296:2;5276:18;;;5269:30;5335:22;5315:18;;;5308:50;5375:18;;1779:81:5::1;5055:344:6::0;1779:81:5::1;1947:64;::::0;;;;1976:10:::1;1947:64;::::0;::::1;5606:74:6::0;1996:4:5::1;5696:18:6::0;;;5689:83;5788:18;;;5781:34;;;1932:12:5::1;::::0;1947:15:::1;-1:-1:-1::0;;;;;1947:28:5::1;::::0;::::1;::::0;5579:18:6;;1947:64:5::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1932:79;;2029:7;2021:35;;;::::0;-1:-1:-1;;;2021:35:5;;6028:2:6;2021:35:5::1;::::0;::::1;6010:21:6::0;6067:2;6047:18;;;6040:30;6106:17;6086:18;;;6079:45;6141:18;;2021:35:5::1;5826:339:6::0;2021:35:5::1;2145:10;2131:25;::::0;;;:13:::1;:25;::::0;;;;;:38:::1;::::0;2161:7;2131:29:::1;:38::i;:::-;2117:10;2103:25;::::0;;;:13:::1;:25;::::0;;;;:66;2193:11:::1;::::0;:24:::1;::::0;2209:7;2193:15:::1;:24::i;:::-;2179:11;:38:::0;2233:27:::1;::::0;912:25:6;;;2240:10:5::1;::::0;2233:27:::1;::::0;900:2:6;885:18;2233:27:5::1;766:177:6::0;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;::::1;::::0;;2700:1:::1;2672:31;::::0;::::1;1094:74:6::0;1067:18;;2672:31:0::1;948:226:6::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;2336:287:1:-:0;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:1;;6372:2:6;2460:63:1;;;6354:21:6;6411:2;6391:18;;;6384:30;6450:33;6430:18;;;6423:61;6501:18;;2460:63:1;6170:355:6;2460:63:1;1759:1;2598:7;:18;2336:287::o;3122:96:4:-;3180:7;3206:5;3210:1;3206;:5;:::i;:::-;3199:12;;3122:96;;;;;:::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:3;1855:23:0;1851:101;;1901:40;;;;;735:10:3;1901:40:0;;;1094:74:6;1067:18;;1901:40:0;948:226:6;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;;;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;2755:96:4:-;2813:7;2839:5;2843:1;2839;:5;:::i;14:180:6:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:6;;14:180;-1:-1:-1;14:180:6:o;199:309::-;258:6;311:2;299:9;290:7;286:23;282:32;279:52;;;327:1;324;317:12;279:52;366:9;353:23;-1:-1:-1;;;;;409:5:6;405:54;398:5;395:65;385:93;;474:1;471;464:12;385:93;497:5;199:309;-1:-1:-1;;;199:309:6:o;2490:184::-;2542:77;2539:1;2532:88;2639:4;2636:1;2629:15;2663:4;2660:1;2653:15;2679:125;2744:9;;;2765:10;;;2762:36;;;2778:18;;:::i;3816:277::-;3883:6;3936:2;3924:9;3915:7;3911:23;3907:32;3904:52;;;3952:1;3949;3942:12;3904:52;3984:9;3978:16;4037:5;4030:13;4023:21;4016:5;4013:32;4003:60;;4059:1;4056;4049:12;4866:184;4936:6;4989:2;4977:9;4968:7;4964:23;4960:32;4957:52;;;5005:1;5002;4995:12;4957:52;-1:-1:-1;5028:16:6;;4866:184;-1:-1:-1;4866:184:6:o;6530:128::-;6597:9;;;6618:11;;;6615:37;;;6632:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "588000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UNSTAKE_PERIOD()": "261",
								"getUnstakedRequest(address)": "4676",
								"getVotingPower(address)": "2543",
								"governanceToken()": "infinite",
								"initiateUnstaking(uint256)": "infinite",
								"owner()": "2363",
								"renounceOwnership()": "infinite",
								"stake(uint256)": "infinite",
								"stakedBalance(address)": "2504",
								"totalStaked()": "2317",
								"transferOwnership(address)": "28345",
								"unstakingRequest(address)": "4676",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 291,
									"end": 4985,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 291,
									"end": 4985,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 291,
									"end": 4985,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1213,
									"end": 1432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1213,
									"end": 1432,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 1292,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 640,
									"end": 691,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 613,
									"end": 631,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 613,
									"end": 631,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1312,
									"end": 1339,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1312,
									"end": 1339,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1304,
									"end": 1376,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1376,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 904,
									"end": 906,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1304,
									"end": 1376,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 886,
									"end": 907,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 886,
									"end": 907,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 886,
									"end": 907,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 923,
									"end": 941,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 923,
									"end": 941,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 916,
									"end": 946,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 982,
									"end": 1016,
									"name": "PUSH",
									"source": 6,
									"value": "54686520546F6B656E20616464726573732063616E6E6F74206265207A65726F"
								},
								{
									"begin": 962,
									"end": 980,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 962,
									"end": 980,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 962,
									"end": 980,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 955,
									"end": 1017,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1034,
									"end": 1052,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1034,
									"end": 1052,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 702,
									"end": 1058,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1304,
									"end": 1376,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1386,
									"end": 1425,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1425,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1386,
									"end": 1425,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 291,
									"end": 4985,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 291,
									"end": 4985,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 702,
									"end": 1058,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 702,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 291,
									"end": 4985,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 291,
									"end": 4985,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 291,
									"end": 4985,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 291,
									"end": 4985,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 291,
									"end": 4985,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 4985,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 291,
									"end": 4985,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 4985,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "648"
								},
								{
									"begin": 291,
									"end": 4985,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 291,
									"end": 4985,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 4985,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122094d8dd9c8dc80333cbbcda28d474c7fe88ff6bcfed5f025f6f85248266179f4b64736f6c634300081a0033",
									".code": [
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "817B1CD2"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "A694FC3A"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "A694FC3A"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "BB4D4436"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "F96DAE0A"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "817B1CD2"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "A0873111"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "60217267"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "60217267"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "79B57862"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "18FB4F32"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "3B64916E"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "3CCFD60B"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 291,
											"end": 4985,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2546,
											"end": 3303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2546,
											"end": 3303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4751,
											"end": 4981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4895,
											"end": 4921,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4819,
											"end": 4833,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4895,
											"end": 4921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4895,
											"end": 4921,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4895,
											"end": 4921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4895,
											"end": 4911,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4895,
											"end": 4921,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4895,
											"end": 4921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4895,
											"end": 4921,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4895,
											"end": 4921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4895,
											"end": 4921,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4939,
											"end": 4953,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4939,
											"end": 4953,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4955,
											"end": 4973,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4955,
											"end": 4973,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4955,
											"end": 4973,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4955,
											"end": 4973,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4955,
											"end": 4973,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4939,
											"end": 4953,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4939,
											"end": 4953,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 687,
											"end": 712,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 687,
											"end": 712,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 687,
											"end": 712,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 743,
											"end": 745,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 728,
											"end": 746,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 728,
											"end": 746,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 721,
											"end": 755,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 721,
											"end": 755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 755,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 721,
											"end": 755,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 660,
											"end": 678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4981,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 4139,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3477,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 3477,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 3477,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 429,
											"end": 477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 477,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 912,
											"end": 937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 912,
											"end": 937,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 900,
											"end": 902,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 885,
											"end": 903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 429,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 766,
											"end": 943,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 721,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 721,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 721,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 762,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "93A80"
										},
										{
											"begin": 721,
											"end": 768,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 721,
											"end": 768,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 506,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 483,
											"end": 506,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1112,
											"end": 1167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1167,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1167,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1168,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1168,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1084,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 948,
											"end": 1174,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 659,
											"end": 714,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 659,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 659,
											"end": 714,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1657,
											"end": 2267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1657,
											"end": 2267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4494,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 4374,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 4374,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4374,
											"end": 4494,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4494,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4374,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4374,
											"end": 4494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4494,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4374,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4464,
											"end": 4487,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4438,
											"end": 4445,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4487,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4487,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4477,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4464,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4464,
											"end": 4487,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4464,
											"end": 4487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4487,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4487,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4494,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 422,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 383,
											"end": 422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 383,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 383,
											"end": 422,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "648"
										},
										{
											"begin": 383,
											"end": 422,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 383,
											"end": 422,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2641,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2622,
											"end": 2672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2622,
											"end": 2672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1628,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2622,
											"end": 2672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1629,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 1667,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 1645,
											"end": 1663,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1645,
											"end": 1663,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1668,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1704,
											"end": 1732,
											"name": "PUSH",
											"source": 6,
											"value": "43616E6E6F7420556E7374616B65207A65726F20746F6B656E73000000000000"
										},
										{
											"begin": 1684,
											"end": 1702,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1684,
											"end": 1702,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1702,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1733,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1750,
											"end": 1768,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1750,
											"end": 1768,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2622,
											"end": 2672,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2714,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2690,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 2690,
											"end": 2726,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2758,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2682,
											"end": 2758,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 1983,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2682,
											"end": 2758,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 1984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E74207374616B65642062616C616E63650000000000"
										},
										{
											"begin": 2039,
											"end": 2057,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2039,
											"end": 2057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2039,
											"end": 2057,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2089,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1779,
											"end": 2130,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2682,
											"end": 2758,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2803,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2804,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2804,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2776,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2776,
											"end": 2804,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2804,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2804,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2811,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2816,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2768,
											"end": 2847,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2768,
											"end": 2847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2339,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2768,
											"end": 2847,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2340,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2376,
											"end": 2378,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 2356,
											"end": 2374,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2356,
											"end": 2374,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2374,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2379,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2443,
											"name": "PUSH",
											"source": 6,
											"value": "556E7374616B6520416C726561647920696E2050726F63657373000000000000"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2444,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2479,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2461,
											"end": 2479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2135,
											"end": 2485,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2768,
											"end": 2847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 2946,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2947,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2922,
											"end": 2947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2922,
											"end": 2947,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2947,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2947,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2947,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2922,
											"end": 2960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2959,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2951,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2922,
											"end": 2960,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2960,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2922,
											"end": 2960,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2908,
											"end": 2918,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2919,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2894,
											"end": 2919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2894,
											"end": 2919,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2894,
											"end": 2919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2919,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2960,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2984,
											"end": 2995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2984,
											"end": 2995,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2984,
											"end": 3008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2984,
											"end": 3008,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3007,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2984,
											"end": 2999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2984,
											"end": 3008,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2984,
											"end": 3008,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2984,
											"end": 3008,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2970,
											"end": 3008,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3049,
											"end": 3067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 762,
											"end": 768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "93A80"
										},
										{
											"begin": 3070,
											"end": 3085,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3070,
											"end": 3102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3070,
											"end": 3102,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3070,
											"end": 3102,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3070,
											"end": 3102,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3231,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3143,
											"end": 3231,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3129,
											"end": 3139,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3112,
											"end": 3140,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3140,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3140,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3112,
											"end": 3140,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3140,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3140,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3140,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3140,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3112,
											"end": 3231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3231,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 687,
											"end": 712,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 687,
											"end": 712,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 687,
											"end": 712,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 728,
											"end": 746,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 728,
											"end": 746,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 721,
											"end": 755,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 721,
											"end": 755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 721,
											"end": 755,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3231,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3231,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3129,
											"end": 3139,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9CEE5EACD317086E5050733A5DAD16EF5AAEC185DE792371A9625BFEE2A3213B"
										},
										{
											"begin": 3247,
											"end": 3296,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 660,
											"end": 678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3296,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2612,
											"end": 3303,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 3303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 3303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 4139,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 3477,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3586,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3529,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3587,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3587,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3559,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3559,
											"end": 3587,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3587,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3559,
											"end": 3587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3587,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3605,
											"end": 3619,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3605,
											"end": 3619,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3652,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3597,
											"end": 3652,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3013,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3652,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3052,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3030,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3030,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3030,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3053,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3115,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F20556E7374616B65205265717565737420466F756E640000000000000000"
										},
										{
											"begin": 3069,
											"end": 3087,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3069,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3062,
											"end": 3116,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2809,
											"end": 3157,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3597,
											"end": 3652,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3696,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3689,
											"end": 3707,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3707,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3670,
											"end": 3685,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3670,
											"end": 3707,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3670,
											"end": 3707,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3662,
											"end": 3735,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3662,
											"end": 3735,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3364,
											"end": 3366,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3662,
											"end": 3735,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3406,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3467,
											"name": "PUSH",
											"source": 6,
											"value": "556E7374616B6520706572696F64206E6F74206F766572000000000000000000"
										},
										{
											"begin": 3422,
											"end": 3440,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3422,
											"end": 3440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3422,
											"end": 3440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3468,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3162,
											"end": 3509,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3662,
											"end": 3735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3787,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3787,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3746,
											"end": 3770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 3879,
											"end": 3897,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3879,
											"end": 3897,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3879,
											"end": 3901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3879,
											"end": 3901,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3879,
											"end": 3901,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3947,
											"end": 4001,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3947,
											"end": 4001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 3982,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3947,
											"end": 4001,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3762,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3805,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3947,
											"end": 3962,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "648"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3947,
											"end": 3971,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 3971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 3971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 3947,
											"end": 3971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 4001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3947,
											"end": 4001,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3947,
											"end": 4001,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 4001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 4001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4019,
											"end": 4026,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4011,
											"end": 4077,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4011,
											"end": 4077,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4300,
											"end": 4302,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4011,
											"end": 4077,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4282,
											"end": 4303,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4339,
											"end": 4341,
											"name": "PUSH",
											"source": 6,
											"value": "2E"
										},
										{
											"begin": 4319,
											"end": 4337,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4319,
											"end": 4337,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4342,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E205472616E73666572204661696C656420647572696E6720556E53"
										},
										{
											"begin": 4358,
											"end": 4376,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4358,
											"end": 4376,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4376,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4413,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4449,
											"end": 4465,
											"name": "PUSH",
											"source": 6,
											"value": "74616B696E672050726F63657373000000000000000000000000000000000000"
										},
										{
											"begin": 4429,
											"end": 4447,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4429,
											"end": 4447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4429,
											"end": 4447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4422,
											"end": 4466,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4483,
											"end": 4502,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4483,
											"end": 4502,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 4098,
											"end": 4508,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4011,
											"end": 4077,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4093,
											"end": 4131,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 937,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 912,
											"end": 937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 912,
											"end": 937,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4112,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4112,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 4093,
											"end": 4131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 900,
											"end": 902,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 885,
											"end": 903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4131,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 3519,
											"end": 4139,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3519,
											"end": 4139,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3519,
											"end": 4139,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 4139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1657,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1736,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1729,
											"end": 1740,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1721,
											"end": 1769,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1721,
											"end": 1769,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4715,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1721,
											"end": 1769,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4697,
											"end": 4718,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4754,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 4734,
											"end": 4752,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4734,
											"end": 4752,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4757,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4819,
											"name": "PUSH",
											"source": 6,
											"value": "43616E6E6F74207374616B65207A65726F20546F6B656E730000000000000000"
										},
										{
											"begin": 4773,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4773,
											"end": 4791,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4766,
											"end": 4820,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4855,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4837,
											"end": 4855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 4513,
											"end": 4861,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1721,
											"end": 1769,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1787,
											"end": 1824,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1787,
											"end": 1824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1823,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1787,
											"end": 1824,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1168,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 1835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1802,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "648"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1787,
											"end": 1812,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1787,
											"end": 1812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1085,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1067,
											"end": 1085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1787,
											"end": 1824,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1787,
											"end": 1824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1835,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1835,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1860,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1779,
											"end": 1860,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5257,
											"end": 5259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5260,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 5276,
											"end": 5294,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5276,
											"end": 5294,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5294,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5299,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5335,
											"end": 5357,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742042616C616E6365000000000000000000000000"
										},
										{
											"begin": 5315,
											"end": 5333,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5315,
											"end": 5333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5308,
											"end": 5358,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5393,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5375,
											"end": 5393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5055,
											"end": 5399,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1779,
											"end": 1860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 2011,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1947,
											"end": 2011,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 1986,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1947,
											"end": 2011,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5606,
											"end": 5680,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1996,
											"end": 2000,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5696,
											"end": 5714,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5696,
											"end": 5714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5696,
											"end": 5714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 5772,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5781,
											"end": 5815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5781,
											"end": 5815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5781,
											"end": 5815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1962,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "648"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1975,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1947,
											"end": 1975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5579,
											"end": 5597,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5579,
											"end": 5597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 2011,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1947,
											"end": 2011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1947,
											"end": 2011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 2011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2056,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2056,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6030,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2021,
											"end": 2056,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6010,
											"end": 6031,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6069,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 6047,
											"end": 6065,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6047,
											"end": 6065,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6065,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6040,
											"end": 6070,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6106,
											"end": 6123,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E73666572204661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 6086,
											"end": 6104,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6086,
											"end": 6104,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6086,
											"end": 6104,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6124,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6159,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6141,
											"end": 6159,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5826,
											"end": 6165,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2021,
											"end": 2056,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2145,
											"end": 2155,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2156,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2131,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2131,
											"end": 2156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2156,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2156,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2131,
											"end": 2169,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2131,
											"end": 2169,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2131,
											"end": 2169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2127,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2128,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2103,
											"end": 2128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2128,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2128,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2169,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2193,
											"end": 2204,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2193,
											"end": 2217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2216,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2193,
											"end": 2217,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2193,
											"end": 2217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2260,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 937,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 912,
											"end": 937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 912,
											"end": 937,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2250,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 2233,
											"end": 2260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 900,
											"end": 902,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 885,
											"end": 903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2233,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 766,
											"end": 943,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1168,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1085,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1067,
											"end": 1085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 948,
											"end": 1174,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6374,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6375,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6413,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6391,
											"end": 6409,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6391,
											"end": 6409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6391,
											"end": 6409,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6414,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6483,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6423,
											"end": 6484,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6501,
											"end": 6519,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6501,
											"end": 6519,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6170,
											"end": 6525,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1168,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1085,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1067,
											"end": 1085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 948,
											"end": 1174,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 199,
											"end": 508,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 199,
											"end": 508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 258,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 313,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 299,
											"end": 308,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 290,
											"end": 297,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 286,
											"end": 309,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 282,
											"end": 314,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 279,
											"end": 331,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 279,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 279,
											"end": 331,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 327,
											"end": 328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 325,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 317,
											"end": 329,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 279,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 279,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 366,
											"end": 375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 353,
											"end": 376,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 409,
											"end": 414,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 405,
											"end": 459,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 398,
											"end": 403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 395,
											"end": 460,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 385,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 385,
											"end": 478,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 476,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 385,
											"end": 478,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 385,
											"end": 478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 199,
											"end": 508,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 199,
											"end": 508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2490,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2542,
											"end": 2619,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2539,
											"end": 2540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2532,
											"end": 2620,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2643,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2629,
											"end": 2644,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2667,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2660,
											"end": 2661,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2668,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2804,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2679,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2753,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2753,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2765,
											"end": 2775,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2765,
											"end": 2775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2765,
											"end": 2775,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 2798,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2762,
											"end": 2798,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2778,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2778,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 4093,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3816,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3936,
											"end": 3938,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3924,
											"end": 3933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3922,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 3934,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3907,
											"end": 3939,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3950,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 3993,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 3994,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4042,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4030,
											"end": 4043,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4044,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4045,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 4003,
											"end": 4063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4056,
											"end": 4057,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4061,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 5050,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4866,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4942,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4989,
											"end": 4991,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4968,
											"end": 4975,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4964,
											"end": 4987,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4960,
											"end": 4992,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 5009,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4957,
											"end": 5009,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5003,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5007,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 5009,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4957,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5028,
											"end": 5044,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5028,
											"end": 5044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 5050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4866,
											"end": 5050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6530,
											"end": 6658,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 6530,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6597,
											"end": 6606,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6597,
											"end": 6606,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6597,
											"end": 6606,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6629,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6615,
											"end": 6652,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6615,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 6615,
											"end": 6652,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6632,
											"end": 6650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UNSTAKE_PERIOD()": "79b57862",
							"getUnstakedRequest(address)": "3b64916e",
							"getVotingPower(address)": "bb4d4436",
							"governanceToken()": "f96dae0a",
							"initiateUnstaking(uint256)": "18fb4f32",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stake(uint256)": "a694fc3a",
							"stakedBalance(address)": "60217267",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"unstakingRequest(address)": "a0873111",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"UnstakeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UNSTAKE_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getUnstakedRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"initiateUnstaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unstakingRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor sets the address of the Governance Token\",\"params\":{\"_initialOwner\":\"The address that will own the contract\",\"_tokenAddress\":\"The address to deploy GovernanceToken contract\"}},\"getUnstakedRequest(address)\":{\"params\":{\"_account\":\"The address to query.\"},\"returns\":{\"amount\":\"The amount pending withdrawal.\",\"unlockTime\":\"The timestamp when withdrawal is possible.\"}},\"getVotingPower(address)\":{\"params\":{\"_account\":\"The address to query.\"},\"returns\":{\"_0\":\"The amount of tokens staked by the account.\"}},\"initiateUnstaking(uint256)\":{\"details\":\"Tokens remain locked for UNSTAKE_PERIOD. Only one unstake request active at a time per user.\",\"params\":{\"_amount\":\"The amount of tokens to start unstaking.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"stake(uint256)\":{\"details\":\"User must first approve this contract to spend their tokens.\",\"params\":{\"_amount\":\"The amount of tokens to stake.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw()\":{\"details\":\"Can only be called after initiateUnstake and waiting UNSTAKE_PERIOD.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getUnstakedRequest(address)\":{\"notice\":\"Gets details of a pending unstake request for an account.\"},\"getVotingPower(address)\":{\"notice\":\"Gets the staked balance of an account, which represents voting power.\"},\"initiateUnstaking(uint256)\":{\"notice\":\"Initiates the unstaking process for a specified amount.\"},\"stake(uint256)\":{\"notice\":\"Stakes a specified amount of GovernanceToken.\"},\"withdraw()\":{\"notice\":\"Withdraws tokens after the unstaking period has passed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingContract.sol\":\"StakingContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/StakingContract.sol\":{\"keccak256\":\"0x6050a08aef1f8e82167113a4995d44f7cd84b0d2e060e23f1092b9d4b54d43c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://307b0832475b6e64d246f75ebde6d127f62d56b23a144cc1956165aeb41244f8\",\"dweb:/ipfs/QmbGePTBBeuTftGyE1pNE2NTev9J7njhZvWCFYyi8mXevC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/StakingContract.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 158,
								"contract": "contracts/StakingContract.sol:StakingContract",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 652,
								"contract": "contracts/StakingContract.sol:StakingContract",
								"label": "stakedBalance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 654,
								"contract": "contracts/StakingContract.sol:StakingContract",
								"label": "totalStaked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 664,
								"contract": "contracts/StakingContract.sol:StakingContract",
								"label": "unstakingRequest",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(UnstakeInfo)659_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UnstakeInfo)659_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingContract.UnstakeInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UnstakeInfo)659_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(UnstakeInfo)659_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.UnstakeInfo",
								"members": [
									{
										"astId": 656,
										"contract": "contracts/StakingContract.sol:StakingContract",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 658,
										"contract": "contracts/StakingContract.sol:StakingContract",
										"label": "unlockTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getUnstakedRequest(address)": {
								"notice": "Gets details of a pending unstake request for an account."
							},
							"getVotingPower(address)": {
								"notice": "Gets the staked balance of an account, which represents voting power."
							},
							"initiateUnstaking(uint256)": {
								"notice": "Initiates the unstaking process for a specified amount."
							},
							"stake(uint256)": {
								"notice": "Stakes a specified amount of GovernanceToken."
							},
							"withdraw()": {
								"notice": "Withdraws tokens after the unstaking period has passed."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 321,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 320,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								320
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 224,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 233,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 290,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 290,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 290,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 290,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 290,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 290,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 291,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								224,
								233
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 298,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 297,
												"id": 300,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 320,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 307,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 306,
												"id": 309,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 320,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 320,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							632
						]
					},
					"id": 633,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 323,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 632,
							"linearizedBaseContracts": [
								632
							],
							"name": "SafeMath",
							"nameLocation": "490:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "717:140:4",
										"statements": [
											{
												"id": 353,
												"nodeType": "UncheckedBlock",
												"src": "727:124:4",
												"statements": [
													{
														"assignments": [
															336
														],
														"declarations": [
															{
																"constant": false,
																"id": 336,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 353,
																"src": "751:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 335,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 340,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 337,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "763:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 338,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "767:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 341,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "786:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 342,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "790:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 348,
														"nodeType": "IfStatement",
														"src": "782:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 346,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 334,
															"id": 347,
															"nodeType": "Return",
															"src": "793:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 350,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "838:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 351,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 334,
														"id": 352,
														"nodeType": "Return",
														"src": "824:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:4"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "702:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "708:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:4"
									},
									"scope": 632,
									"src": "641:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "1078:113:4",
										"statements": [
											{
												"id": 381,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 367,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "1116:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 368,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "1120:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 374,
														"nodeType": "IfStatement",
														"src": "1112:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 372,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 366,
															"id": 373,
															"nodeType": "Return",
															"src": "1123:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 358,
																		"src": "1168:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 377,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 360,
																		"src": "1172:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 379,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 366,
														"id": 380,
														"nodeType": "Return",
														"src": "1154:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1018:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1029:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:4"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1063:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:4"
									},
									"scope": 632,
									"src": "1002:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1415:417:4",
										"statements": [
											{
												"id": 423,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 395,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "1683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 402,
														"nodeType": "IfStatement",
														"src": "1679:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 400,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 394,
															"id": 401,
															"nodeType": "Return",
															"src": "1691:16:4"
														}
													},
													{
														"assignments": [
															404
														],
														"declarations": [
															{
																"constant": false,
																"id": 404,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 423,
																"src": "1721:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 403,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 408,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 405,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "1733:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 406,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "1737:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 409,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1756:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 410,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "1760:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 412,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "1765:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 418,
														"nodeType": "IfStatement",
														"src": "1752:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 416,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 394,
															"id": 417,
															"nodeType": "Return",
															"src": "1768:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 420,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1813:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 421,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 394,
														"id": 422,
														"nodeType": "Return",
														"src": "1799:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1355:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1366:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:4"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1400:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1406:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:4"
									},
									"scope": 632,
									"src": "1339:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "2057:114:4",
										"statements": [
											{
												"id": 451,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "2095:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 444,
														"nodeType": "IfStatement",
														"src": "2091:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 442,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 436,
															"id": 443,
															"nodeType": "Return",
															"src": "2103:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 446,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "2148:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 447,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "2152:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 449,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 436,
														"id": 450,
														"nodeType": "Return",
														"src": "2134:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1997:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2008:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:4"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2042:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2048:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:4"
									},
									"scope": 632,
									"src": "1981:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "2406:114:4",
										"statements": [
											{
												"id": 479,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 465,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "2444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 472,
														"nodeType": "IfStatement",
														"src": "2440:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 470,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 464,
															"id": 471,
															"nodeType": "Return",
															"src": "2452:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 474,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "2497:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 475,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "2501:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 477,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 464,
														"id": 478,
														"nodeType": "Return",
														"src": "2483:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2346:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2357:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:4"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2391:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 460,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2397:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:4"
									},
									"scope": 632,
									"src": "2330:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2822:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 491,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "2839:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 492,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "2843:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 490,
												"id": 494,
												"nodeType": "Return",
												"src": "2832:12:4"
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2768:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2779:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:4"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2813:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:4"
									},
									"scope": 632,
									"src": "2755:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "3189:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 506,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "3206:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 507,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "3210:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 505,
												"id": 509,
												"nodeType": "Return",
												"src": "3199:12:4"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3135:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:4"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3180:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:4"
									},
									"scope": 632,
									"src": "3122:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "3532:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 521,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "3549:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 522,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "3553:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 520,
												"id": 524,
												"nodeType": "Return",
												"src": "3542:12:4"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3478:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:4"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3523:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:4"
									},
									"scope": 632,
									"src": "3465:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "3917:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3934:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 537,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "3938:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 535,
												"id": 539,
												"nodeType": "Return",
												"src": "3927:12:4"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3863:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3874:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:4"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3908:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:4"
									},
									"scope": 632,
									"src": "3850:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "4466:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 551,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "4483:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 552,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "4487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 550,
												"id": 554,
												"nodeType": "Return",
												"src": "4476:12:4"
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "4412:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "4423:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:4"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "4457:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:4"
									},
									"scope": 632,
									"src": "4399:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "5054:106:4",
										"statements": [
											{
												"id": 579,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 569,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "5096:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 570,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "5101:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 572,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "5104:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 568,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 574,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 575,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 559,
																"src": "5138:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 576,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "5142:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 567,
														"id": 578,
														"nodeType": "Return",
														"src": "5131:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4972:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4983:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4994:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 562,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:4"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "5045:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:4"
									},
									"scope": 632,
									"src": "4959:201:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5739:105:4",
										"statements": [
											{
												"id": 604,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 594,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "5781:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 597,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "5788:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 593,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 599,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 600,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "5822:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 601,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "5826:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 592,
														"id": 603,
														"nodeType": "Return",
														"src": "5815:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5679:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 587,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:4"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5730:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:4"
									},
									"scope": 632,
									"src": "5644:200:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "6585:105:4",
										"statements": [
											{
												"id": 629,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 619,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 611,
																		"src": "6627:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 622,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "6634:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 618,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 624,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 625,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "6668:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 626,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "6672:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 617,
														"id": 628,
														"nodeType": "Return",
														"src": "6661:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "6503:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "6514:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "6525:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 612,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:4"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "6576:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:4"
									},
									"scope": 632,
									"src": "6490:200:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 633,
							"src": "482:6210:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:4"
				},
				"id": 4
			},
			"contracts/StakingContract.sol": {
				"ast": {
					"absolutePath": "contracts/StakingContract.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"IERC20": [
							290
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						],
						"SafeMath": [
							632
						],
						"StakingContract": [
							974
						]
					},
					"id": 975,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 634,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 975,
							"sourceUnit": 291,
							"src": "58:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 636,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 975,
							"sourceUnit": 148,
							"src": "115:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 637,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 975,
							"sourceUnit": 213,
							"src": "168:62:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 638,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 975,
							"sourceUnit": 633,
							"src": "231:57:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 639,
										"name": "Ownable",
										"nameLocations": [
											"319:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "319:7:5"
									},
									"id": 640,
									"nodeType": "InheritanceSpecifier",
									"src": "319:7:5"
								},
								{
									"baseName": {
										"id": 641,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"328:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "328:15:5"
									},
									"id": 642,
									"nodeType": "InheritanceSpecifier",
									"src": "328:15:5"
								}
							],
							"canonicalName": "StakingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 974,
							"linearizedBaseContracts": [
								974,
								212,
								147,
								320
							],
							"name": "StakingContract",
							"nameLocation": "300:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 645,
									"libraryName": {
										"id": 643,
										"name": "SafeMath",
										"nameLocations": [
											"356:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 632,
										"src": "356:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "350:27:5",
									"typeName": {
										"id": 644,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "369:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "f96dae0a",
									"id": 648,
									"mutability": "immutable",
									"name": "governanceToken",
									"nameLocation": "407:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 974,
									"src": "383:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$290",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 647,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 646,
											"name": "IERC20",
											"nameLocations": [
												"383:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 290,
											"src": "383:6:5"
										},
										"referencedDeclaration": 290,
										"src": "383:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$290",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "60217267",
									"id": 652,
									"mutability": "mutable",
									"name": "stakedBalance",
									"nameLocation": "464:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 974,
									"src": "429:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 651,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 649,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "437:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "429:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 650,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "448:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 654,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "495:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 974,
									"src": "483:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 653,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "483:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingContract.UnstakeInfo",
									"id": 659,
									"members": [
										{
											"constant": false,
											"id": 656,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "580:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 659,
											"src": "572:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 655,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "572:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 658,
											"mutability": "mutable",
											"name": "unlockTime",
											"nameLocation": "604:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 659,
											"src": "596:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 657,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "596:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UnstakeInfo",
									"nameLocation": "551:11:5",
									"nodeType": "StructDefinition",
									"scope": 974,
									"src": "544:77:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a0873111",
									"id": 664,
									"mutability": "mutable",
									"name": "unstakingRequest",
									"nameLocation": "698:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 974,
									"src": "659:55:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnstakeInfo_$659_storage_$",
										"typeString": "mapping(address => struct StakingContract.UnstakeInfo)"
									},
									"typeName": {
										"id": 663,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 660,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "667:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "659:31:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnstakeInfo_$659_storage_$",
											"typeString": "mapping(address => struct StakingContract.UnstakeInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 662,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 661,
												"name": "UnstakeInfo",
												"nameLocations": [
													"678:11:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 659,
												"src": "678:11:5"
											},
											"referencedDeclaration": 659,
											"src": "678:11:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
												"typeString": "struct StakingContract.UnstakeInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "79b57862",
									"id": 667,
									"mutability": "constant",
									"name": "UNSTAKE_PERIOD",
									"nameLocation": "745:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 974,
									"src": "721:47:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 665,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "721:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 666,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "762:6:5",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 673,
									"name": "Staked",
									"nameLocation": "795:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "818:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "802:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "832:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "824:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:38:5"
									},
									"src": "789:51:5"
								},
								{
									"anonymous": false,
									"eventSelector": "9cee5eacd317086e5050733a5dad16ef5aaec185de792371a9625bfee2a3213b",
									"id": 681,
									"name": "UnstakeInitiated",
									"nameLocation": "851:16:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "884:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "868:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "898:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "890:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"indexed": false,
												"mutability": "mutable",
												"name": "unlockTime",
												"nameLocation": "914:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "906:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:58:5"
									},
									"src": "845:81:5"
								},
								{
									"anonymous": false,
									"eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
									"id": 687,
									"name": "Withdraw",
									"nameLocation": "937:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "962:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "946:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "976:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "968:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:38:5"
									},
									"src": "931:53:5"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "1294:138:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 699,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "1312:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1337:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1329:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 700,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1329:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1329:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1312:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520546f6b656e20616464726573732063616e6e6f74206265207a65726f",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1341:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13",
																"typeString": "literal_string \"The Token address cannot be zero\""
															},
															"value": "The Token address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c8c5ff06c82b32e42b2a50e44fe40502f187025c7b1a6164e9baf28ead9ef13",
																"typeString": "literal_string \"The Token address cannot be zero\""
															}
														],
														"id": 698,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1304:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1304:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "1304:72:5"
											},
											{
												"expression": {
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 708,
														"name": "governanceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "1386:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 710,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "1411:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 709,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "1404:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1404:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"src": "1386:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "1386:39:5"
											}
										]
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "990:218:5",
										"text": " @dev Constructor sets the address of the Governance Token\n @param _tokenAddress The address to deploy GovernanceToken contract\n @param _initialOwner The address that will own the contract"
									},
									"id": 715,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 695,
													"name": "_initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 692,
													"src": "1279:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 696,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 694,
												"name": "Ownable",
												"nameLocations": [
													"1271:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1271:7:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1271:22:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "1233:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1225:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "_initialOwner",
												"nameLocation": "1256:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1248:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1224:46:5"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1294:0:5"
									},
									"scope": 974,
									"src": "1213:219:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "1711:556:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 724,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "1729:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1739:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1729:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b65207a65726f20546f6b656e73",
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1742:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87",
																"typeString": "literal_string \"Cannot stake zero Tokens\""
															},
															"value": "Cannot stake zero Tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4221d5360fd3f68aef53e7f9919b5ed6ebedb5203741fcbe51cbdd2f1ab8f87",
																"typeString": "literal_string \"Cannot stake zero Tokens\""
															}
														],
														"id": 723,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1721:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "1721:48:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 733,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1813:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1817:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1813:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 731,
																		"name": "governanceToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 648,
																		"src": "1787:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$290",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1803:9:5",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 247,
																	"src": "1787:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1787:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 736,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "1828:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1787:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742042616c616e6365",
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1837:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															},
															"value": "Insufficient Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															}
														],
														"id": 730,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1779:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "1779:81:5"
											},
											{
												"assignments": [
													742
												],
												"declarations": [
													{
														"constant": false,
														"id": 742,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1937:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 785,
														"src": "1932:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 741,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1932:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 745,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1976:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1980:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1976:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 749,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1996:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$974",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$974",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1988:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 747,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1988:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1988:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 751,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "2003:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 743,
															"name": "governanceToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "1947:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1963:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 289,
														"src": "1947:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1947:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1932:79:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "2029:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572204661696c6564",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2038:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																"typeString": "literal_string \"Transfer Failed\""
															},
															"value": "Transfer Failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																"typeString": "literal_string \"Transfer Failed\""
															}
														],
														"id": 754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2021:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "2021:35:5"
											},
											{
												"expression": {
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 759,
															"name": "stakedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "2103:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 762,
														"indexExpression": {
															"expression": {
																"id": 760,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2117:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2121:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2117:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2103:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 768,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "2161:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 763,
																	"name": "stakedBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "2131:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 766,
																"indexExpression": {
																	"expression": {
																		"id": 764,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2145:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2149:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2145:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2131:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2157:3:5",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 496,
															"src": "2131:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2131:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2103:66:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "2103:66:5"
											},
											{
												"expression": {
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 772,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "2179:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 775,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "2209:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 773,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "2193:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2205:3:5",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 496,
															"src": "2193:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2193:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2179:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "2179:38:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 780,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2240:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2244:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2240:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "2252:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "2233:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2233:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "EmitStatement",
												"src": "2228:32:5"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "1454:198:5",
										"text": " @notice Stakes a specified amount of GovernanceToken.\n @dev User must first approve this contract to spend their tokens.\n @param _amount The amount of tokens to stake."
									},
									"functionSelector": "a694fc3a",
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 721,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 720,
												"name": "nonReentrant",
												"nameLocations": [
													"1698:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "1698:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1698:12:5"
										}
									],
									"name": "stake",
									"nameLocation": "1666:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1680:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "1672:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:17:5"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1711:0:5"
									},
									"scope": 974,
									"src": "1657:610:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "2612:691:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 795,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "2630:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2640:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2630:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420556e7374616b65207a65726f20746f6b656e73",
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2643:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc",
																"typeString": "literal_string \"Cannot Unstake zero tokens\""
															},
															"value": "Cannot Unstake zero tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03d6f6baded319132f9a62b37a3fe6e2daa6166511a05d4586c80af83e9858bc",
																"typeString": "literal_string \"Cannot Unstake zero tokens\""
															}
														],
														"id": 794,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2622:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2622:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "2622:50:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 802,
																	"name": "stakedBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "2690:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 805,
																"indexExpression": {
																	"expression": {
																		"id": 803,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2704:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2708:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2704:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2690:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 806,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "2719:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2690:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2728:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															},
															"value": "Insufficient staked balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															}
														],
														"id": 801,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2682:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:76:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "2682:76:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 812,
																		"name": "unstakingRequest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "2776:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnstakeInfo_$659_storage_$",
																			"typeString": "mapping(address => struct StakingContract.UnstakeInfo storage ref)"
																		}
																	},
																	"id": 815,
																	"indexExpression": {
																		"expression": {
																			"id": 813,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2793:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2797:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2793:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2776:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage",
																		"typeString": "struct StakingContract.UnstakeInfo storage ref"
																	}
																},
																"id": 816,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2805:6:5",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 656,
																"src": "2776:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2815:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2776:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e7374616b6520416c726561647920696e2050726f63657373",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2818:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660",
																"typeString": "literal_string \"Unstake Already in Process\""
															},
															"value": "Unstake Already in Process"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0510910380349386b2934188a2e8fdc697ec567da5fb407d766c4dc2b5ac660",
																"typeString": "literal_string \"Unstake Already in Process\""
															}
														],
														"id": 811,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2768:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2768:79:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "2768:79:5"
											},
											{
												"expression": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 822,
															"name": "stakedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "2894:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 825,
														"indexExpression": {
															"expression": {
																"id": 823,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2908:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2912:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2908:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2894:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 831,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "2952:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 826,
																	"name": "stakedBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "2922:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 829,
																"indexExpression": {
																	"expression": {
																		"id": 827,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2936:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2940:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2936:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2922:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2948:3:5",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 511,
															"src": "2922:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2922:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2894:66:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "2894:66:5"
											},
											{
												"expression": {
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 835,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "2970:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 838,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "3000:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 836,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "2984:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2996:3:5",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 511,
															"src": "2984:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2984:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2970:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "2970:38:5"
											},
											{
												"assignments": [
													843
												],
												"declarations": [
													{
														"constant": false,
														"id": 843,
														"mutability": "mutable",
														"name": "unlockTime",
														"nameLocation": "3057:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 866,
														"src": "3049:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 842,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3049:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 848,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 844,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3070:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3076:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3070:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 846,
														"name": "UNSTAKE_PERIOD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "3088:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3070:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3049:53:5"
											},
											{
												"expression": {
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 849,
															"name": "unstakingRequest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "3112:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnstakeInfo_$659_storage_$",
																"typeString": "mapping(address => struct StakingContract.UnstakeInfo storage ref)"
															}
														},
														"id": 852,
														"indexExpression": {
															"expression": {
																"id": 850,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3129:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3133:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3129:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3112:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage",
															"typeString": "struct StakingContract.UnstakeInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 854,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "3177:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 855,
																"name": "unlockTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "3210:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 853,
															"name": "UnstakeInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "3143:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_UnstakeInfo_$659_storage_ptr_$",
																"typeString": "type(struct StakingContract.UnstakeInfo storage pointer)"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"3169:6:5",
															"3198:10:5"
														],
														"names": [
															"amount",
															"unlockTime"
														],
														"nodeType": "FunctionCall",
														"src": "3143:88:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UnstakeInfo_$659_memory_ptr",
															"typeString": "struct StakingContract.UnstakeInfo memory"
														}
													},
													"src": "3112:119:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage",
														"typeString": "struct StakingContract.UnstakeInfo storage ref"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "3112:119:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 860,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3264:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3268:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3264:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 862,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "3276:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 863,
															"name": "unlockTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "3285:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 859,
														"name": "UnstakeInitiated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "3247:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3247:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "EmitStatement",
												"src": "3242:54:5"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "2291:250:5",
										"text": " @notice Initiates the unstaking process for a specified amount.\n @dev Tokens remain locked for UNSTAKE_PERIOD. Only one unstake request active at a time per user.\n @param _amount The amount of tokens to start unstaking."
									},
									"functionSelector": "18fb4f32",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 792,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 791,
												"name": "nonReentrant",
												"nameLocations": [
													"2599:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "2599:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2599:12:5"
										}
									],
									"name": "initiateUnstaking",
									"nameLocation": "2555:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2581:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "2573:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2573:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2572:17:5"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2612:0:5"
									},
									"scope": 974,
									"src": "2546:757:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "3519:620:5",
										"statements": [
											{
												"assignments": [
													875
												],
												"declarations": [
													{
														"constant": false,
														"id": 875,
														"mutability": "mutable",
														"name": "request",
														"nameLocation": "3549:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 935,
														"src": "3529:27:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
															"typeString": "struct StakingContract.UnstakeInfo"
														},
														"typeName": {
															"id": 874,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 873,
																"name": "UnstakeInfo",
																"nameLocations": [
																	"3529:11:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 659,
																"src": "3529:11:5"
															},
															"referencedDeclaration": 659,
															"src": "3529:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
																"typeString": "struct StakingContract.UnstakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 880,
												"initialValue": {
													"baseExpression": {
														"id": 876,
														"name": "unstakingRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "3559:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnstakeInfo_$659_storage_$",
															"typeString": "mapping(address => struct StakingContract.UnstakeInfo storage ref)"
														}
													},
													"id": 879,
													"indexExpression": {
														"expression": {
															"id": 877,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3576:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3580:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3576:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3559:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage",
														"typeString": "struct StakingContract.UnstakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3529:58:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 882,
																	"name": "request",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "3605:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
																		"typeString": "struct StakingContract.UnstakeInfo storage pointer"
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3613:6:5",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 656,
																"src": "3605:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3622:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3605:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20556e7374616b65205265717565737420466f756e64",
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3625:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258",
																"typeString": "literal_string \"No Unstake Request Found\""
															},
															"value": "No Unstake Request Found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7b2e006b4ebb4d6f37eb2bf99a5b5f74aa7a3163e48fe5c9281f7a980fa94258",
																"typeString": "literal_string \"No Unstake Request Found\""
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3597:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3597:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "3597:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 890,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3670:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3676:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3670:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 892,
																	"name": "request",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "3689:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
																		"typeString": "struct StakingContract.UnstakeInfo storage pointer"
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3697:10:5",
																"memberName": "unlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 658,
																"src": "3689:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3670:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e7374616b6520706572696f64206e6f74206f766572",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3709:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed",
																"typeString": "literal_string \"Unstake period not over\""
															},
															"value": "Unstake period not over"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d7dd25a5852a200c262007977d62b68a5fb89bab3629aa0731a3b4eabcc84bed",
																"typeString": "literal_string \"Unstake period not over\""
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3662:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3662:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "3662:73:5"
											},
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "amountToWithdraw",
														"nameLocation": "3754:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 935,
														"src": "3746:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 898,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3746:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"expression": {
														"id": 900,
														"name": "request",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "3773:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
															"typeString": "struct StakingContract.UnstakeInfo storage pointer"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3781:6:5",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 656,
													"src": "3773:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3746:41:5"
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 903,
															"name": "request",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "3851:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
																"typeString": "struct StakingContract.UnstakeInfo storage pointer"
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3859:6:5",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 656,
														"src": "3851:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3868:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3851:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "3851:18:5"
											},
											{
												"expression": {
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 909,
															"name": "request",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "3879:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
																"typeString": "struct StakingContract.UnstakeInfo storage pointer"
															}
														},
														"id": 911,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3887:10:5",
														"memberName": "unlockTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 658,
														"src": "3879:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3900:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3879:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "3879:22:5"
											},
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3937:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 935,
														"src": "3932:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 915,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3932:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 923,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 919,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3972:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3976:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3972:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 921,
															"name": "amountToWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "3984:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 917,
															"name": "governanceToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "3947:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3963:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "3947:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3947:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3932:69:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 925,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "4019:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e205472616e73666572204661696c656420647572696e6720556e5374616b696e672050726f63657373",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4028:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3",
																"typeString": "literal_string \"Token Transfer Failed during UnStaking Process\""
															},
															"value": "Token Transfer Failed during UnStaking Process"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62a2a9c6ecacbaeb73e111cd02db8c92988ec4edf98b25d4583cb29e309583b3",
																"typeString": "literal_string \"Token Transfer Failed during UnStaking Process\""
															}
														],
														"id": 924,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4011:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4011:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "4011:66:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 930,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4102:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4106:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4102:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 932,
															"name": "amountToWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "4114:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 929,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "4093:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4093:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "EmitStatement",
												"src": "4088:43:5"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "3309:163:5",
										"text": " @notice Withdraws tokens after the unstaking period has passed.\n @dev Can only be called after initiateUnstake and waiting UNSTAKE_PERIOD."
									},
									"functionSelector": "3ccfd60b",
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 871,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 870,
												"name": "nonReentrant",
												"nameLocations": [
													"3506:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "3506:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3506:12:5"
										}
									],
									"name": "withdraw",
									"nameLocation": "3486:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3494:2:5"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3519:0:5"
									},
									"scope": 974,
									"src": "3477:662:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "4447:47:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 944,
														"name": "stakedBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "4464:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 946,
													"indexExpression": {
														"id": 945,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "4478:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4464:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 943,
												"id": 947,
												"nodeType": "Return",
												"src": "4457:30:5"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "4169:200:5",
										"text": " @notice Gets the staked balance of an account, which represents voting power.\n @param _account The address to query.\n @return The amount of tokens staked by the account."
									},
									"functionSelector": "bb4d4436",
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVotingPower",
									"nameLocation": "4383:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "4406:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "4398:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:18:5"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "4438:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4438:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4437:9:5"
									},
									"scope": 974,
									"src": "4374:120:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "4855:126:5",
										"statements": [
											{
												"assignments": [
													961
												],
												"declarations": [
													{
														"constant": false,
														"id": 961,
														"mutability": "mutable",
														"name": "request",
														"nameLocation": "4885:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 972,
														"src": "4865:27:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
															"typeString": "struct StakingContract.UnstakeInfo"
														},
														"typeName": {
															"id": 960,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 959,
																"name": "UnstakeInfo",
																"nameLocations": [
																	"4865:11:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 659,
																"src": "4865:11:5"
															},
															"referencedDeclaration": 659,
															"src": "4865:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
																"typeString": "struct StakingContract.UnstakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 965,
												"initialValue": {
													"baseExpression": {
														"id": 962,
														"name": "unstakingRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "4895:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnstakeInfo_$659_storage_$",
															"typeString": "mapping(address => struct StakingContract.UnstakeInfo storage ref)"
														}
													},
													"id": 964,
													"indexExpression": {
														"id": 963,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "4912:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4895:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage",
														"typeString": "struct StakingContract.UnstakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4865:56:5"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 966,
																"name": "request",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "4939:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
																	"typeString": "struct StakingContract.UnstakeInfo storage pointer"
																}
															},
															"id": 967,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4947:6:5",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 656,
															"src": "4939:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 968,
																"name": "request",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "4955:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UnstakeInfo_$659_storage_ptr",
																	"typeString": "struct StakingContract.UnstakeInfo storage pointer"
																}
															},
															"id": 969,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4963:10:5",
															"memberName": "unlockTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 658,
															"src": "4955:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 970,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4938:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 958,
												"id": 971,
												"nodeType": "Return",
												"src": "4931:43:5"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "4500:246:5",
										"text": " @notice Gets details of a pending unstake request for an account.\n @param _account The address to query.\n @return amount The amount pending withdrawal.\n @return unlockTime The timestamp when withdrawal is possible."
									},
									"functionSelector": "3b64916e",
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUnstakedRequest",
									"nameLocation": "4760:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "4787:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "4779:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:18:5"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4827:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "4819:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4819:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "unlockTime",
												"nameLocation": "4843:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "4835:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4835:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4818:36:5"
									},
									"scope": 974,
									"src": "4751:230:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 975,
							"src": "291:4694:5",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								673,
								681,
								687
							]
						}
					],
					"src": "32:4953:5"
				},
				"id": 5
			}
		}
	}
}