{
	"id": "9254f38374c7953349e528f90115d2d0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BasicVestingGovernanceToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\n\ncontract BasicVestingGovernanceToken is ERC20, ERC20Burnable, Ownable {\n\n    using SafeMath for uint256;\n\n    uint256 public immutable vestingStartTime;\n    uint256 public immutable vestingDuration;\n\n    uint256 public immutable totalVestedSupply;\n\n    uint256 public totalVestedReleased;\n\n\n    event VestingScheduleCreated(uint256 totalAmount, uint256 startTime, uint256 duration);\n    event VestedTokensReleased(address indexed to, uint256 amount);\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint256 _initialOwnerSupply,\n        uint256 _totalVestedSupply,\n        uint256 _vestingDurationInSeconds,\n        address _initialOwner\n    ) ERC20(_name, _symbol) Ownable(_initialOwner) {\n\n        require(_initialOwner != address(0), \"Ownable: initial owner is the zero address\");\n        require(_vestingDurationInSeconds > 0, \"Vesting: duration must be greater than zero\");\n\n        vestingStartTime = block.timestamp;\n        vestingDuration = _vestingDurationInSeconds;\n        totalVestedSupply = _totalVestedSupply;\n\n        if (_initialOwnerSupply > 0) {\n            _mint(_initialOwner, _initialOwnerSupply);\n        }\n\n        if (_totalVestedSupply > 0) {\n            _mint(address(this), _totalVestedSupply);\n        }\n\n        emit VestingScheduleCreated(_totalVestedSupply, vestingStartTime, vestingDuration);\n\n    }\n\n\n    function currentlyVested() public view returns (uint256) {\n\n        if (block.timestamp < vestingStartTime || vestingDuration == 0) {\n            return 0;\n        }\n\n        uint timeElapsed = block.timestamp.sub(vestingStartTime);\n\n        if (timeElapsed >= vestingDuration) {\n            return totalVestedSupply;\n        }\n\n        return totalVestedSupply.mul(timeElapsed).div(vestingDuration);\n\n    }\n\n    function releaseVestedTokens() public onlyOwner {\n        uint256 totalVestedAmount = currentlyVested();\n\n        require(totalVestedAmount > totalVestedReleased, \"Vesting: no new tokens have vested\");\n\n        uint256 amountToRelease = totalVestedAmount.sub(totalVestedReleased);\n\n        totalVestedReleased = totalVestedReleased.add(amountToRelease);\n\n        _transfer(address(this), owner(), amountToRelease);\n        \n\n        emit VestedTokensReleased(owner(), amountToRelease);\n    }\n\n\n    function _update(address from, address to, uint256 amount) internal virtual override{\n\n        super._update(from, to, amount);\n\n        if (from == address(this)) {\n            require(to == owner() && msg.sender == owner(), \"ERC20: cannot transfer locked vested tokens\");\n        }\n\n    }\n\n\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122001145d1d22772cf1b55e46313de1b6c23fcfacf215042daa6f051e691e0454ae64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122001145d1d22772cf1b55e46313de1b6c23fcfacf215042daa6f051e691e0454ae64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD EQ TSTORE SAR 0x22 PUSH24 0x2CF1B55E46313DE1B6C23FCFACF215042DAA6F051E691E04 SLOAD 0xAE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122001145d1d22772cf1b55e46313de1b6c23fcfacf215042daa6f051e691e0454ae64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD EQ TSTORE SAR 0x22 PUSH24 0x2CF1B55E46313DE1B6C23FCFACF215042DAA6F051E691E04 SLOAD 0xAE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001145d1d22772cf1b55e46313de1b6c23fcfacf215042daa6f051e691e0454ae64736f6c634300081a0033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/BasicVestingGovernanceToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BasicVestingGovernanceToken.sol": {
				"BasicVestingGovernanceToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_initialOwnerSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_totalVestedSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_vestingDurationInSeconds",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "VestedTokensReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "VestingScheduleCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentlyVested",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releaseVestedTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVestedReleased",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVestedSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestingDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestingStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BasicVestingGovernanceToken.sol\":303:2884  contract BasicVestingGovernanceToken is ERC20, ERC20Burnable, Ownable {... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/BasicVestingGovernanceToken.sol\":759:1672  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1014:1027  _initialOwner */\n  dup1\n    /* \"contracts/BasicVestingGovernanceToken.sol\":990:995  _name */\n  dup7\n    /* \"contracts/BasicVestingGovernanceToken.sol\":997:1004  _symbol */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  tag_8\n    /* \"contracts/BasicVestingGovernanceToken.sol\":990:995  _name */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4602:4653   */\n  mstore\n    /* \"#utility.yul\":4575:4593   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1048:1075  _initialOwner != address(0) */\n  dup2\n  and\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1040:1122  require(_initialOwner != address(0), \"Ownable: initial owner is the zero address\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4866:4868   */\n  0x20\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1040:1122  require(_initialOwner != address(0), \"Ownable: initial owner is the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4848:4869   */\n  mstore\n    /* \"#utility.yul\":4905:4907   */\n  0x2a\n    /* \"#utility.yul\":4885:4903   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4878:4908   */\n  mstore\n    /* \"#utility.yul\":4944:4978   */\n  0x4f776e61626c653a20696e697469616c206f776e657220697320746865207a65\n    /* \"#utility.yul\":4924:4942   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4917:4979   */\n  mstore\n  shl(0xb0, 0x726f2061646472657373)\n    /* \"#utility.yul\":4995:5013   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":4988:5028   */\n  mstore\n    /* \"#utility.yul\":5045:5064   */\n  0x84\n  add\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1040:1122  require(_initialOwner != address(0), \"Ownable: initial owner is the zero address\") */\n  tag_13\n    /* \"#utility.yul\":4664:5070   */\n  jump\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1040:1122  require(_initialOwner != address(0), \"Ownable: initial owner is the zero address\") */\ntag_18:\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1168:1169  0 */\n  0x00\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1140:1165  _vestingDurationInSeconds */\n  dup3\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1140:1169  _vestingDurationInSeconds > 0 */\n  gt\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1132:1217  require(_vestingDurationInSeconds > 0, \"Vesting: duration must be greater than zero\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5277:5279   */\n  0x20\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1132:1217  require(_vestingDurationInSeconds > 0, \"Vesting: duration must be greater than zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5259:5280   */\n  mstore\n    /* \"#utility.yul\":5316:5318   */\n  0x2b\n    /* \"#utility.yul\":5296:5314   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5289:5319   */\n  mstore\n    /* \"#utility.yul\":5355:5389   */\n  0x56657374696e673a206475726174696f6e206d75737420626520677265617465\n    /* \"#utility.yul\":5335:5353   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5328:5390   */\n  mstore\n  shl(0xa8, 0x72207468616e207a65726f)\n    /* \"#utility.yul\":5406:5424   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":5399:5440   */\n  mstore\n    /* \"#utility.yul\":5457:5476   */\n  0x84\n  add\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1132:1217  require(_vestingDurationInSeconds > 0, \"Vesting: duration must be greater than zero\") */\n  tag_13\n    /* \"#utility.yul\":5075:5482   */\n  jump\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1132:1217  require(_vestingDurationInSeconds > 0, \"Vesting: duration must be greater than zero\") */\ntag_21:\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1247:1262  block.timestamp */\n  timestamp\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1228:1262  vestingStartTime = block.timestamp */\n  0x80\n  mstore\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1272:1315  vestingDuration = _vestingDurationInSeconds */\n  0xa0\n  dup3\n  swap1\n  mstore\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1325:1363  totalVestedSupply = _totalVestedSupply */\n  0xc0\n  dup4\n  swap1\n  mstore\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1378:1401  _initialOwnerSupply > 0 */\n  dup4\n  iszero\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1374:1469  if (_initialOwnerSupply > 0) {... */\n  tag_25\n  jumpi\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1417:1458  _mint(_initialOwner, _initialOwnerSupply) */\n  tag_25\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1423:1436  _initialOwner */\n  dup2\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1438:1457  _initialOwnerSupply */\n  dup6\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1417:1422  _mint */\n  tag_26\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1417:1458  _mint(_initialOwner, _initialOwnerSupply) */\n  jump\t// in\ntag_25:\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1483:1505  _totalVestedSupply > 0 */\n  dup3\n  iszero\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1479:1572  if (_totalVestedSupply > 0) {... */\n  tag_28\n  jumpi\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1521:1561  _mint(address(this), _totalVestedSupply) */\n  tag_28\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1535:1539  this */\n  address\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1542:1560  _totalVestedSupply */\n  dup5\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1521:1526  _mint */\n  tag_26\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1521:1561  _mint(address(this), _totalVestedSupply) */\n  jump\t// in\ntag_28:\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1630:1646  vestingStartTime */\n  mload(0x80)\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1648:1663  vestingDuration */\n  mload(0xa0)\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1587:1664  VestingScheduleCreated(_totalVestedSupply, vestingStartTime, vestingDuration) */\n  0x40\n  dup1\n  mload\n    /* \"#utility.yul\":5689:5714   */\n  dup7\n  dup2\n  mstore\n    /* \"#utility.yul\":5745:5747   */\n  0x20\n    /* \"#utility.yul\":5730:5748   */\n  dup2\n  add\n    /* \"#utility.yul\":5723:5757   */\n  swap4\n  swap1\n  swap4\n  mstore\n    /* \"#utility.yul\":5773:5791   */\n  dup3\n  add\n    /* \"#utility.yul\":5766:5800   */\n  mstore\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1587:1664  VestingScheduleCreated(_totalVestedSupply, vestingStartTime, vestingDuration) */\n  0xe8fbcdfc2a707362664a0cdec5038e3d2a2183f4d4d3747e56bfc200eda13756\n  swap1\n    /* \"#utility.yul\":5677:5679   */\n  0x60\n    /* \"#utility.yul\":5662:5680   */\n  add\n    /* \"contracts/BasicVestingGovernanceToken.sol\":1587:1664  VestingScheduleCreated(_totalVestedSupply, vestingStartTime, vestingDuration) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"contracts/BasicVestingGovernanceToken.sol\":759:1672  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/BasicVestingGovernanceToken.sol\":303:2884  contract BasicVestingGovernanceToken is ERC20, ERC20Burnable, Ownable {... */\n  jump(tag_68)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4602:4653   */\n  mstore\n    /* \"#utility.yul\":4575:4593   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  tag_13\n    /* \"#utility.yul\":4456:4659   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_36\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  tag_37\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2590:2880  function _update(address from, address to, uint256 amount) internal virtual override{... */\ntag_37:\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2685:2716  super._update(from, to, amount) */\n  tag_39\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2699:2703  from */\n  dup4\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2705:2707  to */\n  dup4\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2709:2715  amount */\n  dup4\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2685:2698  super._update */\n  tag_40\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2685:2716  super._update(from, to, amount) */\n  jump\t// in\ntag_39:\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2747:2751  this */\n  address\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2731:2752  from == address(this) */\n  dup5\n  and\n  sub\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2727:2873  if (from == address(this)) {... */\n  tag_46\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  sload(0x05)\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2776:2789  to == owner() */\n  dup4\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  swap2\n  and\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2776:2789  to == owner() */\n  eq\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2776:2814  to == owner() && msg.sender == owner() */\n  dup1\n  iszero\n  tag_44\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2793:2803  msg.sender */\n  caller\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2793:2814  msg.sender == owner() */\n  eq\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2776:2814  to == owner() && msg.sender == owner() */\ntag_44:\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2768:2862  require(to == owner() && msg.sender == owner(), \"ERC20: cannot transfer locked vested tokens\") */\n  tag_46\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":6013:6015   */\n  0x20\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2768:2862  require(to == owner() && msg.sender == owner(), \"ERC20: cannot transfer locked vested tokens\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5995:6016   */\n  mstore\n    /* \"#utility.yul\":6052:6054   */\n  0x2b\n    /* \"#utility.yul\":6032:6050   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":6025:6055   */\n  mstore\n    /* \"#utility.yul\":6091:6125   */\n  0x45524332303a2063616e6e6f74207472616e73666572206c6f636b6564207665\n    /* \"#utility.yul\":6071:6089   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":6064:6126   */\n  mstore\n  shl(0xa8, 0x7374656420746f6b656e73)\n    /* \"#utility.yul\":6142:6160   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":6135:6176   */\n  mstore\n    /* \"#utility.yul\":6193:6212   */\n  0x84\n  add\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2768:2862  require(to == owner() && msg.sender == owner(), \"ERC20: cannot transfer locked vested tokens\") */\n  tag_13\n    /* \"#utility.yul\":5811:6218   */\n  jump\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2768:2862  require(to == owner() && msg.sender == owner(), \"ERC20: cannot transfer locked vested tokens\") */\ntag_46:\n    /* \"contracts/BasicVestingGovernanceToken.sol\":2590:2880  function _update(address from, address to, uint256 amount) internal virtual override{... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_40:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_50\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_51\n  swap2\n  swap1\n  tag_52\n  jump\t// in\ntag_51:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_53\n  swap1\n  pop\n  jump\ntag_50:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_54\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":6670:6702   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":6652:6703   */\n  mstore\n    /* \"#utility.yul\":6719:6737   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":6712:6746   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":6762:6780   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":6755:6789   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":6625:6643   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_13\n    /* \"#utility.yul\":6450:6795   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_54:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_53:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_57\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_58)\ntag_57:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_58:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_59\n  swap2\n    /* \"#utility.yul\":6946:6971   */\n  dup2\n  mstore\n    /* \"#utility.yul\":6934:6936   */\n  0x20\n    /* \"#utility.yul\":6919:6937   */\n  add\n  swap1\n    /* \"#utility.yul\":6800:6977   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\ntag_59:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_62:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:869   */\ntag_63:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_71:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_73\n  tag_62\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_75\n  tag_62\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_76:\n    /* \"#utility.yul\":782:788   */\n  dup2\n    /* \"#utility.yul\":775:779   */\n  0x20\n    /* \"#utility.yul\":767:773   */\n  dup6\n    /* \"#utility.yul\":763:780   */\n  add\n    /* \"#utility.yul\":756:760   */\n  0x20\n    /* \"#utility.yul\":748:754   */\n  dup4\n    /* \"#utility.yul\":744:761   */\n  add\n    /* \"#utility.yul\":738:789   */\n  mcopy\n    /* \"#utility.yul\":837:838   */\n  0x00\n    /* \"#utility.yul\":809:828   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":830:834   */\n  0x20\n    /* \"#utility.yul\":805:835   */\n  add\n    /* \"#utility.yul\":798:839   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":813:819   */\n  swap4\n    /* \"#utility.yul\":146:869   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":874:1942   */\ntag_3:\n    /* \"#utility.yul\":1009:1015   */\n  0x00\n    /* \"#utility.yul\":1017:1023   */\n  dup1\n    /* \"#utility.yul\":1025:1031   */\n  0x00\n    /* \"#utility.yul\":1033:1039   */\n  dup1\n    /* \"#utility.yul\":1041:1047   */\n  0x00\n    /* \"#utility.yul\":1049:1055   */\n  dup1\n    /* \"#utility.yul\":1102:1105   */\n  0xc0\n    /* \"#utility.yul\":1090:1099   */\n  dup8\n    /* \"#utility.yul\":1081:1088   */\n  dup10\n    /* \"#utility.yul\":1077:1100   */\n  sub\n    /* \"#utility.yul\":1073:1106   */\n  slt\n    /* \"#utility.yul\":1070:1123   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":1119:1120   */\n  0x00\n    /* \"#utility.yul\":1116:1117   */\n  dup1\n    /* \"#utility.yul\":1109:1121   */\n  revert\n    /* \"#utility.yul\":1070:1123   */\ntag_78:\n    /* \"#utility.yul\":1146:1162   */\n  dup7\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1174:1204   */\n  dup2\n  gt\n    /* \"#utility.yul\":1171:1221   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":1217:1218   */\n  0x00\n    /* \"#utility.yul\":1214:1215   */\n  dup1\n    /* \"#utility.yul\":1207:1219   */\n  revert\n    /* \"#utility.yul\":1171:1221   */\ntag_79:\n    /* \"#utility.yul\":1240:1301   */\n  tag_80\n    /* \"#utility.yul\":1293:1300   */\n  dup10\n    /* \"#utility.yul\":1284:1290   */\n  dup3\n    /* \"#utility.yul\":1273:1282   */\n  dup11\n    /* \"#utility.yul\":1269:1291   */\n  add\n    /* \"#utility.yul\":1240:1301   */\n  tag_63\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1347:1349   */\n  0x20\n    /* \"#utility.yul\":1332:1350   */\n  dup10\n  add\n    /* \"#utility.yul\":1326:1351   */\n  mload\n    /* \"#utility.yul\":1230:1301   */\n  swap1\n  swap8\n  pop\n    /* \"#utility.yul\":1326:1351   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1363:1395   */\n  dup2\n  gt\n    /* \"#utility.yul\":1360:1412   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":1408:1409   */\n  0x00\n    /* \"#utility.yul\":1405:1406   */\n  dup1\n    /* \"#utility.yul\":1398:1410   */\n  revert\n    /* \"#utility.yul\":1360:1412   */\ntag_81:\n    /* \"#utility.yul\":1431:1494   */\n  tag_82\n    /* \"#utility.yul\":1486:1493   */\n  dup10\n    /* \"#utility.yul\":1475:1483   */\n  dup3\n    /* \"#utility.yul\":1464:1473   */\n  dup11\n    /* \"#utility.yul\":1460:1484   */\n  add\n    /* \"#utility.yul\":1431:1494   */\n  tag_63\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1556:1558   */\n  0x40\n    /* \"#utility.yul\":1541:1559   */\n  dup10\n  add\n    /* \"#utility.yul\":1535:1560   */\n  mload\n    /* \"#utility.yul\":1650:1652   */\n  0x60\n    /* \"#utility.yul\":1635:1653   */\n  dup11\n  add\n    /* \"#utility.yul\":1629:1654   */\n  mload\n    /* \"#utility.yul\":1746:1749   */\n  0x80\n    /* \"#utility.yul\":1731:1750   */\n  dup12\n  add\n    /* \"#utility.yul\":1725:1751   */\n  mload\n    /* \"#utility.yul\":1822:1825   */\n  0xa0\n    /* \"#utility.yul\":1807:1826   */\n  dup13\n  add\n    /* \"#utility.yul\":1801:1827   */\n  mload\n    /* \"#utility.yul\":1421:1494   */\n  swap4\n  swap10\n  pop\n    /* \"#utility.yul\":1535:1560   */\n  swap2\n  swap8\n  pop\n    /* \"#utility.yul\":1629:1654   */\n  swap6\n  pop\n    /* \"#utility.yul\":1725:1751   */\n  swap4\n  pop\n    /* \"#utility.yul\":1801:1827   */\n  swap1\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1858:1891   */\n  dup2\n  and\n    /* \"#utility.yul\":1846:1892   */\n  dup2\n  eq\n    /* \"#utility.yul\":1836:1910   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":1906:1907   */\n  0x00\n    /* \"#utility.yul\":1903:1904   */\n  dup1\n    /* \"#utility.yul\":1896:1908   */\n  revert\n    /* \"#utility.yul\":1836:1910   */\ntag_83:\n    /* \"#utility.yul\":1929:1936   */\n  dup1\n    /* \"#utility.yul\":1919:1936   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":874:1942   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":1947:2327   */\ntag_64:\n    /* \"#utility.yul\":2026:2027   */\n  0x01\n    /* \"#utility.yul\":2022:2034   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2069:2081   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2090:2151   */\n  tag_85\n  jumpi\n    /* \"#utility.yul\":2144:2148   */\n  0x7f\n    /* \"#utility.yul\":2136:2142   */\n  dup3\n    /* \"#utility.yul\":2132:2149   */\n  and\n    /* \"#utility.yul\":2122:2149   */\n  swap2\n  pop\n    /* \"#utility.yul\":2090:2151   */\ntag_85:\n    /* \"#utility.yul\":2197:2199   */\n  0x20\n    /* \"#utility.yul\":2189:2195   */\n  dup3\n    /* \"#utility.yul\":2186:2200   */\n  lt\n    /* \"#utility.yul\":2166:2184   */\n  dup2\n    /* \"#utility.yul\":2163:2201   */\n  sub\n    /* \"#utility.yul\":2160:2321   */\n  tag_86\n  jumpi\n    /* \"#utility.yul\":2243:2253   */\n  0x4e487b71\n    /* \"#utility.yul\":2238:2241   */\n  0xe0\n    /* \"#utility.yul\":2234:2254   */\n  shl\n    /* \"#utility.yul\":2231:2232   */\n  0x00\n    /* \"#utility.yul\":2224:2255   */\n  mstore\n    /* \"#utility.yul\":2278:2282   */\n  0x22\n    /* \"#utility.yul\":2275:2276   */\n  0x04\n    /* \"#utility.yul\":2268:2283   */\n  mstore\n    /* \"#utility.yul\":2306:2310   */\n  0x24\n    /* \"#utility.yul\":2303:2304   */\n  0x00\n    /* \"#utility.yul\":2296:2311   */\n  revert\n    /* \"#utility.yul\":2160:2321   */\ntag_86:\n  pop\n    /* \"#utility.yul\":1947:2327   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2458:2976   */\ntag_66:\n    /* \"#utility.yul\":2560:2562   */\n  0x1f\n    /* \"#utility.yul\":2555:2558   */\n  dup3\n    /* \"#utility.yul\":2552:2563   */\n  gt\n    /* \"#utility.yul\":2549:2970   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":2596:2601   */\n  dup1\n    /* \"#utility.yul\":2593:2594   */\n  0x00\n    /* \"#utility.yul\":2586:2602   */\n  mstore\n    /* \"#utility.yul\":2640:2644   */\n  0x20\n    /* \"#utility.yul\":2637:2638   */\n  0x00\n    /* \"#utility.yul\":2627:2645   */\n  keccak256\n    /* \"#utility.yul\":2710:2712   */\n  0x1f\n    /* \"#utility.yul\":2698:2708   */\n  dup5\n    /* \"#utility.yul\":2694:2713   */\n  add\n    /* \"#utility.yul\":2691:2692   */\n  0x05\n    /* \"#utility.yul\":2687:2714   */\n  shr\n    /* \"#utility.yul\":2681:2685   */\n  dup2\n    /* \"#utility.yul\":2677:2715   */\n  add\n    /* \"#utility.yul\":2746:2750   */\n  0x20\n    /* \"#utility.yul\":2734:2744   */\n  dup6\n    /* \"#utility.yul\":2731:2751   */\n  lt\n    /* \"#utility.yul\":2728:2775   */\n  iszero\n  tag_90\n  jumpi\n  pop\n    /* \"#utility.yul\":2769:2773   */\n  dup1\n    /* \"#utility.yul\":2728:2775   */\ntag_90:\n    /* \"#utility.yul\":2824:2826   */\n  0x1f\n    /* \"#utility.yul\":2819:2822   */\n  dup5\n    /* \"#utility.yul\":2815:2827   */\n  add\n    /* \"#utility.yul\":2812:2813   */\n  0x05\n    /* \"#utility.yul\":2808:2828   */\n  shr\n    /* \"#utility.yul\":2802:2806   */\n  dup3\n    /* \"#utility.yul\":2798:2829   */\n  add\n    /* \"#utility.yul\":2788:2829   */\n  swap2\n  pop\n    /* \"#utility.yul\":2879:2960   */\ntag_91:\n    /* \"#utility.yul\":2897:2899   */\n  dup2\n    /* \"#utility.yul\":2890:2895   */\n  dup2\n    /* \"#utility.yul\":2887:2900   */\n  lt\n    /* \"#utility.yul\":2879:2960   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":2956:2957   */\n  0x00\n    /* \"#utility.yul\":2942:2958   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2923:2924   */\n  0x01\n    /* \"#utility.yul\":2912:2925   */\n  add\n    /* \"#utility.yul\":2879:2960   */\n  jump(tag_91)\ntag_93:\n    /* \"#utility.yul\":2883:2886   */\n  pop\n  pop\n    /* \"#utility.yul\":2458:2976   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3152:4451   */\ntag_9:\n    /* \"#utility.yul\":3272:3282   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3294:3324   */\n  dup2\n  gt\n    /* \"#utility.yul\":3291:3347   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3327:3345   */\n  tag_97\n  tag_62\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3356:3453   */\n  tag_98\n    /* \"#utility.yul\":3446:3452   */\n  dup2\n    /* \"#utility.yul\":3406:3444   */\n  tag_99\n    /* \"#utility.yul\":3438:3442   */\n  dup5\n    /* \"#utility.yul\":3432:3443   */\n  sload\n    /* \"#utility.yul\":3406:3444   */\n  tag_64\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3400:3404   */\n  dup5\n    /* \"#utility.yul\":3356:3453   */\n  tag_66\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3502:3506   */\n  0x20\n    /* \"#utility.yul\":3533:3535   */\n  0x1f\n    /* \"#utility.yul\":3522:3536   */\n  dup3\n  gt\n    /* \"#utility.yul\":3550:3551   */\n  0x01\n    /* \"#utility.yul\":3545:4194   */\n  dup2\n  eq\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4238:4239   */\n  0x00\n    /* \"#utility.yul\":4255:4261   */\n  dup4\n    /* \"#utility.yul\":4252:4341   */\n  iszero\n  tag_102\n  jumpi\n  pop\n    /* \"#utility.yul\":4307:4326   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":4301:4327   */\n  mload\n    /* \"#utility.yul\":4252:4341   */\ntag_102:\n  not(0x00)\n    /* \"#utility.yul\":3109:3110   */\n  0x03\n    /* \"#utility.yul\":3105:3116   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3101:3125   */\n  shr\n    /* \"#utility.yul\":3097:3126   */\n  not\n    /* \"#utility.yul\":3087:3127   */\n  and\n    /* \"#utility.yul\":3133:3134   */\n  0x01\n    /* \"#utility.yul\":3129:3140   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":3084:3141   */\n  or\n    /* \"#utility.yul\":4354:4435   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3515:4445   */\n  jump(tag_93)\n    /* \"#utility.yul\":3545:4194   */\ntag_101:\n    /* \"#utility.yul\":2405:2406   */\n  0x00\n    /* \"#utility.yul\":2398:2412   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2442:2446   */\n  0x20\n    /* \"#utility.yul\":2429:2447   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3581:3601   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3699:3921   */\ntag_105:\n    /* \"#utility.yul\":3713:3720   */\n  dup3\n    /* \"#utility.yul\":3710:3711   */\n  dup2\n    /* \"#utility.yul\":3707:3721   */\n  lt\n    /* \"#utility.yul\":3699:3921   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":3795:3814   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3789:3815   */\n  mload\n    /* \"#utility.yul\":3774:3816   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3902:3906   */\n  0x20\n    /* \"#utility.yul\":3887:3907   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3855:3856   */\n  0x01\n    /* \"#utility.yul\":3843:3857   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3729:3741   */\n  add\n    /* \"#utility.yul\":3699:3921   */\n  jump(tag_105)\ntag_107:\n    /* \"#utility.yul\":3703:3706   */\n  pop\n    /* \"#utility.yul\":3949:3955   */\n  dup5\n    /* \"#utility.yul\":3940:3947   */\n  dup3\n    /* \"#utility.yul\":3937:3956   */\n  lt\n    /* \"#utility.yul\":3934:4135   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":4010:4029   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":4004:4030   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4093:4094   */\n  0x03\n    /* \"#utility.yul\":4089:4103   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":4105:4108   */\n  0xf8\n    /* \"#utility.yul\":4085:4109   */\n  and\n    /* \"#utility.yul\":4081:4118   */\n  shr\n    /* \"#utility.yul\":4077:4119   */\n  not\n    /* \"#utility.yul\":4062:4120   */\n  and\n    /* \"#utility.yul\":4047:4121   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3934:4135   */\ntag_108:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4181:4182   */\n  0x01\n    /* \"#utility.yul\":4165:4179   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4161:4183   */\n  add\n    /* \"#utility.yul\":4148:4184   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3152:4451   */\n  jump\t// out\n    /* \"#utility.yul\":6223:6445   */\ntag_52:\n    /* \"#utility.yul\":6288:6297   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":6309:6319   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":6306:6439   */\n  iszero\n  tag_115\n  jumpi\n    /* \"#utility.yul\":6361:6371   */\n  0x4e487b71\n    /* \"#utility.yul\":6356:6359   */\n  0xe0\n    /* \"#utility.yul\":6352:6372   */\n  shl\n    /* \"#utility.yul\":6349:6350   */\n  0x00\n    /* \"#utility.yul\":6342:6373   */\n  mstore\n    /* \"#utility.yul\":6396:6400   */\n  0x11\n    /* \"#utility.yul\":6393:6394   */\n  0x04\n    /* \"#utility.yul\":6386:6401   */\n  mstore\n    /* \"#utility.yul\":6424:6428   */\n  0x24\n    /* \"#utility.yul\":6421:6422   */\n  0x00\n    /* \"#utility.yul\":6414:6429   */\n  revert\n    /* \"#utility.yul\":6306:6439   */\ntag_115:\n    /* \"#utility.yul\":6223:6445   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6800:6977   */\ntag_68:\n    /* \"contracts/BasicVestingGovernanceToken.sol\":303:2884  contract BasicVestingGovernanceToken is ERC20, ERC20Burnable, Ownable {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0996217b5bd56d5d4e65aa105bb02b59e7c2556b5b3d7f7f3baaee6777207758\")\n  0x00\n  assignImmutable(\"0x574c9b24b1330b680473d85a29c8e5ee10c43b3c92431d577a8acff668b9d6f0\")\n  0x00\n  assignImmutable(\"0x2470008a7122f3980884751511290e12d66a3210a88591c6a718f11411dff3c9\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/BasicVestingGovernanceToken.sol\":303:2884  contract BasicVestingGovernanceToken is ERC20, ERC20Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa8660a78\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa8660a78\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf4eb90a6\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9de5a561\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x313ce567\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4b8f1ef0\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x54dd1da4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1514617e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_28\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"contracts/BasicVestingGovernanceToken.sol\":460:500  uint256 public immutable vestingDuration */\n    tag_5:\n      tag_36\n      immutable(\"0x574c9b24b1330b680473d85a29c8e5ee10c43b3c92431d577a8acff668b9d6f0\")\n      dup2\n      jump\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"contracts/BasicVestingGovernanceToken.sol\":460:500  uint256 public immutable vestingDuration */\n      tag_28\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_36)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_30\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      tag_28\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_9:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/BasicVestingGovernanceToken.sol\":556:590  uint256 public totalVestedReleased */\n    tag_10:\n      tag_36\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2092:2583  function releaseVestedTokens() public onlyOwner {... */\n    tag_11:\n      tag_52\n      tag_60\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_36\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_52\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_14:\n      tag_52\n      tag_69\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2430:2481   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2418:2420   */\n      0x20\n        /* \"#utility.yul\":2403:2421   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_28\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_26\n      tag_76\n      jump\t// in\n        /* \"contracts/BasicVestingGovernanceToken.sol\":507:549  uint256 public immutable totalVestedSupply */\n    tag_17:\n      tag_36\n      immutable(\"0x0996217b5bd56d5d4e65aa105bb02b59e7c2556b5b3d7f7f3baaee6777207758\")\n      dup2\n      jump\n        /* \"contracts/BasicVestingGovernanceToken.sol\":413:454  uint256 public immutable vestingStartTime */\n    tag_18:\n      tag_36\n      immutable(\"0x2470008a7122f3980884751511290e12d66a3210a88591c6a718f11411dff3c9\")\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_19:\n      tag_30\n      tag_85\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_20:\n      tag_36\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_52\n      tag_94\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1679:2086  function currentlyVested() public view returns (uint256) {... */\n    tag_22:\n      tag_36\n      tag_97\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_102\n      swap1\n      tag_101\n      jump\t// in\n    tag_102:\n      dup1\n      iszero\n      tag_103\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_104\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_103)\n    tag_104:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_105:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_105\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_109\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_106:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_116:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_120\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2092:2583  function releaseVestedTokens() public onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_124:\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2150:2175  uint256 totalVestedAmount */\n      0x00\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2178:2195  currentlyVested() */\n      tag_127\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2178:2193  currentlyVested */\n      tag_97\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2178:2195  currentlyVested() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2150:2195  uint256 totalVestedAmount = currentlyVested() */\n      swap1\n      pop\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2234:2253  totalVestedReleased */\n      sload(0x06)\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2214:2231  totalVestedAmount */\n      dup2\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2214:2253  totalVestedAmount > totalVestedReleased */\n      gt\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2206:2292  require(totalVestedAmount > totalVestedReleased, \"Vesting: no new tokens have vested\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3344:3346   */\n      0x20\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2206:2292  require(totalVestedAmount > totalVestedReleased, \"Vesting: no new tokens have vested\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3326:3347   */\n      mstore\n        /* \"#utility.yul\":3383:3385   */\n      0x22\n        /* \"#utility.yul\":3363:3381   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3356:3386   */\n      mstore\n        /* \"#utility.yul\":3422:3456   */\n      0x56657374696e673a206e6f206e657720746f6b656e7320686176652076657374\n        /* \"#utility.yul\":3402:3420   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3395:3457   */\n      mstore\n      shl(0xf2, 0x1959)\n        /* \"#utility.yul\":3473:3491   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3466:3498   */\n      mstore\n        /* \"#utility.yul\":3515:3534   */\n      0x84\n      add\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2206:2292  require(totalVestedAmount > totalVestedReleased, \"Vesting: no new tokens have vested\") */\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2303:2326  uint256 amountToRelease */\n      0x00\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2329:2371  totalVestedAmount.sub(totalVestedReleased) */\n      tag_131\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2351:2370  totalVestedReleased */\n      sload(0x06)\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2329:2346  totalVestedAmount */\n      dup4\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2329:2350  totalVestedAmount.sub */\n      tag_132\n      swap1\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2329:2371  totalVestedAmount.sub(totalVestedReleased) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_131:\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2404:2423  totalVestedReleased */\n      sload(0x06)\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2303:2371  uint256 amountToRelease = totalVestedAmount.sub(totalVestedReleased) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2404:2444  totalVestedReleased.add(amountToRelease) */\n      tag_133\n      swap1\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2303:2371  uint256 amountToRelease = totalVestedAmount.sub(totalVestedReleased) */\n      dup3\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2404:2427  totalVestedReleased.add */\n      tag_134\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2404:2444  totalVestedReleased.add(amountToRelease) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2382:2401  totalVestedReleased */\n      0x06\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2382:2444  totalVestedReleased = totalVestedReleased.add(amountToRelease) */\n      sstore\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2455:2505  _transfer(address(this), owner(), amountToRelease) */\n      tag_135\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2473:2477  this */\n      address\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2480:2487  owner() */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2480:2487  owner() */\n    tag_136:\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2489:2504  amountToRelease */\n      dup4\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2455:2464  _transfer */\n      tag_117\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2455:2505  _transfer(address(this), owner(), amountToRelease) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2530:2576  VestedTokensReleased(owner(), amountToRelease) */\n      and\n      0x6bc5063c7239b75c8bf325a2a2238f726fada322163996bb6c93d5594fb119f0\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2560:2575  amountToRelease */\n      dup3\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2530:2576  VestedTokensReleased(owner(), amountToRelease) */\n      mload(0x40)\n      tag_138\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2530:2576  VestedTokensReleased(owner(), amountToRelease) */\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2140:2583  {... */\n      pop\n      pop\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2092:2583  function releaseVestedTokens() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_109\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_129\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1679:2086  function currentlyVested() public view returns (uint256) {... */\n    tag_97:\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1727:1734  uint256 */\n      0x00\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1769:1785  vestingStartTime */\n      immutable(\"0x2470008a7122f3980884751511290e12d66a3210a88591c6a718f11411dff3c9\")\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1751:1766  block.timestamp */\n      timestamp\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1751:1785  block.timestamp < vestingStartTime */\n      lt\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1751:1809  block.timestamp < vestingStartTime || vestingDuration == 0 */\n      dup1\n      tag_167\n      jumpi\n      pop\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1789:1804  vestingDuration */\n      immutable(\"0x574c9b24b1330b680473d85a29c8e5ee10c43b3c92431d577a8acff668b9d6f0\")\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1789:1809  vestingDuration == 0 */\n      iszero\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1751:1809  block.timestamp < vestingStartTime || vestingDuration == 0 */\n    tag_167:\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1747:1844  if (block.timestamp < vestingStartTime || vestingDuration == 0) {... */\n      iszero\n      tag_168\n      jumpi\n      pop\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1832:1833  0 */\n      0x00\n      swap1\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1679:2086  function currentlyVested() public view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1747:1844  if (block.timestamp < vestingStartTime || vestingDuration == 0) {... */\n    tag_168:\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1854:1870  uint timeElapsed */\n      0x00\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1873:1910  block.timestamp.sub(vestingStartTime) */\n      tag_169\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1873:1888  block.timestamp */\n      timestamp\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1893:1909  vestingStartTime */\n      immutable(\"0x2470008a7122f3980884751511290e12d66a3210a88591c6a718f11411dff3c9\")\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1873:1892  block.timestamp.sub */\n      tag_132\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1873:1910  block.timestamp.sub(vestingStartTime) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1854:1910  uint timeElapsed = block.timestamp.sub(vestingStartTime) */\n      swap1\n      pop\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1940:1955  vestingDuration */\n      immutable(\"0x574c9b24b1330b680473d85a29c8e5ee10c43b3c92431d577a8acff668b9d6f0\")\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1925:1936  timeElapsed */\n      dup2\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1925:1955  timeElapsed >= vestingDuration */\n      lt\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1921:2006  if (timeElapsed >= vestingDuration) {... */\n      tag_170\n      jumpi\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1978:1995  totalVestedSupply */\n      immutable(\"0x0996217b5bd56d5d4e65aa105bb02b59e7c2556b5b3d7f7f3baaee6777207758\")\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1971:1995  return totalVestedSupply */\n      swap2\n      pop\n      pop\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1679:2086  function currentlyVested() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1921:2006  if (timeElapsed >= vestingDuration) {... */\n    tag_170:\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2023:2078  totalVestedSupply.mul(timeElapsed).div(vestingDuration) */\n      tag_171\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2062:2077  vestingDuration */\n      immutable(\"0x574c9b24b1330b680473d85a29c8e5ee10c43b3c92431d577a8acff668b9d6f0\")\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2023:2057  totalVestedSupply.mul(timeElapsed) */\n      tag_172\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2023:2040  totalVestedSupply */\n      immutable(\"0x0996217b5bd56d5d4e65aa105bb02b59e7c2556b5b3d7f7f3baaee6777207758\")\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2045:2056  timeElapsed */\n      dup5\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2023:2044  totalVestedSupply.mul */\n      tag_173\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2023:2057  totalVestedSupply.mul(timeElapsed) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2023:2061  totalVestedSupply.mul(timeElapsed).div */\n      swap1\n      tag_174\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2023:2078  totalVestedSupply.mul(timeElapsed).div(vestingDuration) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2016:2078  return totalVestedSupply.mul(timeElapsed).div(vestingDuration) */\n      swap2\n      pop\n      pop\n        /* \"contracts/BasicVestingGovernanceToken.sol\":1679:2086  function currentlyVested() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3765:3797   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3747:3798   */\n      mstore\n        /* \"#utility.yul\":3814:3832   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3807:3841   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3857:3875   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3850:3884   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3720:3738   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_129\n        /* \"#utility.yul\":3545:3890   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      tag_129\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      tag_129\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      tag_129\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_129\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_204\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_204\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_208\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_204\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_212\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_204\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_215\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      tag_129\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_217:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      tag_129\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_222\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2590:2880  function _update(address from, address to, uint256 amount) internal virtual override{... */\n    tag_192:\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2685:2716  super._update(from, to, amount) */\n      tag_224\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2699:2703  from */\n      dup4\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2705:2707  to */\n      dup4\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2709:2715  amount */\n      dup4\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2685:2698  super._update */\n      tag_225\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2685:2716  super._update(from, to, amount) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2747:2751  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2731:2752  from == address(this) */\n      dup5\n      and\n      sub\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2727:2873  if (from == address(this)) {... */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2776:2789  to == owner() */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap2\n      and\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2776:2789  to == owner() */\n      eq\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2776:2814  to == owner() && msg.sender == owner() */\n      dup1\n      iszero\n      tag_228\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2793:2803  msg.sender */\n      caller\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2793:2814  msg.sender == owner() */\n      eq\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2776:2814  to == owner() && msg.sender == owner() */\n    tag_228:\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2768:2862  require(to == owner() && msg.sender == owner(), \"ERC20: cannot transfer locked vested tokens\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4887:4889   */\n      0x20\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2768:2862  require(to == owner() && msg.sender == owner(), \"ERC20: cannot transfer locked vested tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4869:4890   */\n      mstore\n        /* \"#utility.yul\":4926:4928   */\n      0x2b\n        /* \"#utility.yul\":4906:4924   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4899:4929   */\n      mstore\n        /* \"#utility.yul\":4965:4999   */\n      0x45524332303a2063616e6e6f74207472616e73666572206c6f636b6564207665\n        /* \"#utility.yul\":4945:4963   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4938:5000   */\n      mstore\n      shl(0xa8, 0x7374656420746f6b656e73)\n        /* \"#utility.yul\":5016:5034   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5009:5050   */\n      mstore\n        /* \"#utility.yul\":5067:5086   */\n      0x84\n      add\n        /* \"contracts/BasicVestingGovernanceToken.sol\":2768:2862  require(to == owner() && msg.sender == owner(), \"ERC20: cannot transfer locked vested tokens\") */\n      tag_129\n        /* \"#utility.yul\":4685:5092   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_235\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_235:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_236\n      swap1\n      pop\n      jump\n    tag_234:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3765:3797   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3747:3798   */\n      mstore\n        /* \"#utility.yul\":3814:3832   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3807:3841   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3857:3875   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3850:3884   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3720:3738   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_129\n        /* \"#utility.yul\":3545:3890   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_236:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_240)\n    tag_239:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_241\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:432   */\n    tag_29:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_242:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_247:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_32:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_249:\n        /* \"#utility.yul\":783:812   */\n      tag_250\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_242\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_45:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      dup1\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      dup1\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_254:\n        /* \"#utility.yul\":1479:1508   */\n      tag_255\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_242\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_256\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_242\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2088   */\n    tag_54:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      dup1\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_259:\n      pop\n        /* \"#utility.yul\":2035:2058   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1862:2088   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2093:2279   */\n    tag_63:\n        /* \"#utility.yul\":2152:2158   */\n      0x00\n        /* \"#utility.yul\":2205:2207   */\n      0x20\n        /* \"#utility.yul\":2193:2202   */\n      dup3\n        /* \"#utility.yul\":2184:2191   */\n      dup5\n        /* \"#utility.yul\":2180:2203   */\n      sub\n        /* \"#utility.yul\":2176:2208   */\n      slt\n        /* \"#utility.yul\":2173:2225   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":2221:2222   */\n      0x00\n        /* \"#utility.yul\":2218:2219   */\n      dup1\n        /* \"#utility.yul\":2211:2223   */\n      revert\n        /* \"#utility.yul\":2173:2225   */\n    tag_261:\n        /* \"#utility.yul\":2244:2273   */\n      tag_204\n        /* \"#utility.yul\":2263:2272   */\n      dup3\n        /* \"#utility.yul\":2244:2273   */\n      tag_242\n      jump\t// in\n        /* \"#utility.yul\":2492:2752   */\n    tag_90:\n        /* \"#utility.yul\":2560:2566   */\n      0x00\n        /* \"#utility.yul\":2568:2574   */\n      dup1\n        /* \"#utility.yul\":2621:2623   */\n      0x40\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2600:2607   */\n      dup6\n        /* \"#utility.yul\":2596:2619   */\n      sub\n        /* \"#utility.yul\":2592:2624   */\n      slt\n        /* \"#utility.yul\":2589:2641   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":2637:2638   */\n      0x00\n        /* \"#utility.yul\":2634:2635   */\n      dup1\n        /* \"#utility.yul\":2627:2639   */\n      revert\n        /* \"#utility.yul\":2589:2641   */\n    tag_265:\n        /* \"#utility.yul\":2660:2689   */\n      tag_266\n        /* \"#utility.yul\":2679:2688   */\n      dup4\n        /* \"#utility.yul\":2660:2689   */\n      tag_242\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":2650:2689   */\n      swap2\n      pop\n        /* \"#utility.yul\":2708:2746   */\n      tag_267\n        /* \"#utility.yul\":2742:2744   */\n      0x20\n        /* \"#utility.yul\":2731:2740   */\n      dup5\n        /* \"#utility.yul\":2727:2745   */\n      add\n        /* \"#utility.yul\":2708:2746   */\n      tag_242\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2698:2746   */\n      swap1\n      pop\n        /* \"#utility.yul\":2492:2752   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2757:3137   */\n    tag_101:\n        /* \"#utility.yul\":2836:2837   */\n      0x01\n        /* \"#utility.yul\":2832:2844   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2879:2891   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2900:2961   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":2954:2958   */\n      0x7f\n        /* \"#utility.yul\":2946:2952   */\n      dup3\n        /* \"#utility.yul\":2942:2959   */\n      and\n        /* \"#utility.yul\":2932:2959   */\n      swap2\n      pop\n        /* \"#utility.yul\":2900:2961   */\n    tag_269:\n        /* \"#utility.yul\":3007:3009   */\n      0x20\n        /* \"#utility.yul\":2999:3005   */\n      dup3\n        /* \"#utility.yul\":2996:3010   */\n      lt\n        /* \"#utility.yul\":2976:2994   */\n      dup2\n        /* \"#utility.yul\":2973:3011   */\n      sub\n        /* \"#utility.yul\":2970:3131   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3053:3063   */\n      0x4e487b71\n        /* \"#utility.yul\":3048:3051   */\n      0xe0\n        /* \"#utility.yul\":3044:3064   */\n      shl\n        /* \"#utility.yul\":3041:3042   */\n      0x00\n        /* \"#utility.yul\":3034:3065   */\n      mstore\n        /* \"#utility.yul\":3088:3092   */\n      0x22\n        /* \"#utility.yul\":3085:3086   */\n      0x04\n        /* \"#utility.yul\":3078:3093   */\n      mstore\n        /* \"#utility.yul\":3116:3120   */\n      0x24\n        /* \"#utility.yul\":3113:3114   */\n      0x00\n        /* \"#utility.yul\":3106:3121   */\n      revert\n        /* \"#utility.yul\":2970:3131   */\n    tag_270:\n      pop\n        /* \"#utility.yul\":2757:3137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3895:4022   */\n    tag_243:\n        /* \"#utility.yul\":3956:3966   */\n      0x4e487b71\n        /* \"#utility.yul\":3951:3954   */\n      0xe0\n        /* \"#utility.yul\":3947:3967   */\n      shl\n        /* \"#utility.yul\":3944:3945   */\n      0x00\n        /* \"#utility.yul\":3937:3968   */\n      mstore\n        /* \"#utility.yul\":3987:3991   */\n      0x11\n        /* \"#utility.yul\":3984:3985   */\n      0x04\n        /* \"#utility.yul\":3977:3992   */\n      mstore\n        /* \"#utility.yul\":4011:4015   */\n      0x24\n        /* \"#utility.yul\":4008:4009   */\n      0x00\n        /* \"#utility.yul\":4001:4016   */\n      revert\n        /* \"#utility.yul\":4027:4155   */\n    tag_205:\n        /* \"#utility.yul\":4094:4103   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4115:4126   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4112:4149   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":4129:4147   */\n      tag_106\n      tag_243\n      jump\t// in\n        /* \"#utility.yul\":4160:4285   */\n    tag_208:\n        /* \"#utility.yul\":4225:4234   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4246:4256   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4243:4279   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":4259:4277   */\n      tag_106\n      tag_243\n      jump\t// in\n        /* \"#utility.yul\":4290:4458   */\n    tag_212:\n        /* \"#utility.yul\":4363:4372   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":4394:4403   */\n      dup2\n      iszero\n        /* \"#utility.yul\":4411:4426   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":4405:4427   */\n      dup5\n      eq\n        /* \"#utility.yul\":4391:4428   */\n      or\n        /* \"#utility.yul\":4381:4452   */\n      tag_106\n      jumpi\n        /* \"#utility.yul\":4432:4450   */\n      tag_106\n      tag_243\n      jump\t// in\n        /* \"#utility.yul\":4463:4680   */\n    tag_215:\n        /* \"#utility.yul\":4503:4504   */\n      0x00\n        /* \"#utility.yul\":4529:4530   */\n      dup3\n        /* \"#utility.yul\":4519:4651   */\n      tag_284\n      jumpi\n        /* \"#utility.yul\":4573:4583   */\n      0x4e487b71\n        /* \"#utility.yul\":4568:4571   */\n      0xe0\n        /* \"#utility.yul\":4564:4584   */\n      shl\n        /* \"#utility.yul\":4561:4562   */\n      0x00\n        /* \"#utility.yul\":4554:4585   */\n      mstore\n        /* \"#utility.yul\":4608:4612   */\n      0x12\n        /* \"#utility.yul\":4605:4606   */\n      0x04\n        /* \"#utility.yul\":4598:4613   */\n      mstore\n        /* \"#utility.yul\":4636:4640   */\n      0x24\n        /* \"#utility.yul\":4633:4634   */\n      0x00\n        /* \"#utility.yul\":4626:4641   */\n      revert\n        /* \"#utility.yul\":4519:4651   */\n    tag_284:\n      pop\n        /* \"#utility.yul\":4665:4674   */\n      div\n      swap1\n        /* \"#utility.yul\":4463:4680   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c9b3c575d73941a6363605c80751b333f5002709ac8b48e0acad56782e2cda7e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1410": {
									"entryPoint": null,
									"id": 1410,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 544,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 463,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1540": {
									"entryPoint": 600,
									"id": 1540,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 767,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 1081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 1218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c4e3f56c63b99e5f1e017a620bd5f0fa05418f38cd7049c2efd2169eacdd91c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b776372014ba1d8e41c23ff5d54fb0f087b4c983ecc3b5ff5f98a64e6a6cf785__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da95245a3a691f5cc8d6f7432704e2d6fdf5a5f9d9cd50381124f13d88a34d08__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1435,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6979:9",
										"nodeType": "YulBlock",
										"src": "0:6979:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:9",
													"nodeType": "YulBlock",
													"src": "46:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:9",
																		"nodeType": "YulLiteral",
																		"src": "63:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:9",
																				"nodeType": "YulLiteral",
																				"src": "70:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:9",
																				"nodeType": "YulLiteral",
																				"src": "75:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:9"
																		},
																		"nativeSrc": "66:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:9"
																},
																"nativeSrc": "56:31:9",
																"nodeType": "YulFunctionCall",
																"src": "56:31:9"
															},
															"nativeSrc": "56:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:9",
																		"nodeType": "YulLiteral",
																		"src": "103:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:9",
																		"nodeType": "YulLiteral",
																		"src": "106:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:9"
																},
																"nativeSrc": "96:15:9",
																"nodeType": "YulFunctionCall",
																"src": "96:15:9"
															},
															"nativeSrc": "96:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:9",
																		"nodeType": "YulLiteral",
																		"src": "127:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:9",
																		"nodeType": "YulLiteral",
																		"src": "130:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:9"
																},
																"nativeSrc": "120:15:9",
																"nodeType": "YulFunctionCall",
																"src": "120:15:9"
															},
															"nativeSrc": "120:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:9"
											},
											{
												"body": {
													"nativeSrc": "210:659:9",
													"nodeType": "YulBlock",
													"src": "210:659:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:9",
																"nodeType": "YulBlock",
																"src": "259:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:9",
																					"nodeType": "YulLiteral",
																					"src": "268:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:9",
																					"nodeType": "YulLiteral",
																					"src": "271:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:9"
																			},
																			"nativeSrc": "261:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:9"
																		},
																		"nativeSrc": "261:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:9",
																						"nodeType": "YulLiteral",
																						"src": "246:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:9"
																				},
																				"nativeSrc": "234:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:9"
																		},
																		"nativeSrc": "230:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:9"
																},
																"nativeSrc": "223:35:9",
																"nodeType": "YulFunctionCall",
																"src": "223:35:9"
															},
															"nativeSrc": "220:55:9",
															"nodeType": "YulIf",
															"src": "220:55:9"
														},
														{
															"nativeSrc": "284:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:9"
																},
																"nativeSrc": "298:13:9",
																"nodeType": "YulFunctionCall",
																"src": "298:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:9",
																	"nodeType": "YulTypedName",
																	"src": "288:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:9",
																"nodeType": "YulBlock",
																"src": "354:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:9"
																			},
																			"nativeSrc": "356:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:9"
																		},
																		"nativeSrc": "356:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:9",
																						"nodeType": "YulLiteral",
																						"src": "342:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:9",
																						"nodeType": "YulLiteral",
																						"src": "346:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:9"
																				},
																				"nativeSrc": "338:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:9",
																				"nodeType": "YulLiteral",
																				"src": "350:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:9"
																		},
																		"nativeSrc": "334:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:9"
																},
																"nativeSrc": "323:30:9",
																"nodeType": "YulFunctionCall",
																"src": "323:30:9"
															},
															"nativeSrc": "320:56:9",
															"nodeType": "YulIf",
															"src": "320:56:9"
														},
														{
															"nativeSrc": "385:23:9",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:9",
																		"nodeType": "YulLiteral",
																		"src": "405:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:9"
																},
																"nativeSrc": "399:9:9",
																"nodeType": "YulFunctionCall",
																"src": "399:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:9",
																	"nodeType": "YulTypedName",
																	"src": "389:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:9",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:9",
																										"nodeType": "YulLiteral",
																										"src": "471:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:9"
																								},
																								"nativeSrc": "459:17:9",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:9",
																										"nodeType": "YulLiteral",
																										"src": "482:2:9",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:9"
																								},
																								"nativeSrc": "478:7:9",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:9"
																						},
																						"nativeSrc": "455:31:9",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:9",
																						"nodeType": "YulLiteral",
																						"src": "488:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:9"
																				},
																				"nativeSrc": "451:40:9",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:9",
																						"nodeType": "YulLiteral",
																						"src": "497:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:9"
																				},
																				"nativeSrc": "493:7:9",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:9"
																		},
																		"nativeSrc": "447:54:9",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:9"
																},
																"nativeSrc": "435:67:9",
																"nodeType": "YulFunctionCall",
																"src": "435:67:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:9",
																	"nodeType": "YulTypedName",
																	"src": "421:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:9",
																"nodeType": "YulBlock",
																"src": "577:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:9"
																			},
																			"nativeSrc": "579:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:9"
																		},
																		"nativeSrc": "579:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:9",
																								"nodeType": "YulLiteral",
																								"src": "540:2:9",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:9",
																								"nodeType": "YulLiteral",
																								"src": "544:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:9"
																						},
																						"nativeSrc": "536:10:9",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:9",
																						"nodeType": "YulLiteral",
																						"src": "548:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:9"
																				},
																				"nativeSrc": "532:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:9"
																		},
																		"nativeSrc": "517:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:9"
																		},
																		"nativeSrc": "553:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:9"
																},
																"nativeSrc": "514:62:9",
																"nodeType": "YulFunctionCall",
																"src": "514:62:9"
															},
															"nativeSrc": "511:88:9",
															"nodeType": "YulIf",
															"src": "511:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:9",
																		"nodeType": "YulLiteral",
																		"src": "615:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:9"
																},
																"nativeSrc": "608:22:9",
																"nodeType": "YulFunctionCall",
																"src": "608:22:9"
															},
															"nativeSrc": "608:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:9"
																},
																"nativeSrc": "639:22:9",
																"nodeType": "YulFunctionCall",
																"src": "639:22:9"
															},
															"nativeSrc": "639:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:9"
														},
														{
															"body": {
																"nativeSrc": "713:16:9",
																"nodeType": "YulBlock",
																"src": "713:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:9",
																					"nodeType": "YulLiteral",
																					"src": "722:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:9",
																					"nodeType": "YulLiteral",
																					"src": "725:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:9"
																			},
																			"nativeSrc": "715:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:9"
																		},
																		"nativeSrc": "715:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:9"
																				},
																				"nativeSrc": "680:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:9",
																				"nodeType": "YulLiteral",
																				"src": "701:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:9"
																		},
																		"nativeSrc": "676:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:9"
																},
																"nativeSrc": "673:39:9",
																"nodeType": "YulFunctionCall",
																"src": "673:39:9"
															},
															"nativeSrc": "670:59:9",
															"nodeType": "YulIf",
															"src": "670:59:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "748:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "756:4:9",
																				"nodeType": "YulLiteral",
																				"src": "756:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "744:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "744:3:9"
																		},
																		"nativeSrc": "744:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "744:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "767:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:4:9",
																				"nodeType": "YulLiteral",
																				"src": "775:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:9"
																		},
																		"nativeSrc": "763:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "763:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "782:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "738:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "738:5:9"
																},
																"nativeSrc": "738:51:9",
																"nodeType": "YulFunctionCall",
																"src": "738:51:9"
															},
															"nativeSrc": "738:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "738:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "813:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "813:6:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "821:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "821:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "809:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "809:3:9"
																				},
																				"nativeSrc": "809:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "809:19:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "830:4:9",
																				"nodeType": "YulLiteral",
																				"src": "830:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "805:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:9"
																		},
																		"nativeSrc": "805:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "805:30:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "837:1:9",
																		"nodeType": "YulLiteral",
																		"src": "837:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "798:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:9"
																},
																"nativeSrc": "798:41:9",
																"nodeType": "YulFunctionCall",
																"src": "798:41:9"
															},
															"nativeSrc": "798:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "798:41:9"
														},
														{
															"nativeSrc": "848:15:9",
															"nodeType": "YulAssignment",
															"src": "848:15:9",
															"value": {
																"name": "memPtr",
																"nativeSrc": "857:6:9",
																"nodeType": "YulIdentifier",
																"src": "857:6:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "848:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "848:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:723:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:9",
														"nodeType": "YulTypedName",
														"src": "184:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:9",
														"nodeType": "YulTypedName",
														"src": "192:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:9",
														"nodeType": "YulTypedName",
														"src": "200:5:9",
														"type": ""
													}
												],
												"src": "146:723:9"
											},
											{
												"body": {
													"nativeSrc": "1060:882:9",
													"nodeType": "YulBlock",
													"src": "1060:882:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1107:16:9",
																"nodeType": "YulBlock",
																"src": "1107:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1116:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1116:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1119:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1119:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1109:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1109:6:9"
																			},
																			"nativeSrc": "1109:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1109:12:9"
																		},
																		"nativeSrc": "1109:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1109:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1081:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1090:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1090:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1077:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1077:3:9"
																		},
																		"nativeSrc": "1077:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1077:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:3:9",
																		"nodeType": "YulLiteral",
																		"src": "1102:3:9",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1073:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1073:3:9"
																},
																"nativeSrc": "1073:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1073:33:9"
															},
															"nativeSrc": "1070:53:9",
															"nodeType": "YulIf",
															"src": "1070:53:9"
														},
														{
															"nativeSrc": "1132:30:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1132:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1152:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1152:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1146:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1146:5:9"
																},
																"nativeSrc": "1146:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1146:16:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1136:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1136:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1205:16:9",
																"nodeType": "YulBlock",
																"src": "1205:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1214:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1214:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1217:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1217:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1207:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1207:6:9"
																			},
																			"nativeSrc": "1207:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1207:12:9"
																		},
																		"nativeSrc": "1207:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1207:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1177:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1177:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1193:2:9",
																						"nodeType": "YulLiteral",
																						"src": "1193:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1197:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1197:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1189:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1189:3:9"
																				},
																				"nativeSrc": "1189:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1189:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1201:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1201:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1185:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1185:3:9"
																		},
																		"nativeSrc": "1185:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1185:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1174:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1174:2:9"
																},
																"nativeSrc": "1174:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1174:30:9"
															},
															"nativeSrc": "1171:50:9",
															"nodeType": "YulIf",
															"src": "1171:50:9"
														},
														{
															"nativeSrc": "1230:71:9",
															"nodeType": "YulAssignment",
															"src": "1230:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1273:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1273:9:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1284:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1284:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1269:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1269:3:9"
																		},
																		"nativeSrc": "1269:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1269:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1293:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "1293:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1240:28:9",
																	"nodeType": "YulIdentifier",
																	"src": "1240:28:9"
																},
																"nativeSrc": "1240:61:9",
																"nodeType": "YulFunctionCall",
																"src": "1240:61:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1230:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1230:6:9"
																}
															]
														},
														{
															"nativeSrc": "1310:41:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1310:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1336:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1336:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1347:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1347:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1332:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1332:3:9"
																		},
																		"nativeSrc": "1332:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1332:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1326:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1326:5:9"
																},
																"nativeSrc": "1326:25:9",
																"nodeType": "YulFunctionCall",
																"src": "1326:25:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1314:8:9",
																	"nodeType": "YulTypedName",
																	"src": "1314:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1396:16:9",
																"nodeType": "YulBlock",
																"src": "1396:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1405:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1405:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1408:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1408:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1398:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:9"
																			},
																			"nativeSrc": "1398:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1398:12:9"
																		},
																		"nativeSrc": "1398:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1398:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1366:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "1366:8:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1384:2:9",
																						"nodeType": "YulLiteral",
																						"src": "1384:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1388:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1388:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1380:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1380:3:9"
																				},
																				"nativeSrc": "1380:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1380:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1392:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1392:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1376:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1376:3:9"
																		},
																		"nativeSrc": "1376:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1376:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1363:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1363:2:9"
																},
																"nativeSrc": "1363:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1363:32:9"
															},
															"nativeSrc": "1360:52:9",
															"nodeType": "YulIf",
															"src": "1360:52:9"
														},
														{
															"nativeSrc": "1421:73:9",
															"nodeType": "YulAssignment",
															"src": "1421:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1464:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1464:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1475:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "1475:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1460:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1460:3:9"
																		},
																		"nativeSrc": "1460:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1460:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1486:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "1486:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1431:28:9",
																	"nodeType": "YulIdentifier",
																	"src": "1431:28:9"
																},
																"nativeSrc": "1431:63:9",
																"nodeType": "YulFunctionCall",
																"src": "1431:63:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1421:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1421:6:9"
																}
															]
														},
														{
															"nativeSrc": "1503:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1503:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1516:1:9",
																"nodeType": "YulLiteral",
																"src": "1516:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1507:5:9",
																	"nodeType": "YulTypedName",
																	"src": "1507:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1526:34:9",
															"nodeType": "YulAssignment",
															"src": "1526:34:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1545:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1545:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1556:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1556:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1541:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1541:3:9"
																		},
																		"nativeSrc": "1541:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1541:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1535:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1535:5:9"
																},
																"nativeSrc": "1535:25:9",
																"nodeType": "YulFunctionCall",
																"src": "1535:25:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1526:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1526:5:9"
																}
															]
														},
														{
															"nativeSrc": "1569:15:9",
															"nodeType": "YulAssignment",
															"src": "1569:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "1579:5:9",
																"nodeType": "YulIdentifier",
																"src": "1579:5:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1569:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1569:6:9"
																}
															]
														},
														{
															"nativeSrc": "1593:16:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1593:16:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1608:1:9",
																"nodeType": "YulLiteral",
																"src": "1608:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1597:7:9",
																	"nodeType": "YulTypedName",
																	"src": "1597:7:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1618:36:9",
															"nodeType": "YulAssignment",
															"src": "1618:36:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1639:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1639:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1650:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1650:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1635:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1635:3:9"
																		},
																		"nativeSrc": "1635:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1635:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1629:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1629:5:9"
																},
																"nativeSrc": "1629:25:9",
																"nodeType": "YulFunctionCall",
																"src": "1629:25:9"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1618:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1618:7:9"
																}
															]
														},
														{
															"nativeSrc": "1663:17:9",
															"nodeType": "YulAssignment",
															"src": "1663:17:9",
															"value": {
																"name": "value_1",
																"nativeSrc": "1673:7:9",
																"nodeType": "YulIdentifier",
																"src": "1673:7:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1663:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1663:6:9"
																}
															]
														},
														{
															"nativeSrc": "1689:16:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1689:16:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1704:1:9",
																"nodeType": "YulLiteral",
																"src": "1704:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "1693:7:9",
																	"nodeType": "YulTypedName",
																	"src": "1693:7:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1714:37:9",
															"nodeType": "YulAssignment",
															"src": "1714:37:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1735:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1735:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1746:3:9",
																				"nodeType": "YulLiteral",
																				"src": "1746:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1731:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1731:3:9"
																		},
																		"nativeSrc": "1731:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1731:19:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1725:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1725:5:9"
																},
																"nativeSrc": "1725:26:9",
																"nodeType": "YulFunctionCall",
																"src": "1725:26:9"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "1714:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1714:7:9"
																}
															]
														},
														{
															"nativeSrc": "1760:17:9",
															"nodeType": "YulAssignment",
															"src": "1760:17:9",
															"value": {
																"name": "value_2",
																"nativeSrc": "1770:7:9",
																"nodeType": "YulIdentifier",
																"src": "1770:7:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "1760:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1760:6:9"
																}
															]
														},
														{
															"nativeSrc": "1786:41:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1786:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1811:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1811:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1822:3:9",
																				"nodeType": "YulLiteral",
																				"src": "1822:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1807:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1807:3:9"
																		},
																		"nativeSrc": "1807:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1807:19:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1801:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:9"
																},
																"nativeSrc": "1801:26:9",
																"nodeType": "YulFunctionCall",
																"src": "1801:26:9"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "1790:7:9",
																	"nodeType": "YulTypedName",
																	"src": "1790:7:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1894:16:9",
																"nodeType": "YulBlock",
																"src": "1894:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1903:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1903:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1906:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1906:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1896:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1896:6:9"
																			},
																			"nativeSrc": "1896:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1896:12:9"
																		},
																		"nativeSrc": "1896:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1896:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_3",
																				"nativeSrc": "1849:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1849:7:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_3",
																						"nativeSrc": "1862:7:9",
																						"nodeType": "YulIdentifier",
																						"src": "1862:7:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1879:3:9",
																										"nodeType": "YulLiteral",
																										"src": "1879:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1884:1:9",
																										"nodeType": "YulLiteral",
																										"src": "1884:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1875:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1875:3:9"
																								},
																								"nativeSrc": "1875:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1875:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1888:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1888:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1871:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1871:3:9"
																						},
																						"nativeSrc": "1871:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1871:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1858:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:9"
																				},
																				"nativeSrc": "1858:33:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1858:33:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1846:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1846:2:9"
																		},
																		"nativeSrc": "1846:46:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1846:46:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1839:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1839:6:9"
																},
																"nativeSrc": "1839:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1839:54:9"
															},
															"nativeSrc": "1836:74:9",
															"nodeType": "YulIf",
															"src": "1836:74:9"
														},
														{
															"nativeSrc": "1919:17:9",
															"nodeType": "YulAssignment",
															"src": "1919:17:9",
															"value": {
																"name": "value_3",
																"nativeSrc": "1929:7:9",
																"nodeType": "YulIdentifier",
																"src": "1929:7:9"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "1919:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1919:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_address_fromMemory",
												"nativeSrc": "874:1068:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "986:9:9",
														"nodeType": "YulTypedName",
														"src": "986:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "997:7:9",
														"nodeType": "YulTypedName",
														"src": "997:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1009:6:9",
														"nodeType": "YulTypedName",
														"src": "1009:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1017:6:9",
														"nodeType": "YulTypedName",
														"src": "1017:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1025:6:9",
														"nodeType": "YulTypedName",
														"src": "1025:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1033:6:9",
														"nodeType": "YulTypedName",
														"src": "1033:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1041:6:9",
														"nodeType": "YulTypedName",
														"src": "1041:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1049:6:9",
														"nodeType": "YulTypedName",
														"src": "1049:6:9",
														"type": ""
													}
												],
												"src": "874:1068:9"
											},
											{
												"body": {
													"nativeSrc": "2002:325:9",
													"nodeType": "YulBlock",
													"src": "2002:325:9",
													"statements": [
														{
															"nativeSrc": "2012:22:9",
															"nodeType": "YulAssignment",
															"src": "2012:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2026:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2026:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2029:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2029:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2022:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2022:3:9"
																},
																"nativeSrc": "2022:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2022:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2012:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:9"
																}
															]
														},
														{
															"nativeSrc": "2043:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2043:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2073:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2073:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2079:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2079:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2069:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2069:3:9"
																},
																"nativeSrc": "2069:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2069:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2047:18:9",
																	"nodeType": "YulTypedName",
																	"src": "2047:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2120:31:9",
																"nodeType": "YulBlock",
																"src": "2120:31:9",
																"statements": [
																	{
																		"nativeSrc": "2122:27:9",
																		"nodeType": "YulAssignment",
																		"src": "2122:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2136:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2136:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2144:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2144:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2132:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2132:3:9"
																			},
																			"nativeSrc": "2132:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2132:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2122:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2122:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2100:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2100:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2093:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2093:6:9"
																},
																"nativeSrc": "2093:26:9",
																"nodeType": "YulFunctionCall",
																"src": "2093:26:9"
															},
															"nativeSrc": "2090:61:9",
															"nodeType": "YulIf",
															"src": "2090:61:9"
														},
														{
															"body": {
																"nativeSrc": "2210:111:9",
																"nodeType": "YulBlock",
																"src": "2210:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2231:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2231:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2238:3:9",
																							"nodeType": "YulLiteral",
																							"src": "2238:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2243:10:9",
																							"nodeType": "YulLiteral",
																							"src": "2243:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2234:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2234:3:9"
																					},
																					"nativeSrc": "2234:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2234:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2224:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2224:6:9"
																			},
																			"nativeSrc": "2224:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2224:31:9"
																		},
																		"nativeSrc": "2224:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2224:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2275:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2275:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2278:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2278:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2268:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2268:6:9"
																			},
																			"nativeSrc": "2268:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2268:15:9"
																		},
																		"nativeSrc": "2268:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2268:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2303:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2303:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2306:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2306:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2296:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2296:6:9"
																			},
																			"nativeSrc": "2296:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2296:15:9"
																		},
																		"nativeSrc": "2296:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2296:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2166:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2166:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2189:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2189:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2197:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2197:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2186:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2186:2:9"
																		},
																		"nativeSrc": "2186:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2186:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2163:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:9"
																},
																"nativeSrc": "2163:38:9",
																"nodeType": "YulFunctionCall",
																"src": "2163:38:9"
															},
															"nativeSrc": "2160:161:9",
															"nodeType": "YulIf",
															"src": "2160:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1947:380:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1982:4:9",
														"nodeType": "YulTypedName",
														"src": "1982:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1991:6:9",
														"nodeType": "YulTypedName",
														"src": "1991:6:9",
														"type": ""
													}
												],
												"src": "1947:380:9"
											},
											{
												"body": {
													"nativeSrc": "2388:65:9",
													"nodeType": "YulBlock",
													"src": "2388:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2405:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2405:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2408:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2408:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2398:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2398:6:9"
																},
																"nativeSrc": "2398:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2398:14:9"
															},
															"nativeSrc": "2398:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "2398:14:9"
														},
														{
															"nativeSrc": "2421:26:9",
															"nodeType": "YulAssignment",
															"src": "2421:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2439:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2439:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2442:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2442:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2429:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2429:9:9"
																},
																"nativeSrc": "2429:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2429:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2421:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2421:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "2332:121:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2371:3:9",
														"nodeType": "YulTypedName",
														"src": "2371:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2379:4:9",
														"nodeType": "YulTypedName",
														"src": "2379:4:9",
														"type": ""
													}
												],
												"src": "2332:121:9"
											},
											{
												"body": {
													"nativeSrc": "2539:437:9",
													"nodeType": "YulBlock",
													"src": "2539:437:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2572:398:9",
																"nodeType": "YulBlock",
																"src": "2572:398:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2593:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2593:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2596:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2596:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2586:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2586:6:9"
																			},
																			"nativeSrc": "2586:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2586:16:9"
																		},
																		"nativeSrc": "2586:16:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2586:16:9"
																	},
																	{
																		"nativeSrc": "2615:30:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2615:30:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2637:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2637:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2640:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2640:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2627:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2627:9:9"
																			},
																			"nativeSrc": "2627:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2627:18:9"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2619:4:9",
																				"nodeType": "YulTypedName",
																				"src": "2619:4:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2658:57:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2658:57:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2681:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "2681:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2691:1:9",
																							"nodeType": "YulLiteral",
																							"src": "2691:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2698:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "2698:10:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2710:2:9",
																									"nodeType": "YulLiteral",
																									"src": "2710:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2694:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "2694:3:9"
																							},
																							"nativeSrc": "2694:19:9",
																							"nodeType": "YulFunctionCall",
																							"src": "2694:19:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2687:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2687:3:9"
																					},
																					"nativeSrc": "2687:27:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2687:27:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2677:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2677:3:9"
																			},
																			"nativeSrc": "2677:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2677:38:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2662:11:9",
																				"nodeType": "YulTypedName",
																				"src": "2662:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2752:23:9",
																			"nodeType": "YulBlock",
																			"src": "2752:23:9",
																			"statements": [
																				{
																					"nativeSrc": "2754:19:9",
																					"nodeType": "YulAssignment",
																					"src": "2754:19:9",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2769:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "2769:4:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2754:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "2754:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2734:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "2734:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2746:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2746:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2731:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "2731:2:9"
																			},
																			"nativeSrc": "2731:20:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2731:20:9"
																		},
																		"nativeSrc": "2728:47:9",
																		"nodeType": "YulIf",
																		"src": "2728:47:9"
																	},
																	{
																		"nativeSrc": "2788:41:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2788:41:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2802:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "2802:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2812:1:9",
																							"nodeType": "YulLiteral",
																							"src": "2812:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2819:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2819:3:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2824:2:9",
																									"nodeType": "YulLiteral",
																									"src": "2824:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2815:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "2815:3:9"
																							},
																							"nativeSrc": "2815:12:9",
																							"nodeType": "YulFunctionCall",
																							"src": "2815:12:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2808:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2808:3:9"
																					},
																					"nativeSrc": "2808:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2808:20:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2798:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2798:3:9"
																			},
																			"nativeSrc": "2798:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2798:31:9"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2792:2:9",
																				"nodeType": "YulTypedName",
																				"src": "2792:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2842:24:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2842:24:9",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2855:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "2855:11:9"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2846:5:9",
																				"nodeType": "YulTypedName",
																				"src": "2846:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2940:20:9",
																			"nodeType": "YulBlock",
																			"src": "2940:20:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2949:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "2949:5:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2956:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2956:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2942:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "2942:6:9"
																						},
																						"nativeSrc": "2942:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2942:16:9"
																					},
																					"nativeSrc": "2942:16:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "2942:16:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2890:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2890:5:9"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2897:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "2897:2:9"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2887:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "2887:2:9"
																			},
																			"nativeSrc": "2887:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2887:13:9"
																		},
																		"nativeSrc": "2879:81:9",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2901:26:9",
																			"nodeType": "YulBlock",
																			"src": "2901:26:9",
																			"statements": [
																				{
																					"nativeSrc": "2903:22:9",
																					"nodeType": "YulAssignment",
																					"src": "2903:22:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2916:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "2916:5:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2923:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2923:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2912:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2912:3:9"
																						},
																						"nativeSrc": "2912:13:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2912:13:9"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2903:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "2903:5:9"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2883:3:9",
																			"nodeType": "YulBlock",
																			"src": "2883:3:9",
																			"statements": []
																		},
																		"src": "2879:81:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2555:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2555:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2560:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2552:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2552:2:9"
																},
																"nativeSrc": "2552:11:9",
																"nodeType": "YulFunctionCall",
																"src": "2552:11:9"
															},
															"nativeSrc": "2549:421:9",
															"nodeType": "YulIf",
															"src": "2549:421:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2458:518:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2511:5:9",
														"nodeType": "YulTypedName",
														"src": "2511:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2518:3:9",
														"nodeType": "YulTypedName",
														"src": "2518:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2523:10:9",
														"nodeType": "YulTypedName",
														"src": "2523:10:9",
														"type": ""
													}
												],
												"src": "2458:518:9"
											},
											{
												"body": {
													"nativeSrc": "3066:81:9",
													"nodeType": "YulBlock",
													"src": "3066:81:9",
													"statements": [
														{
															"nativeSrc": "3076:65:9",
															"nodeType": "YulAssignment",
															"src": "3076:65:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3091:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "3091:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3109:1:9",
																										"nodeType": "YulLiteral",
																										"src": "3109:1:9",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "3112:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "3112:3:9"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3105:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3105:3:9"
																								},
																								"nativeSrc": "3105:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3105:11:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3122:1:9",
																										"nodeType": "YulLiteral",
																										"src": "3122:1:9",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "3118:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3118:3:9"
																								},
																								"nativeSrc": "3118:6:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3118:6:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "3101:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3101:3:9"
																						},
																						"nativeSrc": "3101:24:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3101:24:9"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3097:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3097:3:9"
																				},
																				"nativeSrc": "3097:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3097:29:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3087:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3087:3:9"
																		},
																		"nativeSrc": "3087:40:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3087:40:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3133:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3133:1:9",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3136:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3136:3:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3129:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3129:3:9"
																		},
																		"nativeSrc": "3129:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3129:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3084:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3084:2:9"
																},
																"nativeSrc": "3084:57:9",
																"nodeType": "YulFunctionCall",
																"src": "3084:57:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3076:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3076:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2981:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3043:4:9",
														"nodeType": "YulTypedName",
														"src": "3043:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3049:3:9",
														"nodeType": "YulTypedName",
														"src": "3049:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3057:4:9",
														"nodeType": "YulTypedName",
														"src": "3057:4:9",
														"type": ""
													}
												],
												"src": "2981:166:9"
											},
											{
												"body": {
													"nativeSrc": "3248:1203:9",
													"nodeType": "YulBlock",
													"src": "3248:1203:9",
													"statements": [
														{
															"nativeSrc": "3258:24:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3258:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3278:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3278:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3272:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3272:5:9"
																},
																"nativeSrc": "3272:10:9",
																"nodeType": "YulFunctionCall",
																"src": "3272:10:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3262:6:9",
																	"nodeType": "YulTypedName",
																	"src": "3262:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3325:22:9",
																"nodeType": "YulBlock",
																"src": "3325:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3327:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "3327:16:9"
																			},
																			"nativeSrc": "3327:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3327:18:9"
																		},
																		"nativeSrc": "3327:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3297:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3297:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3313:2:9",
																						"nodeType": "YulLiteral",
																						"src": "3313:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3317:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3317:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3309:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3309:3:9"
																				},
																				"nativeSrc": "3309:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3309:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3321:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3321:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3305:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3305:3:9"
																		},
																		"nativeSrc": "3305:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3305:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3294:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3294:2:9"
																},
																"nativeSrc": "3294:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3294:30:9"
															},
															"nativeSrc": "3291:56:9",
															"nodeType": "YulIf",
															"src": "3291:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3400:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3400:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3438:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "3438:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3432:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "3432:5:9"
																				},
																				"nativeSrc": "3432:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3432:11:9"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3406:25:9",
																			"nodeType": "YulIdentifier",
																			"src": "3406:25:9"
																		},
																		"nativeSrc": "3406:38:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:38:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3446:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3446:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3356:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3356:43:9"
																},
																"nativeSrc": "3356:97:9",
																"nodeType": "YulFunctionCall",
																"src": "3356:97:9"
															},
															"nativeSrc": "3356:97:9",
															"nodeType": "YulExpressionStatement",
															"src": "3356:97:9"
														},
														{
															"nativeSrc": "3462:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3462:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "3479:1:9",
																"nodeType": "YulLiteral",
																"src": "3479:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3466:9:9",
																	"nodeType": "YulTypedName",
																	"src": "3466:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3489:17:9",
															"nodeType": "YulAssignment",
															"src": "3489:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "3502:4:9",
																"nodeType": "YulLiteral",
																"src": "3502:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3489:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "3489:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3552:642:9",
																		"nodeType": "YulBlock",
																		"src": "3552:642:9",
																		"statements": [
																			{
																				"nativeSrc": "3566:35:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3566:35:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3585:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "3585:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3597:2:9",
																									"nodeType": "YulLiteral",
																									"src": "3597:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3593:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "3593:3:9"
																							},
																							"nativeSrc": "3593:7:9",
																							"nodeType": "YulFunctionCall",
																							"src": "3593:7:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3581:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3581:3:9"
																					},
																					"nativeSrc": "3581:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3581:20:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3570:7:9",
																						"nodeType": "YulTypedName",
																						"src": "3570:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3614:49:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3614:49:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3658:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "3658:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3628:29:9",
																						"nodeType": "YulIdentifier",
																						"src": "3628:29:9"
																					},
																					"nativeSrc": "3628:35:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3628:35:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3618:6:9",
																						"nodeType": "YulTypedName",
																						"src": "3618:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3676:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3676:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3685:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3685:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3680:1:9",
																						"nodeType": "YulTypedName",
																						"src": "3680:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3756:165:9",
																					"nodeType": "YulBlock",
																					"src": "3756:165:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3781:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "3781:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3799:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "3799:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3804:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "3804:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3795:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "3795:3:9"
																												},
																												"nativeSrc": "3795:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "3795:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3789:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "3789:5:9"
																										},
																										"nativeSrc": "3789:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "3789:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3774:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "3774:6:9"
																								},
																								"nativeSrc": "3774:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3774:42:9"
																							},
																							"nativeSrc": "3774:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "3774:42:9"
																						},
																						{
																							"nativeSrc": "3833:24:9",
																							"nodeType": "YulAssignment",
																							"src": "3833:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3847:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "3847:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3855:1:9",
																										"nodeType": "YulLiteral",
																										"src": "3855:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3843:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3843:3:9"
																								},
																								"nativeSrc": "3843:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3843:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3833:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "3833:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3874:33:9",
																							"nodeType": "YulAssignment",
																							"src": "3874:33:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3891:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "3891:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3902:4:9",
																										"nodeType": "YulLiteral",
																										"src": "3902:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3887:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3887:3:9"
																								},
																								"nativeSrc": "3887:20:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3887:20:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3874:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "3874:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3710:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "3710:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3713:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "3713:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3707:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "3707:2:9"
																					},
																					"nativeSrc": "3707:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3707:14:9"
																				},
																				"nativeSrc": "3699:222:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3722:21:9",
																					"nodeType": "YulBlock",
																					"src": "3722:21:9",
																					"statements": [
																						{
																							"nativeSrc": "3724:17:9",
																							"nodeType": "YulAssignment",
																							"src": "3724:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3733:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "3733:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3736:4:9",
																										"nodeType": "YulLiteral",
																										"src": "3736:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3729:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3729:3:9"
																								},
																								"nativeSrc": "3729:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "3729:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3724:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "3724:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3703:3:9",
																					"nodeType": "YulBlock",
																					"src": "3703:3:9",
																					"statements": []
																				},
																				"src": "3699:222:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "3969:166:9",
																					"nodeType": "YulBlock",
																					"src": "3969:166:9",
																					"statements": [
																						{
																							"nativeSrc": "3987:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3987:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4014:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "4014:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4019:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "4019:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4010:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "4010:3:9"
																										},
																										"nativeSrc": "4010:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4010:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4004:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "4004:5:9"
																								},
																								"nativeSrc": "4004:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4004:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3991:9:9",
																									"nodeType": "YulTypedName",
																									"src": "3991:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4054:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "4054:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4066:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "4066:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "4093:1:9",
																																				"nodeType": "YulLiteral",
																																				"src": "4093:1:9",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "4096:6:9",
																																				"nodeType": "YulIdentifier",
																																				"src": "4096:6:9"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "4089:3:9",
																																			"nodeType": "YulIdentifier",
																																			"src": "4089:3:9"
																																		},
																																		"nativeSrc": "4089:14:9",
																																		"nodeType": "YulFunctionCall",
																																		"src": "4089:14:9"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4105:3:9",
																																		"nodeType": "YulLiteral",
																																		"src": "4105:3:9",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "4085:3:9",
																																	"nodeType": "YulIdentifier",
																																	"src": "4085:3:9"
																																},
																																"nativeSrc": "4085:24:9",
																																"nodeType": "YulFunctionCall",
																																"src": "4085:24:9"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4115:1:9",
																																		"nodeType": "YulLiteral",
																																		"src": "4115:1:9",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "4111:3:9",
																																	"nodeType": "YulIdentifier",
																																	"src": "4111:3:9"
																																},
																																"nativeSrc": "4111:6:9",
																																"nodeType": "YulFunctionCall",
																																"src": "4111:6:9"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "4081:3:9",
																															"nodeType": "YulIdentifier",
																															"src": "4081:3:9"
																														},
																														"nativeSrc": "4081:37:9",
																														"nodeType": "YulFunctionCall",
																														"src": "4081:37:9"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "4077:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "4077:3:9"
																												},
																												"nativeSrc": "4077:42:9",
																												"nodeType": "YulFunctionCall",
																												"src": "4077:42:9"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "4062:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "4062:3:9"
																										},
																										"nativeSrc": "4062:58:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4062:58:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4047:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4047:6:9"
																								},
																								"nativeSrc": "4047:74:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4047:74:9"
																							},
																							"nativeSrc": "4047:74:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "4047:74:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3940:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "3940:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3949:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "3949:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3937:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "3937:2:9"
																					},
																					"nativeSrc": "3937:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3937:19:9"
																				},
																				"nativeSrc": "3934:201:9",
																				"nodeType": "YulIf",
																				"src": "3934:201:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4155:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "4155:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4169:1:9",
																											"nodeType": "YulLiteral",
																											"src": "4169:1:9",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "4172:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "4172:6:9"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "4165:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "4165:3:9"
																									},
																									"nativeSrc": "4165:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "4165:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4181:1:9",
																									"nodeType": "YulLiteral",
																									"src": "4181:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4161:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "4161:3:9"
																							},
																							"nativeSrc": "4161:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4161:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4148:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:9"
																					},
																					"nativeSrc": "4148:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4148:36:9"
																				},
																				"nativeSrc": "4148:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "4148:36:9"
																			}
																		]
																	},
																	"nativeSrc": "3545:649:9",
																	"nodeType": "YulCase",
																	"src": "3545:649:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3550:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3550:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4211:234:9",
																		"nodeType": "YulBlock",
																		"src": "4211:234:9",
																		"statements": [
																			{
																				"nativeSrc": "4225:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4225:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4238:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4238:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "4229:5:9",
																						"nodeType": "YulTypedName",
																						"src": "4229:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4274:67:9",
																					"nodeType": "YulBlock",
																					"src": "4274:67:9",
																					"statements": [
																						{
																							"nativeSrc": "4292:35:9",
																							"nodeType": "YulAssignment",
																							"src": "4292:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4311:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "4311:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4316:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "4316:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4307:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "4307:3:9"
																										},
																										"nativeSrc": "4307:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4307:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4301:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "4301:5:9"
																								},
																								"nativeSrc": "4301:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4301:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "4292:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "4292:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "4255:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "4255:6:9"
																				},
																				"nativeSrc": "4252:89:9",
																				"nodeType": "YulIf",
																				"src": "4252:89:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4361:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "4361:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4420:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "4420:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4427:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4427:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4367:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "4367:52:9"
																							},
																							"nativeSrc": "4367:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4367:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4354:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4354:6:9"
																					},
																					"nativeSrc": "4354:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4354:81:9"
																				},
																				"nativeSrc": "4354:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "4354:81:9"
																			}
																		]
																	},
																	"nativeSrc": "4203:242:9",
																	"nodeType": "YulCase",
																	"src": "4203:242:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3525:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3525:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3533:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3533:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3522:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3522:2:9"
																},
																"nativeSrc": "3522:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3522:14:9"
															},
															"nativeSrc": "3515:930:9",
															"nodeType": "YulSwitch",
															"src": "3515:930:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3152:1299:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3233:4:9",
														"nodeType": "YulTypedName",
														"src": "3233:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3239:3:9",
														"nodeType": "YulTypedName",
														"src": "3239:3:9",
														"type": ""
													}
												],
												"src": "3152:1299:9"
											},
											{
												"body": {
													"nativeSrc": "4557:102:9",
													"nodeType": "YulBlock",
													"src": "4557:102:9",
													"statements": [
														{
															"nativeSrc": "4567:26:9",
															"nodeType": "YulAssignment",
															"src": "4567:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4579:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4579:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4590:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4590:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4575:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4575:3:9"
																},
																"nativeSrc": "4575:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4575:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4567:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4567:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4609:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4609:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4624:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4624:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4640:3:9",
																								"nodeType": "YulLiteral",
																								"src": "4640:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4645:1:9",
																								"nodeType": "YulLiteral",
																								"src": "4645:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4636:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4636:3:9"
																						},
																						"nativeSrc": "4636:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4636:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4649:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4649:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4632:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4632:3:9"
																				},
																				"nativeSrc": "4632:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4632:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4620:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4620:3:9"
																		},
																		"nativeSrc": "4620:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4620:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4602:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4602:6:9"
																},
																"nativeSrc": "4602:51:9",
																"nodeType": "YulFunctionCall",
																"src": "4602:51:9"
															},
															"nativeSrc": "4602:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "4602:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4456:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4526:9:9",
														"nodeType": "YulTypedName",
														"src": "4526:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4537:6:9",
														"nodeType": "YulTypedName",
														"src": "4537:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4548:4:9",
														"nodeType": "YulTypedName",
														"src": "4548:4:9",
														"type": ""
													}
												],
												"src": "4456:203:9"
											},
											{
												"body": {
													"nativeSrc": "4838:232:9",
													"nodeType": "YulBlock",
													"src": "4838:232:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4855:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4855:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4866:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4866:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4848:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:9"
																},
																"nativeSrc": "4848:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4848:21:9"
															},
															"nativeSrc": "4848:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4848:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4889:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4889:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4900:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4900:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4885:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4885:3:9"
																		},
																		"nativeSrc": "4885:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4885:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4905:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4905:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4878:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4878:6:9"
																},
																"nativeSrc": "4878:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4878:30:9"
															},
															"nativeSrc": "4878:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4878:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4928:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4928:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4939:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4939:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4924:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4924:3:9"
																		},
																		"nativeSrc": "4924:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4924:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a20696e697469616c206f776e657220697320746865207a65",
																		"kind": "string",
																		"nativeSrc": "4944:34:9",
																		"nodeType": "YulLiteral",
																		"src": "4944:34:9",
																		"type": "",
																		"value": "Ownable: initial owner is the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4917:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4917:6:9"
																},
																"nativeSrc": "4917:62:9",
																"nodeType": "YulFunctionCall",
																"src": "4917:62:9"
															},
															"nativeSrc": "4917:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "4917:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4999:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4999:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5010:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5010:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4995:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4995:3:9"
																		},
																		"nativeSrc": "4995:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4995:18:9"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "5015:12:9",
																		"nodeType": "YulLiteral",
																		"src": "5015:12:9",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4988:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4988:6:9"
																},
																"nativeSrc": "4988:40:9",
																"nodeType": "YulFunctionCall",
																"src": "4988:40:9"
															},
															"nativeSrc": "4988:40:9",
															"nodeType": "YulExpressionStatement",
															"src": "4988:40:9"
														},
														{
															"nativeSrc": "5037:27:9",
															"nodeType": "YulAssignment",
															"src": "5037:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5049:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5049:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5060:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5060:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5045:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5045:3:9"
																},
																"nativeSrc": "5045:19:9",
																"nodeType": "YulFunctionCall",
																"src": "5045:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5037:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5037:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c4e3f56c63b99e5f1e017a620bd5f0fa05418f38cd7049c2efd2169eacdd91c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4664:406:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4815:9:9",
														"nodeType": "YulTypedName",
														"src": "4815:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4829:4:9",
														"nodeType": "YulTypedName",
														"src": "4829:4:9",
														"type": ""
													}
												],
												"src": "4664:406:9"
											},
											{
												"body": {
													"nativeSrc": "5249:233:9",
													"nodeType": "YulBlock",
													"src": "5249:233:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5266:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5266:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5277:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5277:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5259:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5259:6:9"
																},
																"nativeSrc": "5259:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5259:21:9"
															},
															"nativeSrc": "5259:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "5259:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5300:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5300:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5311:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5311:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5296:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5296:3:9"
																		},
																		"nativeSrc": "5296:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5296:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5316:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5316:2:9",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5289:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5289:6:9"
																},
																"nativeSrc": "5289:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5289:30:9"
															},
															"nativeSrc": "5289:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "5289:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5339:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5339:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5350:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5350:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5335:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5335:3:9"
																		},
																		"nativeSrc": "5335:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5335:18:9"
																	},
																	{
																		"hexValue": "56657374696e673a206475726174696f6e206d75737420626520677265617465",
																		"kind": "string",
																		"nativeSrc": "5355:34:9",
																		"nodeType": "YulLiteral",
																		"src": "5355:34:9",
																		"type": "",
																		"value": "Vesting: duration must be greate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5328:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5328:6:9"
																},
																"nativeSrc": "5328:62:9",
																"nodeType": "YulFunctionCall",
																"src": "5328:62:9"
															},
															"nativeSrc": "5328:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "5328:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5410:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5410:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5421:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5421:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5406:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5406:3:9"
																		},
																		"nativeSrc": "5406:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5406:18:9"
																	},
																	{
																		"hexValue": "72207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "5426:13:9",
																		"nodeType": "YulLiteral",
																		"src": "5426:13:9",
																		"type": "",
																		"value": "r than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5399:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5399:6:9"
																},
																"nativeSrc": "5399:41:9",
																"nodeType": "YulFunctionCall",
																"src": "5399:41:9"
															},
															"nativeSrc": "5399:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "5399:41:9"
														},
														{
															"nativeSrc": "5449:27:9",
															"nodeType": "YulAssignment",
															"src": "5449:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5461:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5461:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5472:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5472:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5457:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5457:3:9"
																},
																"nativeSrc": "5457:19:9",
																"nodeType": "YulFunctionCall",
																"src": "5457:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5449:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5449:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da95245a3a691f5cc8d6f7432704e2d6fdf5a5f9d9cd50381124f13d88a34d08__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5075:407:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5226:9:9",
														"nodeType": "YulTypedName",
														"src": "5226:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5240:4:9",
														"nodeType": "YulTypedName",
														"src": "5240:4:9",
														"type": ""
													}
												],
												"src": "5075:407:9"
											},
											{
												"body": {
													"nativeSrc": "5644:162:9",
													"nodeType": "YulBlock",
													"src": "5644:162:9",
													"statements": [
														{
															"nativeSrc": "5654:26:9",
															"nodeType": "YulAssignment",
															"src": "5654:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5666:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5666:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5677:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5677:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5662:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5662:3:9"
																},
																"nativeSrc": "5662:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5662:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5654:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5654:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5696:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5696:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5707:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5707:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5689:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5689:6:9"
																},
																"nativeSrc": "5689:25:9",
																"nodeType": "YulFunctionCall",
																"src": "5689:25:9"
															},
															"nativeSrc": "5689:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "5689:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5734:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5734:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5745:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5745:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5730:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5730:3:9"
																		},
																		"nativeSrc": "5730:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5730:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5750:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5750:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5723:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5723:6:9"
																},
																"nativeSrc": "5723:34:9",
																"nodeType": "YulFunctionCall",
																"src": "5723:34:9"
															},
															"nativeSrc": "5723:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "5723:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5777:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5777:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5788:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5788:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5773:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5773:3:9"
																		},
																		"nativeSrc": "5773:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5773:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5793:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5793:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5766:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5766:6:9"
																},
																"nativeSrc": "5766:34:9",
																"nodeType": "YulFunctionCall",
																"src": "5766:34:9"
															},
															"nativeSrc": "5766:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "5766:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5487:319:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5597:9:9",
														"nodeType": "YulTypedName",
														"src": "5597:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5608:6:9",
														"nodeType": "YulTypedName",
														"src": "5608:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5616:6:9",
														"nodeType": "YulTypedName",
														"src": "5616:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5624:6:9",
														"nodeType": "YulTypedName",
														"src": "5624:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5635:4:9",
														"nodeType": "YulTypedName",
														"src": "5635:4:9",
														"type": ""
													}
												],
												"src": "5487:319:9"
											},
											{
												"body": {
													"nativeSrc": "5985:233:9",
													"nodeType": "YulBlock",
													"src": "5985:233:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6002:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6002:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6013:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6013:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5995:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5995:6:9"
																},
																"nativeSrc": "5995:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5995:21:9"
															},
															"nativeSrc": "5995:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "5995:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6036:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6036:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6047:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6047:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6032:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6032:3:9"
																		},
																		"nativeSrc": "6032:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6032:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6052:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6052:2:9",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6025:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6025:6:9"
																},
																"nativeSrc": "6025:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6025:30:9"
															},
															"nativeSrc": "6025:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "6025:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6075:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6075:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6086:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6086:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6071:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6071:3:9"
																		},
																		"nativeSrc": "6071:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6071:18:9"
																	},
																	{
																		"hexValue": "45524332303a2063616e6e6f74207472616e73666572206c6f636b6564207665",
																		"kind": "string",
																		"nativeSrc": "6091:34:9",
																		"nodeType": "YulLiteral",
																		"src": "6091:34:9",
																		"type": "",
																		"value": "ERC20: cannot transfer locked ve"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6064:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6064:6:9"
																},
																"nativeSrc": "6064:62:9",
																"nodeType": "YulFunctionCall",
																"src": "6064:62:9"
															},
															"nativeSrc": "6064:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "6064:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6146:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6146:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6157:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6157:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6142:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6142:3:9"
																		},
																		"nativeSrc": "6142:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6142:18:9"
																	},
																	{
																		"hexValue": "7374656420746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "6162:13:9",
																		"nodeType": "YulLiteral",
																		"src": "6162:13:9",
																		"type": "",
																		"value": "sted tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6135:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6135:6:9"
																},
																"nativeSrc": "6135:41:9",
																"nodeType": "YulFunctionCall",
																"src": "6135:41:9"
															},
															"nativeSrc": "6135:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "6135:41:9"
														},
														{
															"nativeSrc": "6185:27:9",
															"nodeType": "YulAssignment",
															"src": "6185:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6197:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6197:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6208:3:9",
																		"nodeType": "YulLiteral",
																		"src": "6208:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6193:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6193:3:9"
																},
																"nativeSrc": "6193:19:9",
																"nodeType": "YulFunctionCall",
																"src": "6193:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6185:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6185:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b776372014ba1d8e41c23ff5d54fb0f087b4c983ecc3b5ff5f98a64e6a6cf785__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5811:407:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5962:9:9",
														"nodeType": "YulTypedName",
														"src": "5962:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5976:4:9",
														"nodeType": "YulTypedName",
														"src": "5976:4:9",
														"type": ""
													}
												],
												"src": "5811:407:9"
											},
											{
												"body": {
													"nativeSrc": "6271:174:9",
													"nodeType": "YulBlock",
													"src": "6271:174:9",
													"statements": [
														{
															"nativeSrc": "6281:16:9",
															"nodeType": "YulAssignment",
															"src": "6281:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6292:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6292:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6295:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6295:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6288:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6288:3:9"
																},
																"nativeSrc": "6288:9:9",
																"nodeType": "YulFunctionCall",
																"src": "6288:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6281:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6281:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6328:111:9",
																"nodeType": "YulBlock",
																"src": "6328:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6349:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6349:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6356:3:9",
																							"nodeType": "YulLiteral",
																							"src": "6356:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6361:10:9",
																							"nodeType": "YulLiteral",
																							"src": "6361:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6352:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "6352:3:9"
																					},
																					"nativeSrc": "6352:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6352:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6342:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6342:6:9"
																			},
																			"nativeSrc": "6342:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6342:31:9"
																		},
																		"nativeSrc": "6342:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6342:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6393:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6393:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6396:4:9",
																					"nodeType": "YulLiteral",
																					"src": "6396:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6386:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6386:6:9"
																			},
																			"nativeSrc": "6386:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6386:15:9"
																		},
																		"nativeSrc": "6386:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6386:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6421:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6421:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6424:4:9",
																					"nodeType": "YulLiteral",
																					"src": "6424:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6414:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6414:6:9"
																			},
																			"nativeSrc": "6414:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6414:15:9"
																		},
																		"nativeSrc": "6414:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6414:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6312:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6312:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6315:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6315:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6309:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6309:2:9"
																},
																"nativeSrc": "6309:10:9",
																"nodeType": "YulFunctionCall",
																"src": "6309:10:9"
															},
															"nativeSrc": "6306:133:9",
															"nodeType": "YulIf",
															"src": "6306:133:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6223:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6254:1:9",
														"nodeType": "YulTypedName",
														"src": "6254:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6257:1:9",
														"nodeType": "YulTypedName",
														"src": "6257:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6263:3:9",
														"nodeType": "YulTypedName",
														"src": "6263:3:9",
														"type": ""
													}
												],
												"src": "6223:222:9"
											},
											{
												"body": {
													"nativeSrc": "6607:188:9",
													"nodeType": "YulBlock",
													"src": "6607:188:9",
													"statements": [
														{
															"nativeSrc": "6617:26:9",
															"nodeType": "YulAssignment",
															"src": "6617:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6629:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6629:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6640:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6640:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6625:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6625:3:9"
																},
																"nativeSrc": "6625:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6625:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6617:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6617:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6659:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6659:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6674:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6674:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6690:3:9",
																								"nodeType": "YulLiteral",
																								"src": "6690:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6695:1:9",
																								"nodeType": "YulLiteral",
																								"src": "6695:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6686:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "6686:3:9"
																						},
																						"nativeSrc": "6686:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "6686:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6699:1:9",
																						"nodeType": "YulLiteral",
																						"src": "6699:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6682:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6682:3:9"
																				},
																				"nativeSrc": "6682:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6682:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6670:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6670:3:9"
																		},
																		"nativeSrc": "6670:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6670:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6652:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6652:6:9"
																},
																"nativeSrc": "6652:51:9",
																"nodeType": "YulFunctionCall",
																"src": "6652:51:9"
															},
															"nativeSrc": "6652:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "6652:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6723:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6723:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6734:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6734:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6719:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6719:3:9"
																		},
																		"nativeSrc": "6719:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6719:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6739:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6739:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6712:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6712:6:9"
																},
																"nativeSrc": "6712:34:9",
																"nodeType": "YulFunctionCall",
																"src": "6712:34:9"
															},
															"nativeSrc": "6712:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "6712:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6766:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6766:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6777:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6777:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6762:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6762:3:9"
																		},
																		"nativeSrc": "6762:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6762:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6782:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6782:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6755:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6755:6:9"
																},
																"nativeSrc": "6755:34:9",
																"nodeType": "YulFunctionCall",
																"src": "6755:34:9"
															},
															"nativeSrc": "6755:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "6755:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6450:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6560:9:9",
														"nodeType": "YulTypedName",
														"src": "6560:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6571:6:9",
														"nodeType": "YulTypedName",
														"src": "6571:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6579:6:9",
														"nodeType": "YulTypedName",
														"src": "6579:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6587:6:9",
														"nodeType": "YulTypedName",
														"src": "6587:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6598:4:9",
														"nodeType": "YulTypedName",
														"src": "6598:4:9",
														"type": ""
													}
												],
												"src": "6450:345:9"
											},
											{
												"body": {
													"nativeSrc": "6901:76:9",
													"nodeType": "YulBlock",
													"src": "6901:76:9",
													"statements": [
														{
															"nativeSrc": "6911:26:9",
															"nodeType": "YulAssignment",
															"src": "6911:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6923:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6923:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6934:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6934:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6919:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6919:3:9"
																},
																"nativeSrc": "6919:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6919:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6911:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6911:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6953:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6953:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6964:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6964:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6946:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6946:6:9"
																},
																"nativeSrc": "6946:25:9",
																"nodeType": "YulFunctionCall",
																"src": "6946:25:9"
															},
															"nativeSrc": "6946:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "6946:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6800:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6870:9:9",
														"nodeType": "YulTypedName",
														"src": "6870:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6881:6:9",
														"nodeType": "YulTypedName",
														"src": "6881:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6892:4:9",
														"nodeType": "YulTypedName",
														"src": "6892:4:9",
														"type": ""
													}
												],
												"src": "6800:177:9"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := 0\n        value := mload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 96))\n        value3 := value_1\n        let value_2 := 0\n        value_2 := mload(add(headStart, 128))\n        value4 := value_2\n        let value_3 := mload(add(headStart, 160))\n        if iszero(eq(value_3, and(value_3, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value5 := value_3\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_6c4e3f56c63b99e5f1e017a620bd5f0fa05418f38cd7049c2efd2169eacdd91c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Ownable: initial owner is the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_da95245a3a691f5cc8d6f7432704e2d6fdf5a5f9d9cd50381124f13d88a34d08__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Vesting: duration must be greate\")\n        mstore(add(headStart, 96), \"r than zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_b776372014ba1d8e41c23ff5d54fb0f087b4c983ecc3b5ff5f98a64e6a6cf785__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC20: cannot transfer locked ve\")\n        mstore(add(headStart, 96), \"sted tokens\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1418 CODESIZE SUB DUP1 PUSH2 0x1418 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x4C2 JUMP JUMPDEST DUP1 DUP7 DUP7 PUSH1 0x3 PUSH2 0x3D DUP4 DUP3 PUSH2 0x5E6 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x4A DUP3 DUP3 PUSH2 0x5E6 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84 DUP2 PUSH2 0x1CF JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A20696E697469616C206F776E657220697320746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x72 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56657374696E673A206475726174696F6E206D75737420626520677265617465 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x72207468616E207A65726F PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x72 JUMP JUMPDEST TIMESTAMP PUSH1 0x80 MSTORE PUSH1 0xA0 DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP4 SWAP1 MSTORE DUP4 ISZERO PUSH2 0x16F JUMPI PUSH2 0x16F DUP2 DUP6 PUSH2 0x220 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x17F JUMPI PUSH2 0x17F ADDRESS DUP5 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0xE8FBCDFC2A707362664A0CDEC5038E3D2A2183F4D4D3747E56BFC200EDA13756 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x249 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72 JUMP JUMPDEST PUSH2 0x254 PUSH0 DUP4 DUP4 PUSH2 0x258 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x263 DUP4 DUP4 DUP4 PUSH2 0x2FF JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SUB PUSH2 0x2FA JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x29A JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x2FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2063616E6E6F74207472616E73666572206C6F636B6564207665 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x7374656420746F6B656E73 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x72 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x329 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x6A0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x399 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3B5 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x448 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x461 JUMPI PUSH2 0x461 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x48F JUMPI PUSH2 0x48F PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x4A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x4D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4EC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4F8 DUP10 DUP3 DUP11 ADD PUSH2 0x439 JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD SWAP1 SWAP8 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x515 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x521 DUP10 DUP3 DUP11 ADD PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 DUP10 ADD MLOAD PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0xA0 DUP13 ADD MLOAD SWAP4 SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x555 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x577 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x595 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2FA JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5C0 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5DF JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5CC JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x5FF JUMPI PUSH2 0x5FF PUSH2 0x425 JUMP JUMPDEST PUSH2 0x613 DUP2 PUSH2 0x60D DUP5 SLOAD PUSH2 0x563 JUMP JUMPDEST DUP5 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x645 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x62E JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x5DF JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x674 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x654 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x691 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0xCF8 PUSH2 0x720 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x25C ADD MSTORE DUP2 DUP2 PUSH2 0x61E ADD MSTORE PUSH2 0x66C ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x171 ADD MSTORE DUP2 DUP2 PUSH2 0x59D ADD MSTORE DUP2 DUP2 PUSH2 0x5F7 ADD MSTORE PUSH2 0x648 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x283 ADD MSTORE DUP2 DUP2 PUSH2 0x574 ADD MSTORE PUSH2 0x5CF ADD MSTORE PUSH2 0xCF8 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x127 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xA8660A78 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA8660A78 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xF4EB90A6 EQ PUSH2 0x303 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x9DE5A561 EQ PUSH2 0x257 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x4B8F1EF0 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x54DD1DA4 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x1514617E EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x133 PUSH2 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0xB57 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x193 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x193 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0xB57 JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x51B JUMP JUMPDEST PUSH2 0x193 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x193 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xB57 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST PUSH2 0x193 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x571 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x31A SWAP1 PUSH2 0xC1A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x346 SWAP1 PUSH2 0xC1A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x391 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x368 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x391 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x374 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3A8 DUP2 DUP6 DUP6 PUSH2 0x69D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3C1 DUP6 DUP3 DUP6 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x3CC DUP6 DUP6 DUP6 PUSH2 0x72B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3E1 CALLER DUP3 PUSH2 0x788 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3EC PUSH2 0x7BC JUMP JUMPDEST PUSH0 PUSH2 0x3F5 PUSH2 0x571 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x458 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56657374696E673A206E6F206E657720746F6B656E7320686176652076657374 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x46E PUSH1 0x6 SLOAD DUP4 PUSH2 0x7E9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x47E SWAP1 DUP3 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0x49D ADDRESS PUSH2 0x497 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x72B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6BC5063C7239B75C8BF325A2A2238F726FADA322163996BB6C93D5594FB119F0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x4F7 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x500 PUSH0 PUSH2 0x806 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x50D DUP3 CALLER DUP4 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x517 DUP3 DUP3 PUSH2 0x788 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x31A SWAP1 PUSH2 0xC1A JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3A8 DUP2 DUP6 DUP6 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x53F PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x568 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44F JUMP JUMPDEST PUSH2 0x3E1 DUP2 PUSH2 0x806 JUMP JUMPDEST PUSH0 PUSH32 0x0 TIMESTAMP LT DUP1 PUSH2 0x5BE JUMPI POP PUSH32 0x0 ISZERO JUMPDEST ISZERO PUSH2 0x5C8 JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5F3 TIMESTAMP PUSH32 0x0 PUSH2 0x7E9 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 LT PUSH2 0x643 JUMPI PUSH32 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x697 PUSH32 0x0 PUSH2 0x691 PUSH32 0x0 DUP5 PUSH2 0x857 JUMP JUMPDEST SWAP1 PUSH2 0x862 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6AA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x86D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x725 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x717 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x44F JUMP JUMPDEST PUSH2 0x725 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x86D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x77D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44F JUMP JUMPDEST PUSH2 0x6AA DUP4 DUP4 DUP4 PUSH2 0x93F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44F JUMP JUMPDEST PUSH2 0x517 DUP3 PUSH0 DUP4 PUSH2 0x93F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x500 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44F JUMP JUMPDEST PUSH0 PUSH2 0x7F4 DUP3 DUP5 PUSH2 0xC66 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7F4 DUP3 DUP5 PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7F4 DUP3 DUP5 PUSH2 0xC8C JUMP JUMPDEST PUSH0 PUSH2 0x7F4 DUP3 DUP5 PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x725 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x931 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x94A DUP4 DUP4 DUP4 PUSH2 0x9E1 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SUB PUSH2 0x6AA JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x981 JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2063616E6E6F74207472616E73666572206C6F636B6564207665 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x7374656420746F6B656E73 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA0B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA00 SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xA7B SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x44F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA97 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xAFA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB52 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB68 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB71 DUP4 PUSH2 0xB3C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB91 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB9A DUP5 PUSH2 0xB3C JUMP JUMPDEST SWAP3 POP PUSH2 0xBA8 PUSH1 0x20 DUP6 ADD PUSH2 0xB3C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7F4 DUP3 PUSH2 0xB3C JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBFA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC03 DUP4 PUSH2 0xB3C JUMP JUMPDEST SWAP2 POP PUSH2 0xC11 PUSH1 0x20 DUP5 ADD PUSH2 0xB3C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC2E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC4C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AE PUSH2 0xC52 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AE PUSH2 0xC52 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3AE JUMPI PUSH2 0x3AE PUSH2 0xC52 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xCBD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xB3 0xC5 PUSH22 0xD73941A6363605C80751B333F5002709AC8B48E0ACAD JUMP PUSH25 0x2E2CDA7E64736F6C634300081A003300000000000000000000 ",
							"sourceMap": "303:2581:8:-:0;;;759:913;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1014:13;990:5;997:7;1667:5:2;:13;990:5:8;1667::2;:13;:::i;:::-;-1:-1:-1;1690:7:2;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;4602:51:9;4575:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;1048:27:8;::::2;1040:82;;;::::0;-1:-1:-1;;;1040:82:8;;4866:2:9;1040:82:8::2;::::0;::::2;4848:21:9::0;4905:2;4885:18;;;4878:30;4944:34;4924:18;;;4917:62;-1:-1:-1;;;4995:18:9;;;4988:40;5045:19;;1040:82:8::2;4664:406:9::0;1040:82:8::2;1168:1;1140:25;:29;1132:85;;;::::0;-1:-1:-1;;;1132:85:8;;5277:2:9;1132:85:8::2;::::0;::::2;5259:21:9::0;5316:2;5296:18;;;5289:30;5355:34;5335:18;;;5328:62;-1:-1:-1;;;5406:18:9;;;5399:41;5457:19;;1132:85:8::2;5075:407:9::0;1132:85:8::2;1247:15;1228:34;::::0;1272:43:::2;::::0;;;1325:38:::2;::::0;;;1378:23;;1374:95:::2;;1417:41;1423:13:::0;1438:19;1417:5:::2;:41::i;:::-;1483:22:::0;;1479:93:::2;;1521:40;1535:4;1542:18:::0;1521:5:::2;:40::i;:::-;1630:16;::::0;1648:15:::2;::::0;1587:77:::2;::::0;;5689:25:9;;;5745:2;5730:18;;5723:34;;;;5773:18;;5766:34;1587:77:8::2;::::0;5677:2:9;5662:18;1587:77:8::2;;;;;;;759:913:::0;;;;;;303:2581;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7458:208:2:-;-1:-1:-1;;;;;7528:21:2;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:2;;7601:1;7572:32;;;4602:51:9;4575:18;;7572:32:2;4456:203:9;7524:91:2;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;2590:290:8:-;2685:31;2699:4;2705:2;2709:6;2685:13;:31::i;:::-;2747:4;-1:-1:-1;;;;;2731:21:8;;;2727:146;;1710:6:0;;-1:-1:-1;;;;;2776:13:8;;;1710:6:0;;2776:13:8;:38;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;2793:10:8;:21;2776:38;2768:94;;;;-1:-1:-1;;;2768:94:8;;6013:2:9;2768:94:8;;;5995:21:9;6052:2;6032:18;;;6025:30;6091:34;6071:18;;;6064:62;-1:-1:-1;;;6142:18:9;;;6135:41;6193:19;;2768:94:8;5811:407:9;2768:94:8;2590:290;;;:::o;6008:1107:2:-;-1:-1:-1;;;;;6097:18:2;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:2;;-1:-1:-1;6093:540:2;;-1:-1:-1;;;;;6307:15:2;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:2;;-1:-1:-1;;;;;6670:32:9;;6386:50:2;;;6652:51:9;6719:18;;;6712:34;;;6762:18;;;6755:34;;;6625:18;;6386:50:2;6450:345:9;6336:115:2;-1:-1:-1;;;;;6571:15:2;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:2;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:2;7092:4;-1:-1:-1;;;;;7083:25:2;;7102:5;7083:25;;;;6946::9;;6934:2;6919:18;;6800:177;7083:25:2;;;;;;;;6008:1107;;;:::o;14:127:9:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:723;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:9;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:9;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:9;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:9;;;725:1;722;715:12;670:59;782:6;775:4;767:6;763:17;756:4;748:6;744:17;738:51;837:1;809:19;;;830:4;805:30;798:41;;;;813:6;146:723;-1:-1:-1;;;146:723:9:o;874:1068::-;1009:6;1017;1025;1033;1041;1049;1102:3;1090:9;1081:7;1077:23;1073:33;1070:53;;;1119:1;1116;1109:12;1070:53;1146:16;;-1:-1:-1;;;;;1174:30:9;;1171:50;;;1217:1;1214;1207:12;1171:50;1240:61;1293:7;1284:6;1273:9;1269:22;1240:61;:::i;:::-;1347:2;1332:18;;1326:25;1230:71;;-1:-1:-1;1326:25:9;-1:-1:-1;;;;;;1363:32:9;;1360:52;;;1408:1;1405;1398:12;1360:52;1431:63;1486:7;1475:8;1464:9;1460:24;1431:63;:::i;:::-;1556:2;1541:18;;1535:25;1650:2;1635:18;;1629:25;1746:3;1731:19;;1725:26;1822:3;1807:19;;1801:26;1421:73;;-1:-1:-1;1535:25:9;;-1:-1:-1;1629:25:9;-1:-1:-1;1725:26:9;-1:-1:-1;1801:26:9;-1:-1:-1;;;;;;1858:33:9;;1846:46;;1836:74;;1906:1;1903;1896:12;1836:74;1929:7;1919:17;;;874:1068;;;;;;;;:::o;1947:380::-;2026:1;2022:12;;;;2069;;;2090:61;;2144:4;2136:6;2132:17;2122:27;;2090:61;2197:2;2189:6;2186:14;2166:18;2163:38;2160:161;;2243:10;2238:3;2234:20;2231:1;2224:31;2278:4;2275:1;2268:15;2306:4;2303:1;2296:15;2160:161;;1947:380;;;:::o;2458:518::-;2560:2;2555:3;2552:11;2549:421;;;2596:5;2593:1;2586:16;2640:4;2637:1;2627:18;2710:2;2698:10;2694:19;2691:1;2687:27;2681:4;2677:38;2746:4;2734:10;2731:20;2728:47;;;-1:-1:-1;2769:4:9;2728:47;2824:2;2819:3;2815:12;2812:1;2808:20;2802:4;2798:31;2788:41;;2879:81;2897:2;2890:5;2887:13;2879:81;;;2956:1;2942:16;;2923:1;2912:13;2879:81;;;2883:3;;2458:518;;;:::o;3152:1299::-;3272:10;;-1:-1:-1;;;;;3294:30:9;;3291:56;;;3327:18;;:::i;:::-;3356:97;3446:6;3406:38;3438:4;3432:11;3406:38;:::i;:::-;3400:4;3356:97;:::i;:::-;3502:4;3533:2;3522:14;;3550:1;3545:649;;;;4238:1;4255:6;4252:89;;;-1:-1:-1;4307:19:9;;;4301:26;4252:89;-1:-1:-1;;3109:1:9;3105:11;;;3101:24;3097:29;3087:40;3133:1;3129:11;;;3084:57;4354:81;;3515:930;;3545:649;2405:1;2398:14;;;2442:4;2429:18;;-1:-1:-1;;3581:20:9;;;3699:222;3713:7;3710:1;3707:14;3699:222;;;3795:19;;;3789:26;3774:42;;3902:4;3887:20;;;;3855:1;3843:14;;;;3729:12;3699:222;;;3703:3;3949:6;3940:7;3937:19;3934:201;;;4010:19;;;4004:26;-1:-1:-1;;4093:1:9;4089:14;;;4105:3;4085:24;4081:37;4077:42;4062:58;4047:74;;3934:201;-1:-1:-1;;;;4181:1:9;4165:14;;;4161:22;4148:36;;-1:-1:-1;3152:1299:9:o;6223:222::-;6288:9;;;6309:10;;;6306:133;;;6361:10;6356:3;6352:20;6349:1;6342:31;6396:4;6393:1;6386:15;6424:4;6421:1;6414:15;6306:133;6223:222;;;;:::o;6800:177::-;303:2581:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1693,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2157,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 1928,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1980,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1711,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2054,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1835,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1540": {
									"entryPoint": 2367,
									"id": 1540,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 2529,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_1155": {
									"entryPoint": 2043,
									"id": 1155,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 923,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_922": {
									"entryPoint": 1282,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_901": {
									"entryPoint": 983,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@currentlyVested_1451": {
									"entryPoint": 1393,
									"id": 1451,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@div_1200": {
									"entryPoint": 2146,
									"id": 1200,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_1185": {
									"entryPoint": 2135,
									"id": 1185,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_345": {
									"entryPoint": 779,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releaseVestedTokens_1499": {
									"entryPoint": 996,
									"id": 1499,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1263,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1170": {
									"entryPoint": 2025,
									"id": 1170,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_354": {
									"entryPoint": 1307,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalVestedReleased_1314": {
									"entryPoint": null,
									"id": 1314,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalVestedSupply_1312": {
									"entryPoint": null,
									"id": 1312,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_482": {
									"entryPoint": 948,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1335,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1322,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@vestingDuration_1310": {
									"entryPoint": null,
									"id": 1310,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vestingStartTime_1308": {
									"entryPoint": null,
									"id": 1308,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_75366354ca8794f1161f0ede5d8d635aea60f78a94a51ba9176fdc23d5ad11b9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b776372014ba1d8e41c23ff5d54fb0f087b4c983ecc3b5ff5f98a64e6a6cf785__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3154,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5094:9",
										"nodeType": "YulBlock",
										"src": "0:5094:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:9",
													"nodeType": "YulBlock",
													"src": "135:297:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:9",
																		"nodeType": "YulLiteral",
																		"src": "163:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:9"
																},
																"nativeSrc": "145:21:9",
																"nodeType": "YulFunctionCall",
																"src": "145:21:9"
															},
															"nativeSrc": "145:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:9"
														},
														{
															"nativeSrc": "175:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:9"
																},
																"nativeSrc": "189:13:9",
																"nodeType": "YulFunctionCall",
																"src": "189:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:9",
																	"nodeType": "YulTypedName",
																	"src": "179:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:9",
																				"nodeType": "YulLiteral",
																				"src": "233:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:9"
																		},
																		"nativeSrc": "218:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:9"
																},
																"nativeSrc": "211:34:9",
																"nodeType": "YulFunctionCall",
																"src": "211:34:9"
															},
															"nativeSrc": "211:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:9",
																				"nodeType": "YulLiteral",
																				"src": "275:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:9"
																		},
																		"nativeSrc": "260:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:9",
																				"nodeType": "YulLiteral",
																				"src": "292:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:9"
																		},
																		"nativeSrc": "280:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:9"
																},
																"nativeSrc": "254:50:9",
																"nodeType": "YulFunctionCall",
																"src": "254:50:9"
															},
															"nativeSrc": "254:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:9"
																				},
																				"nativeSrc": "324:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:9",
																				"nodeType": "YulLiteral",
																				"src": "348:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:9"
																		},
																		"nativeSrc": "320:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:9",
																		"nodeType": "YulLiteral",
																		"src": "353:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:9"
																},
																"nativeSrc": "313:42:9",
																"nodeType": "YulFunctionCall",
																"src": "313:42:9"
															},
															"nativeSrc": "313:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:9"
														},
														{
															"nativeSrc": "364:62:9",
															"nodeType": "YulAssignment",
															"src": "364:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:9",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:9",
																								"nodeType": "YulLiteral",
																								"src": "407:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:9"
																						},
																						"nativeSrc": "395:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:9",
																								"nodeType": "YulLiteral",
																								"src": "416:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:9"
																						},
																						"nativeSrc": "412:7:9",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:9"
																				},
																				"nativeSrc": "391:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:9"
																		},
																		"nativeSrc": "376:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:9",
																		"nodeType": "YulLiteral",
																		"src": "423:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:9"
																},
																"nativeSrc": "372:54:9",
																"nodeType": "YulFunctionCall",
																"src": "372:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:9",
														"nodeType": "YulTypedName",
														"src": "104:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:9",
														"nodeType": "YulTypedName",
														"src": "115:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:9",
														"nodeType": "YulTypedName",
														"src": "126:4:9",
														"type": ""
													}
												],
												"src": "14:418:9"
											},
											{
												"body": {
													"nativeSrc": "486:124:9",
													"nodeType": "YulBlock",
													"src": "486:124:9",
													"statements": [
														{
															"nativeSrc": "496:29:9",
															"nodeType": "YulAssignment",
															"src": "496:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:9"
																},
																"nativeSrc": "505:20:9",
																"nodeType": "YulFunctionCall",
																"src": "505:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:9",
																"nodeType": "YulBlock",
																"src": "588:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:9",
																					"nodeType": "YulLiteral",
																					"src": "597:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:9",
																					"nodeType": "YulLiteral",
																					"src": "600:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:9"
																			},
																			"nativeSrc": "590:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:9"
																		},
																		"nativeSrc": "590:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:9",
																										"nodeType": "YulLiteral",
																										"src": "573:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:9",
																										"nodeType": "YulLiteral",
																										"src": "578:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:9"
																								},
																								"nativeSrc": "569:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:9",
																								"nodeType": "YulLiteral",
																								"src": "582:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:9"
																						},
																						"nativeSrc": "565:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:9"
																				},
																				"nativeSrc": "554:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:9"
																		},
																		"nativeSrc": "544:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:9"
																},
																"nativeSrc": "537:50:9",
																"nodeType": "YulFunctionCall",
																"src": "537:50:9"
															},
															"nativeSrc": "534:70:9",
															"nodeType": "YulIf",
															"src": "534:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:9",
														"nodeType": "YulTypedName",
														"src": "465:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:9",
														"nodeType": "YulTypedName",
														"src": "476:5:9",
														"type": ""
													}
												],
												"src": "437:173:9"
											},
											{
												"body": {
													"nativeSrc": "702:213:9",
													"nodeType": "YulBlock",
													"src": "702:213:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:9",
																"nodeType": "YulBlock",
																"src": "748:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:9",
																					"nodeType": "YulLiteral",
																					"src": "757:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:9",
																					"nodeType": "YulLiteral",
																					"src": "760:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:9"
																			},
																			"nativeSrc": "750:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:9"
																		},
																		"nativeSrc": "750:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:9"
																		},
																		"nativeSrc": "719:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:9",
																		"nodeType": "YulLiteral",
																		"src": "744:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:9"
																},
																"nativeSrc": "715:32:9",
																"nodeType": "YulFunctionCall",
																"src": "715:32:9"
															},
															"nativeSrc": "712:52:9",
															"nodeType": "YulIf",
															"src": "712:52:9"
														},
														{
															"nativeSrc": "773:39:9",
															"nodeType": "YulAssignment",
															"src": "773:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:9"
																},
																"nativeSrc": "783:29:9",
																"nodeType": "YulFunctionCall",
																"src": "783:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:9"
																}
															]
														},
														{
															"nativeSrc": "821:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:9",
																"nodeType": "YulLiteral",
																"src": "834:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:9",
																	"nodeType": "YulTypedName",
																	"src": "825:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:9",
															"nodeType": "YulAssignment",
															"src": "844:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:9",
																				"nodeType": "YulLiteral",
																				"src": "881:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:9"
																		},
																		"nativeSrc": "866:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:9"
																},
																"nativeSrc": "853:32:9",
																"nodeType": "YulFunctionCall",
																"src": "853:32:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:9"
																}
															]
														},
														{
															"nativeSrc": "894:15:9",
															"nodeType": "YulAssignment",
															"src": "894:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:9",
																"nodeType": "YulIdentifier",
																"src": "904:5:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:9",
														"nodeType": "YulTypedName",
														"src": "660:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:9",
														"nodeType": "YulTypedName",
														"src": "671:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:9",
														"nodeType": "YulTypedName",
														"src": "683:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:9",
														"nodeType": "YulTypedName",
														"src": "691:6:9",
														"type": ""
													}
												],
												"src": "615:300:9"
											},
											{
												"body": {
													"nativeSrc": "1015:92:9",
													"nodeType": "YulBlock",
													"src": "1015:92:9",
													"statements": [
														{
															"nativeSrc": "1025:26:9",
															"nodeType": "YulAssignment",
															"src": "1025:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:9"
																},
																"nativeSrc": "1033:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:9"
																				},
																				"nativeSrc": "1085:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:9"
																		},
																		"nativeSrc": "1078:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:9"
																},
																"nativeSrc": "1060:41:9",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:9"
															},
															"nativeSrc": "1060:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:9",
														"nodeType": "YulTypedName",
														"src": "984:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:9",
														"nodeType": "YulTypedName",
														"src": "995:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:9",
														"nodeType": "YulTypedName",
														"src": "1006:4:9",
														"type": ""
													}
												],
												"src": "920:187:9"
											},
											{
												"body": {
													"nativeSrc": "1213:76:9",
													"nodeType": "YulBlock",
													"src": "1213:76:9",
													"statements": [
														{
															"nativeSrc": "1223:26:9",
															"nodeType": "YulAssignment",
															"src": "1223:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:9"
																},
																"nativeSrc": "1231:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:9"
																},
																"nativeSrc": "1258:25:9",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:9"
															},
															"nativeSrc": "1258:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:9",
														"nodeType": "YulTypedName",
														"src": "1182:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:9",
														"nodeType": "YulTypedName",
														"src": "1193:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:9",
														"nodeType": "YulTypedName",
														"src": "1204:4:9",
														"type": ""
													}
												],
												"src": "1112:177:9"
											},
											{
												"body": {
													"nativeSrc": "1398:270:9",
													"nodeType": "YulBlock",
													"src": "1398:270:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:9",
																"nodeType": "YulBlock",
																"src": "1444:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:9"
																			},
																			"nativeSrc": "1446:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:9"
																		},
																		"nativeSrc": "1446:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:9"
																		},
																		"nativeSrc": "1415:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:9"
																},
																"nativeSrc": "1411:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:9"
															},
															"nativeSrc": "1408:52:9",
															"nodeType": "YulIf",
															"src": "1408:52:9"
														},
														{
															"nativeSrc": "1469:39:9",
															"nodeType": "YulAssignment",
															"src": "1469:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:9"
																},
																"nativeSrc": "1479:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:9"
																}
															]
														},
														{
															"nativeSrc": "1517:48:9",
															"nodeType": "YulAssignment",
															"src": "1517:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:9"
																		},
																		"nativeSrc": "1546:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:9"
																},
																"nativeSrc": "1527:38:9",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:9"
																}
															]
														},
														{
															"nativeSrc": "1574:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:9",
																"nodeType": "YulLiteral",
																"src": "1587:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:9",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:9",
															"nodeType": "YulAssignment",
															"src": "1597:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:9"
																		},
																		"nativeSrc": "1619:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:9"
																},
																"nativeSrc": "1606:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:9"
																}
															]
														},
														{
															"nativeSrc": "1647:15:9",
															"nodeType": "YulAssignment",
															"src": "1647:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:9",
																"nodeType": "YulIdentifier",
																"src": "1657:5:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:9",
														"nodeType": "YulTypedName",
														"src": "1348:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:9",
														"nodeType": "YulTypedName",
														"src": "1359:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:9",
														"nodeType": "YulTypedName",
														"src": "1371:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:9",
														"nodeType": "YulTypedName",
														"src": "1379:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:9",
														"nodeType": "YulTypedName",
														"src": "1387:6:9",
														"type": ""
													}
												],
												"src": "1294:374:9"
											},
											{
												"body": {
													"nativeSrc": "1770:87:9",
													"nodeType": "YulBlock",
													"src": "1770:87:9",
													"statements": [
														{
															"nativeSrc": "1780:26:9",
															"nodeType": "YulAssignment",
															"src": "1780:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:9"
																},
																"nativeSrc": "1788:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:9",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:9"
																		},
																		"nativeSrc": "1833:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:9"
																},
																"nativeSrc": "1815:36:9",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:9"
															},
															"nativeSrc": "1815:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:9",
														"nodeType": "YulTypedName",
														"src": "1739:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:9",
														"nodeType": "YulTypedName",
														"src": "1750:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:9",
														"nodeType": "YulTypedName",
														"src": "1761:4:9",
														"type": ""
													}
												],
												"src": "1673:184:9"
											},
											{
												"body": {
													"nativeSrc": "1932:156:9",
													"nodeType": "YulBlock",
													"src": "1932:156:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:9",
																"nodeType": "YulBlock",
																"src": "1978:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:9"
																			},
																			"nativeSrc": "1980:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:9"
																		},
																		"nativeSrc": "1980:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:9"
																		},
																		"nativeSrc": "1949:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:9"
																},
																"nativeSrc": "1945:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:9"
															},
															"nativeSrc": "1942:52:9",
															"nodeType": "YulIf",
															"src": "1942:52:9"
														},
														{
															"nativeSrc": "2003:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2003:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "2016:1:9",
																"nodeType": "YulLiteral",
																"src": "2016:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2007:5:9",
																	"nodeType": "YulTypedName",
																	"src": "2007:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2026:32:9",
															"nodeType": "YulAssignment",
															"src": "2026:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2048:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2048:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2035:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2035:12:9"
																},
																"nativeSrc": "2035:23:9",
																"nodeType": "YulFunctionCall",
																"src": "2035:23:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2026:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2026:5:9"
																}
															]
														},
														{
															"nativeSrc": "2067:15:9",
															"nodeType": "YulAssignment",
															"src": "2067:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "2077:5:9",
																"nodeType": "YulIdentifier",
																"src": "2077:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2067:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2067:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1862:226:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:9",
														"nodeType": "YulTypedName",
														"src": "1898:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:9",
														"nodeType": "YulTypedName",
														"src": "1909:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:9",
														"nodeType": "YulTypedName",
														"src": "1921:6:9",
														"type": ""
													}
												],
												"src": "1862:226:9"
											},
											{
												"body": {
													"nativeSrc": "2163:116:9",
													"nodeType": "YulBlock",
													"src": "2163:116:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2209:16:9",
																"nodeType": "YulBlock",
																"src": "2209:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2218:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2218:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2221:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2221:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2211:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2211:6:9"
																			},
																			"nativeSrc": "2211:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2211:12:9"
																		},
																		"nativeSrc": "2211:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2211:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2184:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2184:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2193:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2193:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2180:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2180:3:9"
																		},
																		"nativeSrc": "2180:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2180:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2205:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2205:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2176:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2176:3:9"
																},
																"nativeSrc": "2176:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2176:32:9"
															},
															"nativeSrc": "2173:52:9",
															"nodeType": "YulIf",
															"src": "2173:52:9"
														},
														{
															"nativeSrc": "2234:39:9",
															"nodeType": "YulAssignment",
															"src": "2234:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2263:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2263:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2244:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2244:18:9"
																},
																"nativeSrc": "2244:29:9",
																"nodeType": "YulFunctionCall",
																"src": "2244:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2234:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2234:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2093:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2129:9:9",
														"nodeType": "YulTypedName",
														"src": "2129:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2140:7:9",
														"nodeType": "YulTypedName",
														"src": "2140:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2152:6:9",
														"nodeType": "YulTypedName",
														"src": "2152:6:9",
														"type": ""
													}
												],
												"src": "2093:186:9"
											},
											{
												"body": {
													"nativeSrc": "2385:102:9",
													"nodeType": "YulBlock",
													"src": "2385:102:9",
													"statements": [
														{
															"nativeSrc": "2395:26:9",
															"nodeType": "YulAssignment",
															"src": "2395:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2407:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2407:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2418:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2418:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2403:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2403:3:9"
																},
																"nativeSrc": "2403:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2403:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2395:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2395:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2437:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2437:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2452:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2452:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2468:3:9",
																								"nodeType": "YulLiteral",
																								"src": "2468:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2473:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2473:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2464:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2464:3:9"
																						},
																						"nativeSrc": "2464:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2464:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2477:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2477:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2460:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2460:3:9"
																				},
																				"nativeSrc": "2460:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2460:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2448:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2448:3:9"
																		},
																		"nativeSrc": "2448:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2448:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2430:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:9"
																},
																"nativeSrc": "2430:51:9",
																"nodeType": "YulFunctionCall",
																"src": "2430:51:9"
															},
															"nativeSrc": "2430:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "2430:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2284:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2354:9:9",
														"nodeType": "YulTypedName",
														"src": "2354:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2365:6:9",
														"nodeType": "YulTypedName",
														"src": "2365:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2376:4:9",
														"nodeType": "YulTypedName",
														"src": "2376:4:9",
														"type": ""
													}
												],
												"src": "2284:203:9"
											},
											{
												"body": {
													"nativeSrc": "2579:173:9",
													"nodeType": "YulBlock",
													"src": "2579:173:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2625:16:9",
																"nodeType": "YulBlock",
																"src": "2625:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2634:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2634:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2637:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2637:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2627:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2627:6:9"
																			},
																			"nativeSrc": "2627:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2627:12:9"
																		},
																		"nativeSrc": "2627:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2627:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2600:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2600:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2596:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2596:3:9"
																		},
																		"nativeSrc": "2596:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2596:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2621:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2621:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2592:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2592:3:9"
																},
																"nativeSrc": "2592:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2592:32:9"
															},
															"nativeSrc": "2589:52:9",
															"nodeType": "YulIf",
															"src": "2589:52:9"
														},
														{
															"nativeSrc": "2650:39:9",
															"nodeType": "YulAssignment",
															"src": "2650:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2679:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2679:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2660:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2660:18:9"
																},
																"nativeSrc": "2660:29:9",
																"nodeType": "YulFunctionCall",
																"src": "2660:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2650:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2650:6:9"
																}
															]
														},
														{
															"nativeSrc": "2698:48:9",
															"nodeType": "YulAssignment",
															"src": "2698:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2731:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2731:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2742:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2742:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2727:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2727:3:9"
																		},
																		"nativeSrc": "2727:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2727:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2708:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2708:18:9"
																},
																"nativeSrc": "2708:38:9",
																"nodeType": "YulFunctionCall",
																"src": "2708:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2698:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2698:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2492:260:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2537:9:9",
														"nodeType": "YulTypedName",
														"src": "2537:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2548:7:9",
														"nodeType": "YulTypedName",
														"src": "2548:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2560:6:9",
														"nodeType": "YulTypedName",
														"src": "2560:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2568:6:9",
														"nodeType": "YulTypedName",
														"src": "2568:6:9",
														"type": ""
													}
												],
												"src": "2492:260:9"
											},
											{
												"body": {
													"nativeSrc": "2812:325:9",
													"nodeType": "YulBlock",
													"src": "2812:325:9",
													"statements": [
														{
															"nativeSrc": "2822:22:9",
															"nodeType": "YulAssignment",
															"src": "2822:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2836:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2836:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2839:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2839:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2832:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2832:3:9"
																},
																"nativeSrc": "2832:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2832:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2822:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:9"
																}
															]
														},
														{
															"nativeSrc": "2853:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2853:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2883:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2883:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2889:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2889:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2879:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2879:3:9"
																},
																"nativeSrc": "2879:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2879:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2857:18:9",
																	"nodeType": "YulTypedName",
																	"src": "2857:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2930:31:9",
																"nodeType": "YulBlock",
																"src": "2930:31:9",
																"statements": [
																	{
																		"nativeSrc": "2932:27:9",
																		"nodeType": "YulAssignment",
																		"src": "2932:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2946:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2946:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2954:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2954:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2942:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2942:3:9"
																			},
																			"nativeSrc": "2942:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2942:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2932:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2910:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2910:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2903:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2903:6:9"
																},
																"nativeSrc": "2903:26:9",
																"nodeType": "YulFunctionCall",
																"src": "2903:26:9"
															},
															"nativeSrc": "2900:61:9",
															"nodeType": "YulIf",
															"src": "2900:61:9"
														},
														{
															"body": {
																"nativeSrc": "3020:111:9",
																"nodeType": "YulBlock",
																"src": "3020:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3041:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3041:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3048:3:9",
																							"nodeType": "YulLiteral",
																							"src": "3048:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3053:10:9",
																							"nodeType": "YulLiteral",
																							"src": "3053:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3044:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3044:3:9"
																					},
																					"nativeSrc": "3044:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3044:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3034:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3034:6:9"
																			},
																			"nativeSrc": "3034:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3034:31:9"
																		},
																		"nativeSrc": "3034:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3034:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3085:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3085:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3088:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3088:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3078:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3078:6:9"
																			},
																			"nativeSrc": "3078:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3078:15:9"
																		},
																		"nativeSrc": "3078:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3078:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3113:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3113:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3116:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3116:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3106:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3106:6:9"
																			},
																			"nativeSrc": "3106:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3106:15:9"
																		},
																		"nativeSrc": "3106:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3106:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2976:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2976:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2999:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2999:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3007:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3007:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2996:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2996:2:9"
																		},
																		"nativeSrc": "2996:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2996:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2973:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2973:2:9"
																},
																"nativeSrc": "2973:38:9",
																"nodeType": "YulFunctionCall",
																"src": "2973:38:9"
															},
															"nativeSrc": "2970:161:9",
															"nodeType": "YulIf",
															"src": "2970:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2757:380:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2792:4:9",
														"nodeType": "YulTypedName",
														"src": "2792:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2801:6:9",
														"nodeType": "YulTypedName",
														"src": "2801:6:9",
														"type": ""
													}
												],
												"src": "2757:380:9"
											},
											{
												"body": {
													"nativeSrc": "3316:224:9",
													"nodeType": "YulBlock",
													"src": "3316:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3333:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3333:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3344:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3344:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3326:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:9"
																},
																"nativeSrc": "3326:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3326:21:9"
															},
															"nativeSrc": "3326:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "3326:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3367:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3367:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3378:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3378:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3363:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3363:3:9"
																		},
																		"nativeSrc": "3363:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3363:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3383:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3383:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3356:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3356:6:9"
																},
																"nativeSrc": "3356:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3356:30:9"
															},
															"nativeSrc": "3356:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "3356:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3406:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3406:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3417:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3417:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3402:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3402:3:9"
																		},
																		"nativeSrc": "3402:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3402:18:9"
																	},
																	{
																		"hexValue": "56657374696e673a206e6f206e657720746f6b656e7320686176652076657374",
																		"kind": "string",
																		"nativeSrc": "3422:34:9",
																		"nodeType": "YulLiteral",
																		"src": "3422:34:9",
																		"type": "",
																		"value": "Vesting: no new tokens have vest"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3395:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3395:6:9"
																},
																"nativeSrc": "3395:62:9",
																"nodeType": "YulFunctionCall",
																"src": "3395:62:9"
															},
															"nativeSrc": "3395:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "3395:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3477:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3477:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3488:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3488:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3473:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:9"
																		},
																		"nativeSrc": "3473:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3473:18:9"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "3493:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3493:4:9",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3466:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3466:6:9"
																},
																"nativeSrc": "3466:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3466:32:9"
															},
															"nativeSrc": "3466:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "3466:32:9"
														},
														{
															"nativeSrc": "3507:27:9",
															"nodeType": "YulAssignment",
															"src": "3507:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3519:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3519:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3530:3:9",
																		"nodeType": "YulLiteral",
																		"src": "3530:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3515:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3515:3:9"
																},
																"nativeSrc": "3515:19:9",
																"nodeType": "YulFunctionCall",
																"src": "3515:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3507:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3507:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_75366354ca8794f1161f0ede5d8d635aea60f78a94a51ba9176fdc23d5ad11b9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3142:398:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3293:9:9",
														"nodeType": "YulTypedName",
														"src": "3293:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3307:4:9",
														"nodeType": "YulTypedName",
														"src": "3307:4:9",
														"type": ""
													}
												],
												"src": "3142:398:9"
											},
											{
												"body": {
													"nativeSrc": "3702:188:9",
													"nodeType": "YulBlock",
													"src": "3702:188:9",
													"statements": [
														{
															"nativeSrc": "3712:26:9",
															"nodeType": "YulAssignment",
															"src": "3712:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3724:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3724:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3735:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3735:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3720:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3720:3:9"
																},
																"nativeSrc": "3720:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3720:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3712:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3712:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3754:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3754:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3769:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3769:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3785:3:9",
																								"nodeType": "YulLiteral",
																								"src": "3785:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3790:1:9",
																								"nodeType": "YulLiteral",
																								"src": "3790:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3781:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3781:3:9"
																						},
																						"nativeSrc": "3781:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3781:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3794:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3794:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3777:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3777:3:9"
																				},
																				"nativeSrc": "3777:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3777:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3765:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3765:3:9"
																		},
																		"nativeSrc": "3765:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3747:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3747:6:9"
																},
																"nativeSrc": "3747:51:9",
																"nodeType": "YulFunctionCall",
																"src": "3747:51:9"
															},
															"nativeSrc": "3747:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "3747:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3818:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3818:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3829:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3829:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3814:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3814:3:9"
																		},
																		"nativeSrc": "3814:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3814:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3834:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3834:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3807:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3807:6:9"
																},
																"nativeSrc": "3807:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3807:34:9"
															},
															"nativeSrc": "3807:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3807:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3861:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3861:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3872:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3872:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3857:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3857:3:9"
																		},
																		"nativeSrc": "3857:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3857:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3877:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3877:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3850:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3850:6:9"
																},
																"nativeSrc": "3850:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3850:34:9"
															},
															"nativeSrc": "3850:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3850:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3545:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3655:9:9",
														"nodeType": "YulTypedName",
														"src": "3655:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3666:6:9",
														"nodeType": "YulTypedName",
														"src": "3666:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3674:6:9",
														"nodeType": "YulTypedName",
														"src": "3674:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3682:6:9",
														"nodeType": "YulTypedName",
														"src": "3682:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3693:4:9",
														"nodeType": "YulTypedName",
														"src": "3693:4:9",
														"type": ""
													}
												],
												"src": "3545:345:9"
											},
											{
												"body": {
													"nativeSrc": "3927:95:9",
													"nodeType": "YulBlock",
													"src": "3927:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3944:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3944:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3951:3:9",
																				"nodeType": "YulLiteral",
																				"src": "3951:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3956:10:9",
																				"nodeType": "YulLiteral",
																				"src": "3956:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3947:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3947:3:9"
																		},
																		"nativeSrc": "3947:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3947:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3937:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3937:6:9"
																},
																"nativeSrc": "3937:31:9",
																"nodeType": "YulFunctionCall",
																"src": "3937:31:9"
															},
															"nativeSrc": "3937:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "3937:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3984:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3984:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3987:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3987:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3977:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3977:6:9"
																},
																"nativeSrc": "3977:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3977:15:9"
															},
															"nativeSrc": "3977:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "3977:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4008:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4008:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4011:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4011:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4001:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4001:6:9"
																},
																"nativeSrc": "4001:15:9",
																"nodeType": "YulFunctionCall",
																"src": "4001:15:9"
															},
															"nativeSrc": "4001:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "4001:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3895:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "3895:127:9"
											},
											{
												"body": {
													"nativeSrc": "4076:79:9",
													"nodeType": "YulBlock",
													"src": "4076:79:9",
													"statements": [
														{
															"nativeSrc": "4086:17:9",
															"nodeType": "YulAssignment",
															"src": "4086:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4098:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4098:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4101:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4101:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4094:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4094:3:9"
																},
																"nativeSrc": "4094:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4094:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4086:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4086:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4127:22:9",
																"nodeType": "YulBlock",
																"src": "4127:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4129:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4129:16:9"
																			},
																			"nativeSrc": "4129:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4129:18:9"
																		},
																		"nativeSrc": "4129:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4129:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4118:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4118:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4124:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4124:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4115:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4115:2:9"
																},
																"nativeSrc": "4115:11:9",
																"nodeType": "YulFunctionCall",
																"src": "4115:11:9"
															},
															"nativeSrc": "4112:37:9",
															"nodeType": "YulIf",
															"src": "4112:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4027:128:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4058:1:9",
														"nodeType": "YulTypedName",
														"src": "4058:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4061:1:9",
														"nodeType": "YulTypedName",
														"src": "4061:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4067:4:9",
														"nodeType": "YulTypedName",
														"src": "4067:4:9",
														"type": ""
													}
												],
												"src": "4027:128:9"
											},
											{
												"body": {
													"nativeSrc": "4208:77:9",
													"nodeType": "YulBlock",
													"src": "4208:77:9",
													"statements": [
														{
															"nativeSrc": "4218:16:9",
															"nodeType": "YulAssignment",
															"src": "4218:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4229:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4229:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4232:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4232:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4225:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4225:3:9"
																},
																"nativeSrc": "4225:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4225:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4218:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4218:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4257:22:9",
																"nodeType": "YulBlock",
																"src": "4257:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4259:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4259:16:9"
																			},
																			"nativeSrc": "4259:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4259:18:9"
																		},
																		"nativeSrc": "4259:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4259:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4249:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4249:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4252:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4252:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4246:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4246:2:9"
																},
																"nativeSrc": "4246:10:9",
																"nodeType": "YulFunctionCall",
																"src": "4246:10:9"
															},
															"nativeSrc": "4243:36:9",
															"nodeType": "YulIf",
															"src": "4243:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4160:125:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4191:1:9",
														"nodeType": "YulTypedName",
														"src": "4191:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4194:1:9",
														"nodeType": "YulTypedName",
														"src": "4194:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4200:3:9",
														"nodeType": "YulTypedName",
														"src": "4200:3:9",
														"type": ""
													}
												],
												"src": "4160:125:9"
											},
											{
												"body": {
													"nativeSrc": "4342:116:9",
													"nodeType": "YulBlock",
													"src": "4342:116:9",
													"statements": [
														{
															"nativeSrc": "4352:20:9",
															"nodeType": "YulAssignment",
															"src": "4352:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4367:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4367:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4370:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4370:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4363:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4363:3:9"
																},
																"nativeSrc": "4363:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4363:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4352:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4352:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4430:22:9",
																"nodeType": "YulBlock",
																"src": "4430:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4432:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4432:16:9"
																			},
																			"nativeSrc": "4432:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4432:18:9"
																		},
																		"nativeSrc": "4432:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4432:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4401:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "4401:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4394:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "4394:6:9"
																				},
																				"nativeSrc": "4394:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4394:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4408:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "4408:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4415:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "4415:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4424:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "4424:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4411:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4411:3:9"
																						},
																						"nativeSrc": "4411:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4411:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4405:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "4405:2:9"
																				},
																				"nativeSrc": "4405:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4405:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4391:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4391:2:9"
																		},
																		"nativeSrc": "4391:37:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4391:37:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4384:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4384:6:9"
																},
																"nativeSrc": "4384:45:9",
																"nodeType": "YulFunctionCall",
																"src": "4384:45:9"
															},
															"nativeSrc": "4381:71:9",
															"nodeType": "YulIf",
															"src": "4381:71:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4290:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4321:1:9",
														"nodeType": "YulTypedName",
														"src": "4321:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4324:1:9",
														"nodeType": "YulTypedName",
														"src": "4324:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4330:7:9",
														"nodeType": "YulTypedName",
														"src": "4330:7:9",
														"type": ""
													}
												],
												"src": "4290:168:9"
											},
											{
												"body": {
													"nativeSrc": "4509:171:9",
													"nodeType": "YulBlock",
													"src": "4509:171:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4540:111:9",
																"nodeType": "YulBlock",
																"src": "4540:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4561:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4561:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4568:3:9",
																							"nodeType": "YulLiteral",
																							"src": "4568:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4573:10:9",
																							"nodeType": "YulLiteral",
																							"src": "4573:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4564:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "4564:3:9"
																					},
																					"nativeSrc": "4564:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4564:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4554:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4554:6:9"
																			},
																			"nativeSrc": "4554:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4554:31:9"
																		},
																		"nativeSrc": "4554:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4554:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4605:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4605:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4608:4:9",
																					"nodeType": "YulLiteral",
																					"src": "4608:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4598:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4598:6:9"
																			},
																			"nativeSrc": "4598:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4598:15:9"
																		},
																		"nativeSrc": "4598:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4598:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4633:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4633:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4636:4:9",
																					"nodeType": "YulLiteral",
																					"src": "4636:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4626:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4626:6:9"
																			},
																			"nativeSrc": "4626:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4626:15:9"
																		},
																		"nativeSrc": "4626:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4626:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4529:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4529:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4522:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4522:6:9"
																},
																"nativeSrc": "4522:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4522:9:9"
															},
															"nativeSrc": "4519:132:9",
															"nodeType": "YulIf",
															"src": "4519:132:9"
														},
														{
															"nativeSrc": "4660:14:9",
															"nodeType": "YulAssignment",
															"src": "4660:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4669:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4669:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4672:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4672:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4665:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4665:3:9"
																},
																"nativeSrc": "4665:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4665:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4660:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "4660:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4463:217:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4494:1:9",
														"nodeType": "YulTypedName",
														"src": "4494:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4497:1:9",
														"nodeType": "YulTypedName",
														"src": "4497:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4503:1:9",
														"nodeType": "YulTypedName",
														"src": "4503:1:9",
														"type": ""
													}
												],
												"src": "4463:217:9"
											},
											{
												"body": {
													"nativeSrc": "4859:233:9",
													"nodeType": "YulBlock",
													"src": "4859:233:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4876:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4876:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4887:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4887:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4869:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4869:6:9"
																},
																"nativeSrc": "4869:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4869:21:9"
															},
															"nativeSrc": "4869:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4869:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4910:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4910:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4921:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4921:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4906:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4906:3:9"
																		},
																		"nativeSrc": "4906:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4906:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4926:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4926:2:9",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4899:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4899:6:9"
																},
																"nativeSrc": "4899:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4899:30:9"
															},
															"nativeSrc": "4899:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4899:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4960:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4960:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4945:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4945:3:9"
																		},
																		"nativeSrc": "4945:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4945:18:9"
																	},
																	{
																		"hexValue": "45524332303a2063616e6e6f74207472616e73666572206c6f636b6564207665",
																		"kind": "string",
																		"nativeSrc": "4965:34:9",
																		"nodeType": "YulLiteral",
																		"src": "4965:34:9",
																		"type": "",
																		"value": "ERC20: cannot transfer locked ve"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4938:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4938:6:9"
																},
																"nativeSrc": "4938:62:9",
																"nodeType": "YulFunctionCall",
																"src": "4938:62:9"
															},
															"nativeSrc": "4938:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "4938:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5031:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5031:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5016:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5016:3:9"
																		},
																		"nativeSrc": "5016:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5016:18:9"
																	},
																	{
																		"hexValue": "7374656420746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "5036:13:9",
																		"nodeType": "YulLiteral",
																		"src": "5036:13:9",
																		"type": "",
																		"value": "sted tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5009:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5009:6:9"
																},
																"nativeSrc": "5009:41:9",
																"nodeType": "YulFunctionCall",
																"src": "5009:41:9"
															},
															"nativeSrc": "5009:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "5009:41:9"
														},
														{
															"nativeSrc": "5059:27:9",
															"nodeType": "YulAssignment",
															"src": "5059:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5071:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5071:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5082:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5082:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5067:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5067:3:9"
																},
																"nativeSrc": "5067:19:9",
																"nodeType": "YulFunctionCall",
																"src": "5067:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5059:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5059:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b776372014ba1d8e41c23ff5d54fb0f087b4c983ecc3b5ff5f98a64e6a6cf785__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4685:407:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4836:9:9",
														"nodeType": "YulTypedName",
														"src": "4836:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4850:4:9",
														"nodeType": "YulTypedName",
														"src": "4850:4:9",
														"type": ""
													}
												],
												"src": "4685:407:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_75366354ca8794f1161f0ede5d8d635aea60f78a94a51ba9176fdc23d5ad11b9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Vesting: no new tokens have vest\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_b776372014ba1d8e41c23ff5d54fb0f087b4c983ecc3b5ff5f98a64e6a6cf785__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC20: cannot transfer locked ve\")\n        mstore(add(headStart, 96), \"sted tokens\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1308": [
									{
										"length": 32,
										"start": 643
									},
									{
										"length": 32,
										"start": 1396
									},
									{
										"length": 32,
										"start": 1487
									}
								],
								"1310": [
									{
										"length": 32,
										"start": 369
									},
									{
										"length": 32,
										"start": 1437
									},
									{
										"length": 32,
										"start": 1527
									},
									{
										"length": 32,
										"start": 1608
									}
								],
								"1312": [
									{
										"length": 32,
										"start": 604
									},
									{
										"length": 32,
										"start": 1566
									},
									{
										"length": 32,
										"start": 1644
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610127575f3560e01c8063715018a6116100a9578063a8660a781161006e578063a8660a781461027e578063a9059cbb146102a5578063dd62ed3e146102b8578063f2fde38b146102f0578063f4eb90a614610303575f80fd5b8063715018a61461021957806379cc6790146102215780638da5cb5b1461023457806395d89b411461024f5780639de5a56114610257575f80fd5b8063313ce567116100ef578063313ce567146101bc57806342966c68146101cb5780634b8f1ef0146101e057806354dd1da4146101e957806370a08231146101f1575f80fd5b806306fdde031461012b578063095ea7b3146101495780631514617e1461016c57806318160ddd146101a157806323b872dd146101a9575b5f80fd5b61013361030b565b6040516101409190610b07565b60405180910390f35b61015c610157366004610b57565b61039b565b6040519015158152602001610140565b6101937f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610140565b600254610193565b61015c6101b7366004610b7f565b6103b4565b60405160128152602001610140565b6101de6101d9366004610bb9565b6103d7565b005b61019360065481565b6101de6103e4565b6101936101ff366004610bd0565b6001600160a01b03165f9081526020819052604090205490565b6101de6104ef565b6101de61022f366004610b57565b610502565b6005546040516001600160a01b039091168152602001610140565b61013361051b565b6101937f000000000000000000000000000000000000000000000000000000000000000081565b6101937f000000000000000000000000000000000000000000000000000000000000000081565b61015c6102b3366004610b57565b61052a565b6101936102c6366004610be9565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101de6102fe366004610bd0565b610537565b610193610571565b60606003805461031a90610c1a565b80601f016020809104026020016040519081016040528092919081815260200182805461034690610c1a565b80156103915780601f1061036857610100808354040283529160200191610391565b820191905f5260205f20905b81548152906001019060200180831161037457829003601f168201915b5050505050905090565b5f336103a881858561069d565b60019150505b92915050565b5f336103c18582856106af565b6103cc85858561072b565b506001949350505050565b6103e13382610788565b50565b6103ec6107bc565b5f6103f5610571565b905060065481116104585760405162461bcd60e51b815260206004820152602260248201527f56657374696e673a206e6f206e657720746f6b656e7320686176652076657374604482015261195960f21b60648201526084015b60405180910390fd5b5f61046e600654836107e990919063ffffffff16565b60065490915061047e90826107fb565b60065561049d306104976005546001600160a01b031690565b8361072b565b6005546001600160a01b03166001600160a01b03167f6bc5063c7239b75c8bf325a2a2238f726fada322163996bb6c93d5594fb119f0826040516104e391815260200190565b60405180910390a25050565b6104f76107bc565b6105005f610806565b565b61050d8233836106af565b6105178282610788565b5050565b60606004805461031a90610c1a565b5f336103a881858561072b565b61053f6107bc565b6001600160a01b03811661056857604051631e4fbdf760e01b81525f600482015260240161044f565b6103e181610806565b5f7f00000000000000000000000000000000000000000000000000000000000000004210806105be57507f0000000000000000000000000000000000000000000000000000000000000000155b156105c857505f90565b5f6105f3427f00000000000000000000000000000000000000000000000000000000000000006107e9565b90507f00000000000000000000000000000000000000000000000000000000000000008110610643577f000000000000000000000000000000000000000000000000000000000000000091505090565b6106977f00000000000000000000000000000000000000000000000000000000000000006106917f000000000000000000000000000000000000000000000000000000000000000084610857565b90610862565b91505090565b6106aa838383600161086d565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610725578181101561071757604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161044f565b61072584848484035f61086d565b50505050565b6001600160a01b03831661075457604051634b637e8f60e11b81525f600482015260240161044f565b6001600160a01b03821661077d5760405163ec442f0560e01b81525f600482015260240161044f565b6106aa83838361093f565b6001600160a01b0382166107b157604051634b637e8f60e11b81525f600482015260240161044f565b610517825f8361093f565b6005546001600160a01b031633146105005760405163118cdaa760e01b815233600482015260240161044f565b5f6107f48284610c66565b9392505050565b5f6107f48284610c79565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6107f48284610c8c565b5f6107f48284610ca3565b6001600160a01b0384166108965760405163e602df0560e01b81525f600482015260240161044f565b6001600160a01b0383166108bf57604051634a1406b160e11b81525f600482015260240161044f565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561072557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161093191815260200190565b60405180910390a350505050565b61094a8383836109e1565b306001600160a01b038416036106aa576005546001600160a01b03838116911614801561098157506005546001600160a01b031633145b6106aa5760405162461bcd60e51b815260206004820152602b60248201527f45524332303a2063616e6e6f74207472616e73666572206c6f636b656420766560448201526a7374656420746f6b656e7360a81b606482015260840161044f565b6001600160a01b038316610a0b578060025f828254610a009190610c79565b90915550610a7b9050565b6001600160a01b0383165f9081526020819052604090205481811015610a5d5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161044f565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610a9757600280548290039055610ab5565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610afa91815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610b52575f80fd5b919050565b5f8060408385031215610b68575f80fd5b610b7183610b3c565b946020939093013593505050565b5f805f60608486031215610b91575f80fd5b610b9a84610b3c565b9250610ba860208501610b3c565b929592945050506040919091013590565b5f60208284031215610bc9575f80fd5b5035919050565b5f60208284031215610be0575f80fd5b6107f482610b3c565b5f8060408385031215610bfa575f80fd5b610c0383610b3c565b9150610c1160208401610b3c565b90509250929050565b600181811c90821680610c2e57607f821691505b602082108103610c4c57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156103ae576103ae610c52565b808201808211156103ae576103ae610c52565b80820281158282048414176103ae576103ae610c52565b5f82610cbd57634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220c9b3c575d73941a6363605c80751b333f5002709ac8b48e0acad56782e2cda7e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x127 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xA8660A78 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA8660A78 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xF4EB90A6 EQ PUSH2 0x303 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x9DE5A561 EQ PUSH2 0x257 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x4B8F1EF0 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x54DD1DA4 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x1514617E EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x133 PUSH2 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0xB57 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x193 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x193 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0xB57 JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x51B JUMP JUMPDEST PUSH2 0x193 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x193 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xB57 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST PUSH2 0x193 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x571 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x31A SWAP1 PUSH2 0xC1A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x346 SWAP1 PUSH2 0xC1A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x391 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x368 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x391 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x374 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3A8 DUP2 DUP6 DUP6 PUSH2 0x69D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3C1 DUP6 DUP3 DUP6 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x3CC DUP6 DUP6 DUP6 PUSH2 0x72B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3E1 CALLER DUP3 PUSH2 0x788 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3EC PUSH2 0x7BC JUMP JUMPDEST PUSH0 PUSH2 0x3F5 PUSH2 0x571 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x458 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56657374696E673A206E6F206E657720746F6B656E7320686176652076657374 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x46E PUSH1 0x6 SLOAD DUP4 PUSH2 0x7E9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x47E SWAP1 DUP3 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0x49D ADDRESS PUSH2 0x497 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x72B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6BC5063C7239B75C8BF325A2A2238F726FADA322163996BB6C93D5594FB119F0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x4F7 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x500 PUSH0 PUSH2 0x806 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x50D DUP3 CALLER DUP4 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x517 DUP3 DUP3 PUSH2 0x788 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x31A SWAP1 PUSH2 0xC1A JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3A8 DUP2 DUP6 DUP6 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x53F PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x568 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44F JUMP JUMPDEST PUSH2 0x3E1 DUP2 PUSH2 0x806 JUMP JUMPDEST PUSH0 PUSH32 0x0 TIMESTAMP LT DUP1 PUSH2 0x5BE JUMPI POP PUSH32 0x0 ISZERO JUMPDEST ISZERO PUSH2 0x5C8 JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5F3 TIMESTAMP PUSH32 0x0 PUSH2 0x7E9 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 LT PUSH2 0x643 JUMPI PUSH32 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x697 PUSH32 0x0 PUSH2 0x691 PUSH32 0x0 DUP5 PUSH2 0x857 JUMP JUMPDEST SWAP1 PUSH2 0x862 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6AA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x86D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x725 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x717 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x44F JUMP JUMPDEST PUSH2 0x725 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x86D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x77D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44F JUMP JUMPDEST PUSH2 0x6AA DUP4 DUP4 DUP4 PUSH2 0x93F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44F JUMP JUMPDEST PUSH2 0x517 DUP3 PUSH0 DUP4 PUSH2 0x93F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x500 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44F JUMP JUMPDEST PUSH0 PUSH2 0x7F4 DUP3 DUP5 PUSH2 0xC66 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7F4 DUP3 DUP5 PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7F4 DUP3 DUP5 PUSH2 0xC8C JUMP JUMPDEST PUSH0 PUSH2 0x7F4 DUP3 DUP5 PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x725 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x931 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x94A DUP4 DUP4 DUP4 PUSH2 0x9E1 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SUB PUSH2 0x6AA JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x981 JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2063616E6E6F74207472616E73666572206C6F636B6564207665 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x7374656420746F6B656E73 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x44F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA0B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA00 SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xA7B SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x44F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA97 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xAFA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB52 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB68 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB71 DUP4 PUSH2 0xB3C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB91 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB9A DUP5 PUSH2 0xB3C JUMP JUMPDEST SWAP3 POP PUSH2 0xBA8 PUSH1 0x20 DUP6 ADD PUSH2 0xB3C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7F4 DUP3 PUSH2 0xB3C JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBFA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC03 DUP4 PUSH2 0xB3C JUMP JUMPDEST SWAP2 POP PUSH2 0xC11 PUSH1 0x20 DUP5 ADD PUSH2 0xB3C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC2E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC4C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AE PUSH2 0xC52 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AE PUSH2 0xC52 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3AE JUMPI PUSH2 0x3AE PUSH2 0xC52 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xCBD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xB3 0xC5 PUSH22 0xD73941A6363605C80751B333F5002709AC8B48E0ACAD JUMP PUSH25 0x2E2CDA7E64736F6C634300081A003300000000000000000000 ",
							"sourceMap": "303:2581:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:9;;1078:22;1060:41;;1048:2;1033:18;3998:186:2;920:187:9;460:40:8;;;;;;;;1258:25:9;;;1246:2;1231:18;460:40:8;1112:177:9;2849:97:2;2927:12;;2849:97;;4776:244;;;;;;:::i;:::-;;:::i;2707:82::-;;;2780:2;1815:36:9;;1803:2;1788:18;2707:82:2;1673:184:9;618:87:4;;;;;;:::i;:::-;;:::i;:::-;;556:34:8;;;;;;2092:491;;;:::i;3004:116:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:2;3069:7;3095:18;;;;;;;;;;;;3004:116;2293:101:0;;;:::i;1021:158:4:-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;2430:51:9;;2418:2;2403:18;1638:85:0;2284:203:9;1981:93:2;;;:::i;507:42:8:-;;;;;413:41;;;;;3315:178:2;;;;;;:::i;:::-;;:::i;3551:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:2;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;2543:215:0;;;;;;:::i;:::-;;:::i;1679:407:8:-;;;:::i;1779:89:2:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:6;4125:31:2;735:10:6;4141:7:2;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;4776:244::-;4863:4;735:10:6;4919:37:2;4935:4;735:10:6;4950:5:2;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:2;;4776:244;-1:-1:-1;;;;4776:244:2:o;618:87:4:-;672:26;735:10:6;692:5:4;672;:26::i;:::-;618:87;:::o;2092:491:8:-;1531:13:0;:11;:13::i;:::-;2150:25:8::1;2178:17;:15;:17::i;:::-;2150:45;;2234:19;;2214:17;:39;2206:86;;;::::0;-1:-1:-1;;;2206:86:8;;3344:2:9;2206:86:8::1;::::0;::::1;3326:21:9::0;3383:2;3363:18;;;3356:30;3422:34;3402:18;;;3395:62;-1:-1:-1;;;3473:18:9;;;3466:32;3515:19;;2206:86:8::1;;;;;;;;;2303:23;2329:42;2351:19;;2329:17;:21;;:42;;;;:::i;:::-;2404:19;::::0;2303:68;;-1:-1:-1;2404:40:8::1;::::0;2303:68;2404:23:::1;:40::i;:::-;2382:19;:62:::0;2455:50:::1;2473:4;2480:7;1710:6:0::0;;-1:-1:-1;;;;;1710:6:0;;1638:85;2480:7:8::1;2489:15;2455:9;:50::i;:::-;1710:6:0::0;;-1:-1:-1;;;;;1710:6:0;-1:-1:-1;;;;;2530:46:8::1;;2560:15;2530:46;;;;1258:25:9::0;;1246:2;1231:18;;1112:177;2530:46:8::1;;;;;;;;2140:443;;2092:491::o:0;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:4:-;1096:45;1112:7;735:10:6;1135:5:4;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:6;3438:27:2;735:10:6;3455:2:2;3459:5;3438:9;:27::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2430:51:9::0;2403:18;;2672:31:0::1;2284:203:9::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;1679:407:8:-:0;1727:7;1769:16;1751:15;:34;:58;;;-1:-1:-1;1789:15:8;:20;1751:58;1747:97;;;-1:-1:-1;1832:1:8;;1679:407::o;1747:97::-;1854:16;1873:37;:15;1893:16;1873:19;:37::i;:::-;1854:56;;1940:15;1925:11;:30;1921:85;;1978:17;1971:24;;;1679:407;:::o;1921:85::-;2023:55;2062:15;2023:34;:17;2045:11;2023:21;:34::i;:::-;:38;;:55::i;:::-;2016:62;;;1679:407;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;-1:-1:-1;;;;;3657:18:2;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:2;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:2;;-1:-1:-1;;;;;3765:32:9;;10687:60:2;;;3747:51:9;3814:18;;;3807:34;;;3857:18;;;3850:34;;;3720:18;;10687:60:2;3545:345:9;10632:130:2;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:2;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:2;;5544:1;5517:30;;;2430:51:9;2403:18;;5517:30:2;2284:203:9;5472:86:2;-1:-1:-1;;;;;5571:16:2;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:2;;5639:1;5610:32;;;2430:51:9;2403:18;;5610:32:2;2284:203:9;5567:86:2;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;7984:206::-;-1:-1:-1;;;;;8054:21:2;;8050:89;;8098:30;;-1:-1:-1;;;8098:30:2;;8125:1;8098:30;;;2430:51:9;2403:18;;8098:30:2;2284:203:9;8050:89:2;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;2430:51:9;2403:18;;1901:40:0;2284:203:9;3122:96:7;3180:7;3206:5;3210:1;3206;:5;:::i;:::-;3199:12;3122:96;-1:-1:-1;;;3122:96:7:o;2755:::-;2813:7;2839:5;2843:1;2839;:5;:::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;3465:96:7:-;3523:7;3549:5;3553:1;3549;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;9701:432:2:-;-1:-1:-1;;;;;9813:19:2;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:2;;9884:1;9855:32;;;2430:51:9;2403:18;;9855:32:2;2284:203:9;9809:89:2;-1:-1:-1;;;;;9911:21:2;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:2;;9983:1;9955:31;;;2430:51:9;2403:18;;9955:31:2;2284:203:9;9907:90:2;-1:-1:-1;;;;;10006:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:2;10094:5;-1:-1:-1;;;;;10085:31:2;;10110:5;10085:31;;;;1258:25:9;;1246:2;1231:18;;1112:177;10085:31:2;;;;;;;;9701:432;;;;:::o;2590:290:8:-;2685:31;2699:4;2705:2;2709:6;2685:13;:31::i;:::-;2747:4;-1:-1:-1;;;;;2731:21:8;;;2727:146;;1710:6:0;;-1:-1:-1;;;;;2776:13:8;;;1710:6:0;;2776:13:8;:38;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;2793:10:8;:21;2776:38;2768:94;;;;-1:-1:-1;;;2768:94:8;;4887:2:9;2768:94:8;;;4869:21:9;4926:2;4906:18;;;4899:30;4965:34;4945:18;;;4938:62;-1:-1:-1;;;5016:18:9;;;5009:41;5067:19;;2768:94:8;4685:407:9;6008:1107:2;-1:-1:-1;;;;;6097:18:2;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:2;;-1:-1:-1;6093:540:2;;-1:-1:-1;;;;;6307:15:2;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:2;;-1:-1:-1;;;;;3765:32:9;;6386:50:2;;;3747:51:9;3814:18;;;3807:34;;;3857:18;;;3850:34;;;3720:18;;6386:50:2;3545:345:9;6336:115:2;-1:-1:-1;;;;;6571:15:2;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:2;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:2;7092:4;-1:-1:-1;;;;;7083:25:2;;7102:5;7083:25;;;;1258::9;;1246:2;1231:18;;1112:177;7083:25:2;;;;;;;;6008:1107;;;:::o;14:418:9:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:9;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:9:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:9;1619:18;;;;1606:32;;1294:374::o;1862:226::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;-1:-1:-1;2035:23:9;;1862:226;-1:-1:-1;1862:226:9:o;2093:186::-;2152:6;2205:2;2193:9;2184:7;2180:23;2176:32;2173:52;;;2221:1;2218;2211:12;2173:52;2244:29;2263:9;2244:29;:::i;2492:260::-;2560:6;2568;2621:2;2609:9;2600:7;2596:23;2592:32;2589:52;;;2637:1;2634;2627:12;2589:52;2660:29;2679:9;2660:29;:::i;:::-;2650:39;;2708:38;2742:2;2731:9;2727:18;2708:38;:::i;:::-;2698:48;;2492:260;;;;;:::o;2757:380::-;2836:1;2832:12;;;;2879;;;2900:61;;2954:4;2946:6;2942:17;2932:27;;2900:61;3007:2;2999:6;2996:14;2976:18;2973:38;2970:161;;3053:10;3048:3;3044:20;3041:1;3034:31;3088:4;3085:1;3078:15;3116:4;3113:1;3106:15;2970:161;;2757:380;;;:::o;3895:127::-;3956:10;3951:3;3947:20;3944:1;3937:31;3987:4;3984:1;3977:15;4011:4;4008:1;4001:15;4027:128;4094:9;;;4115:11;;;4112:37;;;4129:18;;:::i;4160:125::-;4225:9;;;4246:10;;;4243:36;;;4259:18;;:::i;4290:168::-;4363:9;;;4394;;4411:15;;;4405:22;;4391:37;4381:71;;4432:18;;:::i;4463:217::-;4503:1;4529;4519:132;;4573:10;4568:3;4564:20;4561:1;4554:31;4608:4;4605:1;4598:15;4636:4;4633:1;4626:15;4519:132;-1:-1:-1;4665:9:9;;4463:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "664000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24758",
								"balanceOf(address)": "2648",
								"burn(uint256)": "55432",
								"burnFrom(address,uint256)": "infinite",
								"currentlyVested()": "infinite",
								"decimals()": "199",
								"name()": "infinite",
								"owner()": "2367",
								"releaseVestedTokens()": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2381",
								"totalVestedReleased()": "2361",
								"totalVestedSupply()": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28421",
								"vestingDuration()": "infinite",
								"vestingStartTime()": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 303,
									"end": 2884,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 759,
									"end": 1672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1014,
									"end": 1027,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 990,
									"end": 995,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1004,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 990,
									"end": 995,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4602,
									"end": 4653,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4575,
									"end": 4593,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4575,
									"end": 4593,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1048,
									"end": 1075,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1048,
									"end": 1075,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1040,
									"end": 1122,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1040,
									"end": 1122,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1040,
									"end": 1122,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1040,
									"end": 1122,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1040,
									"end": 1122,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1040,
									"end": 1122,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4866,
									"end": 4868,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1040,
									"end": 1122,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1040,
									"end": 1122,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1040,
									"end": 1122,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4848,
									"end": 4869,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4905,
									"end": 4907,
									"name": "PUSH",
									"source": 9,
									"value": "2A"
								},
								{
									"begin": 4885,
									"end": 4903,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4885,
									"end": 4903,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4885,
									"end": 4903,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4878,
									"end": 4908,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4944,
									"end": 4978,
									"name": "PUSH",
									"source": 9,
									"value": "4F776E61626C653A20696E697469616C206F776E657220697320746865207A65"
								},
								{
									"begin": 4924,
									"end": 4942,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4924,
									"end": 4942,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4924,
									"end": 4942,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4917,
									"end": 4979,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "726F2061646472657373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4995,
									"end": 5013,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4995,
									"end": 5013,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4995,
									"end": 5013,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4988,
									"end": 5028,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5045,
									"end": 5064,
									"name": "PUSH",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 5045,
									"end": 5064,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1040,
									"end": 1122,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 4664,
									"end": 5070,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1040,
									"end": 1122,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1040,
									"end": 1122,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1168,
									"end": 1169,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1140,
									"end": 1165,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1140,
									"end": 1169,
									"modifierDepth": 2,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1217,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1132,
									"end": 1217,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1217,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1217,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1132,
									"end": 1217,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1217,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5277,
									"end": 5279,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1217,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1132,
									"end": 1217,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1217,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5259,
									"end": 5280,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5316,
									"end": 5318,
									"name": "PUSH",
									"source": 9,
									"value": "2B"
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5319,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5355,
									"end": 5389,
									"name": "PUSH",
									"source": 9,
									"value": "56657374696E673A206475726174696F6E206D75737420626520677265617465"
								},
								{
									"begin": 5335,
									"end": 5353,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 5335,
									"end": 5353,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5335,
									"end": 5353,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5328,
									"end": 5390,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "72207468616E207A65726F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5406,
									"end": 5424,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 5406,
									"end": 5424,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5406,
									"end": 5424,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5399,
									"end": 5440,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5457,
									"end": 5476,
									"name": "PUSH",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 5457,
									"end": 5476,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1217,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 5075,
									"end": 5482,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1217,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1132,
									"end": 1217,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1247,
									"end": 1262,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1262,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1228,
									"end": 1262,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1315,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1272,
									"end": 1315,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1315,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1315,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1325,
									"end": 1363,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 1325,
									"end": 1363,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1325,
									"end": 1363,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1325,
									"end": 1363,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1378,
									"end": 1401,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1378,
									"end": 1401,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1374,
									"end": 1469,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1374,
									"end": 1469,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1417,
									"end": 1458,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1423,
									"end": 1436,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1438,
									"end": 1457,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1417,
									"end": 1422,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1417,
									"end": 1458,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1417,
									"end": 1458,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1417,
									"end": 1458,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1483,
									"end": 1505,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1483,
									"end": 1505,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1479,
									"end": 1572,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1479,
									"end": 1572,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1521,
									"end": 1561,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1535,
									"end": 1539,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 1542,
									"end": 1560,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1521,
									"end": 1526,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1521,
									"end": 1561,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1521,
									"end": 1561,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1521,
									"end": 1561,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1630,
									"end": 1646,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1630,
									"end": 1646,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1648,
									"end": 1663,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1648,
									"end": 1663,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1587,
									"end": 1664,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1587,
									"end": 1664,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1587,
									"end": 1664,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5689,
									"end": 5714,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5689,
									"end": 5714,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5689,
									"end": 5714,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5745,
									"end": 5747,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5730,
									"end": 5748,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5730,
									"end": 5748,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5723,
									"end": 5757,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 5723,
									"end": 5757,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5723,
									"end": 5757,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 5723,
									"end": 5757,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5773,
									"end": 5791,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5773,
									"end": 5791,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5766,
									"end": 5800,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 1664,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "E8FBCDFC2A707362664A0CDEC5038E3D2A2183F4D4D3747E56BFC200EDA13756"
								},
								{
									"begin": 1587,
									"end": 1664,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5677,
									"end": 5679,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 5662,
									"end": 5680,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1587,
									"end": 1664,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1587,
									"end": 1664,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1587,
									"end": 1664,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1587,
									"end": 1664,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1587,
									"end": 1664,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1587,
									"end": 1664,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1587,
									"end": 1664,
									"modifierDepth": 2,
									"name": "LOG1",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 759,
									"end": 1672,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4602,
									"end": 4653,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4575,
									"end": 4593,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4575,
									"end": 4593,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 4456,
									"end": 4659,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2590,
									"end": 2880,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 2590,
									"end": 2880,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2685,
									"end": 2716,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 2699,
									"end": 2703,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2705,
									"end": 2707,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2709,
									"end": 2715,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2685,
									"end": 2698,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2685,
									"end": 2716,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2685,
									"end": 2716,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 2685,
									"end": 2716,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2747,
									"end": 2751,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2731,
									"end": 2752,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2731,
									"end": 2752,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2731,
									"end": 2752,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2727,
									"end": 2873,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 2727,
									"end": 2873,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2776,
									"end": 2789,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2776,
									"end": 2789,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2776,
									"end": 2789,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2789,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2793,
									"end": 2803,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 2793,
									"end": 2814,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2776,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2862,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 2768,
									"end": 2862,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2862,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2768,
									"end": 2862,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2768,
									"end": 2862,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2862,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6013,
									"end": 6015,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2768,
									"end": 2862,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2768,
									"end": 2862,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2862,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5995,
									"end": 6016,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6052,
									"end": 6054,
									"name": "PUSH",
									"source": 9,
									"value": "2B"
								},
								{
									"begin": 6032,
									"end": 6050,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 6032,
									"end": 6050,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6032,
									"end": 6050,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6055,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6091,
									"end": 6125,
									"name": "PUSH",
									"source": 9,
									"value": "45524332303A2063616E6E6F74207472616E73666572206C6F636B6564207665"
								},
								{
									"begin": 6071,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 6071,
									"end": 6089,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6071,
									"end": 6089,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6064,
									"end": 6126,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7374656420746F6B656E73"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6142,
									"end": 6160,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 6142,
									"end": 6160,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6142,
									"end": 6160,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6135,
									"end": 6176,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6193,
									"end": 6212,
									"name": "PUSH",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 6193,
									"end": 6212,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2768,
									"end": 2862,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 5811,
									"end": 6218,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2768,
									"end": 2862,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 2768,
									"end": 2862,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2590,
									"end": 2880,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2590,
									"end": 2880,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2590,
									"end": 2880,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2590,
									"end": 2880,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6670,
									"end": 6702,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6670,
									"end": 6702,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6652,
									"end": 6703,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6719,
									"end": 6737,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 6719,
									"end": 6737,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6719,
									"end": 6737,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6712,
									"end": 6746,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6712,
									"end": 6746,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6712,
									"end": 6746,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6762,
									"end": 6780,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 6762,
									"end": 6780,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6762,
									"end": 6780,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6755,
									"end": 6789,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6755,
									"end": 6789,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6755,
									"end": 6789,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6625,
									"end": 6643,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 6625,
									"end": 6643,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 6450,
									"end": 6795,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6946,
									"end": 6971,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6946,
									"end": 6971,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6934,
									"end": 6936,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6919,
									"end": 6937,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6919,
									"end": 6937,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6800,
									"end": 6977,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 146,
									"end": 869,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 146,
									"end": 869,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 9,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 782,
									"end": 788,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 775,
									"end": 779,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 767,
									"end": 773,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 763,
									"end": 780,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 756,
									"end": 760,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 754,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 744,
									"end": 761,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 738,
									"end": 789,
									"name": "MCOPY",
									"source": 9
								},
								{
									"begin": 837,
									"end": 838,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 828,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 809,
									"end": 828,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 809,
									"end": 828,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 805,
									"end": 835,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 798,
									"end": 839,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 813,
									"end": 819,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 146,
									"end": 869,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1942,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 874,
									"end": 1942,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1009,
									"end": 1015,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1017,
									"end": 1023,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1025,
									"end": 1031,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1033,
									"end": 1039,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1041,
									"end": 1047,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1049,
									"end": 1055,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1102,
									"end": 1105,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 1090,
									"end": 1099,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1081,
									"end": 1088,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1100,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1073,
									"end": 1106,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1070,
									"end": 1123,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1070,
									"end": 1123,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 1070,
									"end": 1123,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1119,
									"end": 1120,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1116,
									"end": 1117,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1109,
									"end": 1121,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1070,
									"end": 1123,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 1070,
									"end": 1123,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1146,
									"end": 1162,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1146,
									"end": 1162,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1174,
									"end": 1204,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1174,
									"end": 1204,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1221,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1221,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 1171,
									"end": 1221,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1217,
									"end": 1218,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1214,
									"end": 1215,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1207,
									"end": 1219,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1221,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 1171,
									"end": 1221,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1240,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1273,
									"end": 1282,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 1269,
									"end": 1291,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1240,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1240,
									"end": 1301,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1240,
									"end": 1301,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1240,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1347,
									"end": 1349,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1332,
									"end": 1350,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 1332,
									"end": 1350,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1326,
									"end": 1351,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1230,
									"end": 1301,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1230,
									"end": 1301,
									"name": "SWAP8",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1326,
									"end": 1351,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1363,
									"end": 1395,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1363,
									"end": 1395,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1360,
									"end": 1412,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1360,
									"end": 1412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 1360,
									"end": 1412,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1408,
									"end": 1409,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1405,
									"end": 1406,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1398,
									"end": 1410,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1360,
									"end": 1412,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 1360,
									"end": 1412,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1431,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 1486,
									"end": 1493,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 1475,
									"end": 1483,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1464,
									"end": 1473,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 1460,
									"end": 1484,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1431,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1431,
									"end": 1494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1431,
									"end": 1494,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 1431,
									"end": 1494,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1558,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1541,
									"end": 1559,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 1541,
									"end": 1559,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1535,
									"end": 1560,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1650,
									"end": 1652,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1635,
									"end": 1653,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 1635,
									"end": 1653,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1629,
									"end": 1654,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1746,
									"end": 1749,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1731,
									"end": 1750,
									"name": "DUP12",
									"source": 9
								},
								{
									"begin": 1731,
									"end": 1750,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1725,
									"end": 1751,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1822,
									"end": 1825,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 1807,
									"end": 1826,
									"name": "DUP13",
									"source": 9
								},
								{
									"begin": 1807,
									"end": 1826,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1801,
									"end": 1827,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1421,
									"end": 1494,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1421,
									"end": 1494,
									"name": "SWAP10",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1535,
									"end": 1560,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1535,
									"end": 1560,
									"name": "SWAP8",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1629,
									"end": 1654,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1725,
									"end": 1751,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1801,
									"end": 1827,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1858,
									"end": 1891,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1858,
									"end": 1891,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1846,
									"end": 1892,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1846,
									"end": 1892,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1836,
									"end": 1910,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 1836,
									"end": 1910,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1906,
									"end": 1907,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1903,
									"end": 1904,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1896,
									"end": 1908,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1836,
									"end": 1910,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 1836,
									"end": 1910,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1929,
									"end": 1936,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1919,
									"end": 1936,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1919,
									"end": 1936,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1919,
									"end": 1936,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1942,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1942,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1942,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1942,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1942,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1942,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1942,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1942,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1942,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2327,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1947,
									"end": 2327,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2026,
									"end": 2027,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2022,
									"end": 2034,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2022,
									"end": 2034,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2022,
									"end": 2034,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2022,
									"end": 2034,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2081,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2081,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2081,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2090,
									"end": 2151,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 2090,
									"end": 2151,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2144,
									"end": 2148,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 2136,
									"end": 2142,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2132,
									"end": 2149,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2122,
									"end": 2149,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2122,
									"end": 2149,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2090,
									"end": 2151,
									"name": "tag",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 2090,
									"end": 2151,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2197,
									"end": 2199,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2186,
									"end": 2200,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 2184,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2163,
									"end": 2201,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2160,
									"end": 2321,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 2160,
									"end": 2321,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2243,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 2238,
									"end": 2241,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 2234,
									"end": 2254,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2231,
									"end": 2232,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2224,
									"end": 2255,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2282,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2275,
									"end": 2276,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2268,
									"end": 2283,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2306,
									"end": 2310,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2303,
									"end": 2304,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2296,
									"end": 2311,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2160,
									"end": 2321,
									"name": "tag",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 2160,
									"end": 2321,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2160,
									"end": 2321,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2327,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2327,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2327,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2327,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2458,
									"end": 2976,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 2458,
									"end": 2976,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2560,
									"end": 2562,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2555,
									"end": 2558,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2552,
									"end": 2563,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2549,
									"end": 2970,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2549,
									"end": 2970,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 2549,
									"end": 2970,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2596,
									"end": 2601,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2593,
									"end": 2594,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2586,
									"end": 2602,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2640,
									"end": 2644,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2637,
									"end": 2638,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2627,
									"end": 2645,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 2710,
									"end": 2712,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2698,
									"end": 2708,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2694,
									"end": 2713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2691,
									"end": 2692,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2687,
									"end": 2714,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2681,
									"end": 2685,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 2715,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2746,
									"end": 2750,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2734,
									"end": 2744,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2731,
									"end": 2751,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2728,
									"end": 2775,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2728,
									"end": 2775,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 2728,
									"end": 2775,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2769,
									"end": 2773,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2728,
									"end": 2775,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 2728,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2824,
									"end": 2826,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2819,
									"end": 2822,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2815,
									"end": 2827,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2812,
									"end": 2813,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2808,
									"end": 2828,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2802,
									"end": 2806,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2798,
									"end": 2829,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2788,
									"end": 2829,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2788,
									"end": 2829,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2879,
									"end": 2960,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 2879,
									"end": 2960,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2897,
									"end": 2899,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2890,
									"end": 2895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2887,
									"end": 2900,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2879,
									"end": 2960,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2879,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 2879,
									"end": 2960,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2956,
									"end": 2957,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2942,
									"end": 2958,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2942,
									"end": 2958,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2923,
									"end": 2924,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2912,
									"end": 2925,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2879,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 2879,
									"end": 2960,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2879,
									"end": 2960,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 2879,
									"end": 2960,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2883,
									"end": 2886,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2883,
									"end": 2886,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2458,
									"end": 2976,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2458,
									"end": 2976,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2458,
									"end": 2976,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2458,
									"end": 2976,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3152,
									"end": 4451,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 3152,
									"end": 4451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3272,
									"end": 3282,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3272,
									"end": 3282,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3294,
									"end": 3324,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3294,
									"end": 3324,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3291,
									"end": 3347,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3291,
									"end": 3347,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 3291,
									"end": 3347,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3327,
									"end": 3345,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 3327,
									"end": 3345,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 3327,
									"end": 3345,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3327,
									"end": 3345,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 3327,
									"end": 3345,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3356,
									"end": 3453,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 3446,
									"end": 3452,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3406,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 3438,
									"end": 3442,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3432,
									"end": 3443,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3406,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3406,
									"end": 3444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3406,
									"end": 3444,
									"name": "tag",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 3406,
									"end": 3444,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3400,
									"end": 3404,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3356,
									"end": 3453,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 3356,
									"end": 3453,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3356,
									"end": 3453,
									"name": "tag",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 3356,
									"end": 3453,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3533,
									"end": 3535,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3522,
									"end": 3536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3522,
									"end": 3536,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3550,
									"end": 3551,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3545,
									"end": 4194,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3545,
									"end": 4194,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3545,
									"end": 4194,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 3545,
									"end": 4194,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4238,
									"end": 4239,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4252,
									"end": 4341,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4252,
									"end": 4341,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 4252,
									"end": 4341,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4307,
									"end": 4326,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4307,
									"end": 4326,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4307,
									"end": 4326,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4301,
									"end": 4327,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4252,
									"end": 4341,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 4252,
									"end": 4341,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3109,
									"end": 3110,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 3105,
									"end": 3116,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3105,
									"end": 3116,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3105,
									"end": 3116,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3101,
									"end": 3125,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3097,
									"end": 3126,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3087,
									"end": 3127,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3133,
									"end": 3134,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3129,
									"end": 3140,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3129,
									"end": 3140,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3129,
									"end": 3140,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3084,
									"end": 3141,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4354,
									"end": 4435,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4354,
									"end": 4435,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3515,
									"end": 4445,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 3515,
									"end": 4445,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3545,
									"end": 4194,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 3545,
									"end": 4194,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2405,
									"end": 2406,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2398,
									"end": 2412,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2398,
									"end": 2412,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2398,
									"end": 2412,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2442,
									"end": 2446,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2429,
									"end": 2447,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2447,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3581,
									"end": 3601,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3581,
									"end": 3601,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3581,
									"end": 3601,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3699,
									"end": 3921,
									"name": "tag",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 3699,
									"end": 3921,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3713,
									"end": 3720,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3710,
									"end": 3711,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3707,
									"end": 3721,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3699,
									"end": 3921,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3699,
									"end": 3921,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 3699,
									"end": 3921,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3795,
									"end": 3814,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3795,
									"end": 3814,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3795,
									"end": 3814,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3789,
									"end": 3815,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3774,
									"end": 3816,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3774,
									"end": 3816,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3887,
									"end": 3907,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3887,
									"end": 3907,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3887,
									"end": 3907,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3887,
									"end": 3907,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3855,
									"end": 3856,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3843,
									"end": 3857,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3843,
									"end": 3857,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3843,
									"end": 3857,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3843,
									"end": 3857,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3729,
									"end": 3741,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3699,
									"end": 3921,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 3699,
									"end": 3921,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3699,
									"end": 3921,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 3699,
									"end": 3921,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3703,
									"end": 3706,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3949,
									"end": 3955,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3940,
									"end": 3947,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3937,
									"end": 3956,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3934,
									"end": 4135,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3934,
									"end": 4135,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 3934,
									"end": 4135,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4010,
									"end": 4029,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4010,
									"end": 4029,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4010,
									"end": 4029,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4004,
									"end": 4030,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4093,
									"end": 4094,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 4089,
									"end": 4103,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 4089,
									"end": 4103,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4089,
									"end": 4103,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 4105,
									"end": 4108,
									"name": "PUSH",
									"source": 9,
									"value": "F8"
								},
								{
									"begin": 4085,
									"end": 4109,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4081,
									"end": 4118,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 4077,
									"end": 4119,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4062,
									"end": 4120,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4047,
									"end": 4121,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4047,
									"end": 4121,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3934,
									"end": 4135,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 3934,
									"end": 4135,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4181,
									"end": 4182,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4165,
									"end": 4179,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4165,
									"end": 4179,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4165,
									"end": 4179,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 4161,
									"end": 4183,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4148,
									"end": 4184,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4148,
									"end": 4184,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3152,
									"end": 4451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6223,
									"end": 6445,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 6223,
									"end": 6445,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6309,
									"end": 6319,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 6309,
									"end": 6319,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6309,
									"end": 6319,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 6306,
									"end": 6439,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6306,
									"end": 6439,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 6306,
									"end": 6439,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6361,
									"end": 6371,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 6356,
									"end": 6359,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 6352,
									"end": 6372,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 6349,
									"end": 6350,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6342,
									"end": 6373,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6396,
									"end": 6400,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 6393,
									"end": 6394,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6401,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6424,
									"end": 6428,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 6421,
									"end": 6422,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6414,
									"end": 6429,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 6306,
									"end": 6439,
									"name": "tag",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 6306,
									"end": 6439,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6223,
									"end": 6445,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6223,
									"end": 6445,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6223,
									"end": 6445,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6223,
									"end": 6445,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6223,
									"end": 6445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6800,
									"end": 6977,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 6800,
									"end": 6977,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "1312"
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "1310"
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "1308"
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 303,
									"end": 2884,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c9b3c575d73941a6363605c80751b333f5002709ac8b48e0acad56782e2cda7e64736f6c634300081a0033",
									".code": [
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "A8660A78"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "A8660A78"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "F4EB90A6"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "79CC6790"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "9DE5A561"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "42966C68"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "4B8F1EF0"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "54DD1DA4"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "1514617E"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 303,
											"end": 2884,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 460,
											"end": 500,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 460,
											"end": 500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 460,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 460,
											"end": 500,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1310"
										},
										{
											"begin": 460,
											"end": 500,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 460,
											"end": 500,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 460,
											"end": 500,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 460,
											"end": 500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 460,
											"end": 500,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 500,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 460,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 556,
											"end": 590,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 556,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 556,
											"end": 590,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 556,
											"end": 590,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2583,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2092,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 2092,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2092,
											"end": 2583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2418,
											"end": 2420,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 507,
											"end": 549,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 507,
											"end": 549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 507,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 507,
											"end": 549,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1312"
										},
										{
											"begin": 507,
											"end": 549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 507,
											"end": 549,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 413,
											"end": 454,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 413,
											"end": 454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 413,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 413,
											"end": 454,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1308"
										},
										{
											"begin": 413,
											"end": 454,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 413,
											"end": 454,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 2086,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1679,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1679,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1679,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1679,
											"end": 2086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2583,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2092,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2178,
											"end": 2193,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2178,
											"end": 2195,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2195,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2178,
											"end": 2195,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2195,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2234,
											"end": 2253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2234,
											"end": 2253,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2214,
											"end": 2231,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2214,
											"end": 2253,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 2206,
											"end": 2292,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2206,
											"end": 2292,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2206,
											"end": 2292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2292,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3344,
											"end": 3346,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2206,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2206,
											"end": 2292,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2292,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3347,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3385,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3422,
											"end": 3456,
											"name": "PUSH",
											"source": 9,
											"value": "56657374696E673A206E6F206E657720746F6B656E7320686176652076657374"
										},
										{
											"begin": 3402,
											"end": 3420,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3402,
											"end": 3420,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3402,
											"end": 3420,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3395,
											"end": 3457,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3498,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2206,
											"end": 2292,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 2206,
											"end": 2292,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2206,
											"end": 2292,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2292,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2292,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2292,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2292,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2292,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 2206,
											"end": 2292,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 2351,
											"end": 2370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2351,
											"end": 2370,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2346,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2329,
											"end": 2350,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2371,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2329,
											"end": 2371,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2371,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2371,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 2329,
											"end": 2371,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2404,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2404,
											"end": 2423,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2404,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2404,
											"end": 2444,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2404,
											"end": 2444,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2404,
											"end": 2444,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2404,
											"end": 2444,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2382,
											"end": 2401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2382,
											"end": 2444,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2455,
											"end": 2505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 2473,
											"end": 2477,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2480,
											"end": 2487,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2487,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 2480,
											"end": 2487,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2504,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2455,
											"end": 2464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2455,
											"end": 2505,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2455,
											"end": 2505,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 2455,
											"end": 2505,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2530,
											"end": 2576,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6BC5063C7239B75C8BF325A2A2238F726FADA322163996BB6C93D5594FB119F0"
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2576,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2530,
											"end": 2576,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2530,
											"end": 2576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2530,
											"end": 2576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2576,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2576,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2576,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2576,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2576,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2576,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2583,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2583,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 2086,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1679,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1734,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1785,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1308"
										},
										{
											"begin": 1751,
											"end": 1766,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1809,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1751,
											"end": 1809,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1789,
											"end": 1804,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1310"
										},
										{
											"begin": 1789,
											"end": 1809,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1809,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1751,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1844,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 1747,
											"end": 1844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1832,
											"end": 1833,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1833,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1679,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1844,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 1747,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 1873,
											"end": 1888,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 1909,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1308"
										},
										{
											"begin": 1873,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 1873,
											"end": 1910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 1873,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1854,
											"end": 1910,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1854,
											"end": 1910,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1955,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1310"
										},
										{
											"begin": 1925,
											"end": 1936,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 1921,
											"end": 2006,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 1995,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1312"
										},
										{
											"begin": 1971,
											"end": 1995,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 1995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 1995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1679,
											"end": 2086,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1679,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 2006,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 1921,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 2062,
											"end": 2077,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1310"
										},
										{
											"begin": 2023,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2023,
											"end": 2040,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1312"
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 2023,
											"end": 2057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2057,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2023,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 2023,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2078,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 2023,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2078,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1679,
											"end": 2086,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1679,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3765,
											"end": 3797,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3765,
											"end": 3797,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 3798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3807,
											"end": 3841,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3807,
											"end": 3841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3807,
											"end": 3841,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3720,
											"end": 3738,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3720,
											"end": 3738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3545,
											"end": 3890,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2880,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2590,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 2699,
											"end": 2703,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2705,
											"end": 2707,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2685,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2685,
											"end": 2716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2747,
											"end": 2751,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2731,
											"end": 2752,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2752,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2752,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2727,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2727,
											"end": 2873,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2776,
											"end": 2789,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2789,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2789,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2789,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2814,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2814,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2776,
											"end": 2814,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2803,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2793,
											"end": 2814,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2814,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2776,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2768,
											"end": 2862,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2862,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2768,
											"end": 2862,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2768,
											"end": 2862,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2862,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4887,
											"end": 4889,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2862,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2768,
											"end": 2862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2862,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4890,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4926,
											"end": 4928,
											"name": "PUSH",
											"source": 9,
											"value": "2B"
										},
										{
											"begin": 4906,
											"end": 4924,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4906,
											"end": 4924,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 4924,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4899,
											"end": 4929,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4965,
											"end": 4999,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A2063616E6E6F74207472616E73666572206C6F636B6564207665"
										},
										{
											"begin": 4945,
											"end": 4963,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4945,
											"end": 4963,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4945,
											"end": 4963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5000,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7374656420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5009,
											"end": 5050,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5067,
											"end": 5086,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5067,
											"end": 5086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 4685,
											"end": 5092,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3765,
											"end": 3797,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3765,
											"end": 3797,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 3798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3807,
											"end": 3841,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3807,
											"end": 3841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3807,
											"end": 3841,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3720,
											"end": 3738,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3720,
											"end": 3738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3545,
											"end": 3890,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 2088,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1862,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2058,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2058,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 2088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2093,
											"end": 2279,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2093,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2207,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2202,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2184,
											"end": 2191,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2203,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2222,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2244,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2623,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2600,
											"end": 2607,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2619,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2624,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2637,
											"end": 2638,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2639,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 2679,
											"end": 2688,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2660,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2689,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2689,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2742,
											"end": 2744,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2731,
											"end": 2740,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2708,
											"end": 2746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 2958,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 2946,
											"end": 2952,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2942,
											"end": 2959,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2959,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2959,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3009,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2999,
											"end": 3005,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2996,
											"end": 3010,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 2994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3011,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3063,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 3048,
											"end": 3051,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3044,
											"end": 3064,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3042,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3065,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3088,
											"end": 3092,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3085,
											"end": 3086,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3078,
											"end": 3093,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3120,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3113,
											"end": 3114,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2757,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 4022,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3895,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 3966,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 3951,
											"end": 3954,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3947,
											"end": 3967,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3944,
											"end": 3945,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3968,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 3991,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3984,
											"end": 3985,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3977,
											"end": 3992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4011,
											"end": 4015,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4008,
											"end": 4009,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4155,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 4027,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4094,
											"end": 4103,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4094,
											"end": 4103,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4094,
											"end": 4103,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4115,
											"end": 4126,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4115,
											"end": 4126,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4115,
											"end": 4126,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4149,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4112,
											"end": 4149,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4129,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4129,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 4129,
											"end": 4147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4285,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 4160,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4234,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4234,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4234,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4246,
											"end": 4256,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4246,
											"end": 4256,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4246,
											"end": 4256,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4279,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4243,
											"end": 4279,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4259,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4259,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 4259,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4290,
											"end": 4458,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 4290,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4363,
											"end": 4372,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4363,
											"end": 4372,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4363,
											"end": 4372,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4394,
											"end": 4403,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4394,
											"end": 4403,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4427,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4427,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4391,
											"end": 4428,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4381,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4381,
											"end": 4452,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4432,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4432,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 4432,
											"end": 4450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4463,
											"end": 4680,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 4463,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4504,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4530,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4519,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 4519,
											"end": 4651,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4573,
											"end": 4583,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 4568,
											"end": 4571,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4564,
											"end": 4584,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4562,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4554,
											"end": 4585,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 4612,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 4605,
											"end": 4606,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4598,
											"end": 4613,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4636,
											"end": 4640,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4633,
											"end": 4634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4626,
											"end": 4641,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4519,
											"end": 4651,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 4519,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4665,
											"end": 4674,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4665,
											"end": 4674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4463,
											"end": 4680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/BasicVestingGovernanceToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"currentlyVested()": "f4eb90a6",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"releaseVestedTokens()": "54dd1da4",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"totalVestedReleased()": "4b8f1ef0",
							"totalVestedSupply()": "9de5a561",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"vestingDuration()": "1514617e",
							"vestingStartTime()": "a8660a78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_initialOwnerSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalVestedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vestingDurationInSeconds\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"VestedTokensReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"VestingScheduleCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentlyVested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseVestedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVestedReleased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVestedSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BasicVestingGovernanceToken.sol\":\"BasicVestingGovernanceToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/BasicVestingGovernanceToken.sol\":{\"keccak256\":\"0x3d23b43aed7fe20cfffa034828dcfab3908b40c9c5f253e99c6445b71a2d8bfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ad9833410fb0b709af8f244f3b4631f754b948b6d800ca1b67e333de008dc1f\",\"dweb:/ipfs/QmXDnXm43BPuuBiN3zaydtGHTGpFkMidE3uHjZGmQUvTkC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/BasicVestingGovernanceToken.sol:BasicVestingGovernanceToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/BasicVestingGovernanceToken.sol:BasicVestingGovernanceToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/BasicVestingGovernanceToken.sol:BasicVestingGovernanceToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/BasicVestingGovernanceToken.sol:BasicVestingGovernanceToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/BasicVestingGovernanceToken.sol:BasicVestingGovernanceToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/BasicVestingGovernanceToken.sol:BasicVestingGovernanceToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1314,
								"contract": "contracts/BasicVestingGovernanceToken.sol:BasicVestingGovernanceToken",
								"label": "totalVestedReleased",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 980,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								979
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 950,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 949,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 980,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 949,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9787:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 980,
							"src": "186:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "194:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "Context",
										"nameLocations": [
											"483:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "483:7:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "ERC20",
										"nameLocations": [
											"492:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "492:5:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 923,
							"linearizedBaseContracts": [
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "662:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "678:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "692:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "672:26:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:4",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "632:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:4"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:4"
									},
									"scope": 923,
									"src": "618:87:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1086:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1112:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 911,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "1121:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1135:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1096:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1151:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1056:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:4"
									},
									"scope": 923,
									"src": "1021:158:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 924,
							"src": "448:733:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "124:1058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 950,
							"sourceUnit": 878,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:5"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 949,
							"linearizedBaseContracts": [
								949,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 949,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 949,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 945,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 949,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 950,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							979
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 957,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 956,
												"id": 959,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 979,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 966,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 965,
												"id": 968,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 963,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 979,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 974,
												"id": 976,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 979,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1291
						]
					},
					"id": 1292,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 982,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1291,
							"linearizedBaseContracts": [
								1291
							],
							"name": "SafeMath",
							"nameLocation": "490:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "717:140:7",
										"statements": [
											{
												"id": 1012,
												"nodeType": "UncheckedBlock",
												"src": "727:124:7",
												"statements": [
													{
														"assignments": [
															995
														],
														"declarations": [
															{
																"constant": false,
																"id": 995,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1012,
																"src": "751:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 994,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 999,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 996,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "763:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 997,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "767:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1000,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "786:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1001,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "790:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1007,
														"nodeType": "IfStatement",
														"src": "782:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 993,
															"id": 1006,
															"nodeType": "Return",
															"src": "793:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1009,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "838:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1010,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 993,
														"id": 1011,
														"nodeType": "Return",
														"src": "824:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:7"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "702:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 989,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "708:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:7"
									},
									"scope": 1291,
									"src": "641:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "1078:113:7",
										"statements": [
											{
												"id": 1040,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1026,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1019,
																"src": "1116:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1027,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "1120:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1033,
														"nodeType": "IfStatement",
														"src": "1112:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1031,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1025,
															"id": 1032,
															"nodeType": "Return",
															"src": "1123:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1035,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "1168:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1036,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "1172:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1038,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1025,
														"id": 1039,
														"nodeType": "Return",
														"src": "1154:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1018:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1029:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:7"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1063:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:7"
									},
									"scope": 1291,
									"src": "1002:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "1415:417:7",
										"statements": [
											{
												"id": 1082,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1054,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "1683:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1061,
														"nodeType": "IfStatement",
														"src": "1679:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1059,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1053,
															"id": 1060,
															"nodeType": "Return",
															"src": "1691:16:7"
														}
													},
													{
														"assignments": [
															1063
														],
														"declarations": [
															{
																"constant": false,
																"id": 1063,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1082,
																"src": "1721:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1062,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1067,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1064,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1065,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "1737:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1068,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "1756:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1069,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "1760:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1071,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "1765:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1077,
														"nodeType": "IfStatement",
														"src": "1752:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1075,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1053,
															"id": 1076,
															"nodeType": "Return",
															"src": "1768:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1079,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "1813:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1080,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1053,
														"id": 1081,
														"nodeType": "Return",
														"src": "1799:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1355:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1366:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:7"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1400:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1049,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1406:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:7"
									},
									"scope": 1291,
									"src": "1339:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "2057:114:7",
										"statements": [
											{
												"id": 1110,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1096,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "2095:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1103,
														"nodeType": "IfStatement",
														"src": "2091:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1101,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1095,
															"id": 1102,
															"nodeType": "Return",
															"src": "2103:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1105,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "2148:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1106,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "2152:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1095,
														"id": 1109,
														"nodeType": "Return",
														"src": "2134:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1997:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2008:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:7"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2042:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2048:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:7"
									},
									"scope": 1291,
									"src": "1981:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "2406:114:7",
										"statements": [
											{
												"id": 1138,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "2444:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1131,
														"nodeType": "IfStatement",
														"src": "2440:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1123,
															"id": 1130,
															"nodeType": "Return",
															"src": "2452:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "2497:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "2501:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1123,
														"id": 1137,
														"nodeType": "Return",
														"src": "2483:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "2346:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "2357:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:7"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "2391:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "2397:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:7"
									},
									"scope": 1291,
									"src": "2330:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "2822:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1150,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "2839:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1151,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "2843:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1149,
												"id": 1153,
												"nodeType": "Return",
												"src": "2832:12:7"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2768:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2779:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:7"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2813:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:7"
									},
									"scope": 1291,
									"src": "2755:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "3189:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1165,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "3206:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1166,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "3210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1164,
												"id": 1168,
												"nodeType": "Return",
												"src": "3199:12:7"
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "3135:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "3146:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:7"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "3180:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:7"
									},
									"scope": 1291,
									"src": "3122:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1184,
										"nodeType": "Block",
										"src": "3532:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1180,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "3549:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1181,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "3553:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1179,
												"id": 1183,
												"nodeType": "Return",
												"src": "3542:12:7"
											}
										]
									},
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "3478:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "3489:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:7"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "3523:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:7"
									},
									"scope": 1291,
									"src": "3465:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "3917:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1195,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "3934:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1196,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "3938:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1194,
												"id": 1198,
												"nodeType": "Return",
												"src": "3927:12:7"
											}
										]
									},
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "3863:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "3874:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:7"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "3908:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:7"
									},
									"scope": 1291,
									"src": "3850:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "4466:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1210,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "4483:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1211,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "4487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1209,
												"id": 1213,
												"nodeType": "Return",
												"src": "4476:12:7"
											}
										]
									},
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4412:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4423:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:7"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4457:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:7"
									},
									"scope": 1291,
									"src": "4399:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "5054:106:7",
										"statements": [
											{
												"id": 1238,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1228,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1220,
																		"src": "5096:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1229,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1218,
																		"src": "5101:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1231,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "5104:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1227,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1233,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1234,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "5138:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1235,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "5142:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1226,
														"id": 1237,
														"nodeType": "Return",
														"src": "5131:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "4972:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "4983:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "4994:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1221,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:7"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "5045:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:7"
									},
									"scope": 1291,
									"src": "4959:201:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "5739:105:7",
										"statements": [
											{
												"id": 1263,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1253,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "5781:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1256,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1247,
																	"src": "5788:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1252,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1258,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1259,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "5822:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1260,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "5826:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1251,
														"id": 1262,
														"nodeType": "Return",
														"src": "5815:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "5657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "5668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "5679:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1246,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:7"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "5730:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:7"
									},
									"scope": 1291,
									"src": "5644:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "6585:105:7",
										"statements": [
											{
												"id": 1288,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1278,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1270,
																		"src": "6627:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1281,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "6634:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1277,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1283,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1284,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "6668:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1285,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "6672:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1276,
														"id": 1287,
														"nodeType": "Return",
														"src": "6661:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "6503:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "6514:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "6525:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1271,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:7"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "6576:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:7"
									},
									"scope": 1291,
									"src": "6490:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1292,
							"src": "482:6210:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:7"
				},
				"id": 7
			},
			"contracts/BasicVestingGovernanceToken.sol": {
				"ast": {
					"absolutePath": "contracts/BasicVestingGovernanceToken.sol",
					"exportedSymbols": {
						"BasicVestingGovernanceToken": [
							1541
						],
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						],
						"Ownable": [
							147
						],
						"SafeMath": [
							1291
						]
					},
					"id": 1542,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1293,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1542,
							"sourceUnit": 800,
							"src": "59:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1295,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1542,
							"sourceUnit": 924,
							"src": "115:74:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1542,
							"sourceUnit": 148,
							"src": "190:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1542,
							"sourceUnit": 1292,
							"src": "243:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1298,
										"name": "ERC20",
										"nameLocations": [
											"343:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "343:5:8"
									},
									"id": 1299,
									"nodeType": "InheritanceSpecifier",
									"src": "343:5:8"
								},
								{
									"baseName": {
										"id": 1300,
										"name": "ERC20Burnable",
										"nameLocations": [
											"350:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "350:13:8"
									},
									"id": 1301,
									"nodeType": "InheritanceSpecifier",
									"src": "350:13:8"
								},
								{
									"baseName": {
										"id": 1302,
										"name": "Ownable",
										"nameLocations": [
											"365:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "365:7:8"
									},
									"id": 1303,
									"nodeType": "InheritanceSpecifier",
									"src": "365:7:8"
								}
							],
							"canonicalName": "BasicVestingGovernanceToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1541,
							"linearizedBaseContracts": [
								1541,
								147,
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "BasicVestingGovernanceToken",
							"nameLocation": "312:27:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1306,
									"libraryName": {
										"id": 1304,
										"name": "SafeMath",
										"nameLocations": [
											"386:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1291,
										"src": "386:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "380:27:8",
									"typeName": {
										"id": 1305,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "399:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "a8660a78",
									"id": 1308,
									"mutability": "immutable",
									"name": "vestingStartTime",
									"nameLocation": "438:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1541,
									"src": "413:41:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1307,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "413:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1514617e",
									"id": 1310,
									"mutability": "immutable",
									"name": "vestingDuration",
									"nameLocation": "485:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1541,
									"src": "460:40:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1309,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "460:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9de5a561",
									"id": 1312,
									"mutability": "immutable",
									"name": "totalVestedSupply",
									"nameLocation": "532:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1541,
									"src": "507:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1311,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "507:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4b8f1ef0",
									"id": 1314,
									"mutability": "mutable",
									"name": "totalVestedReleased",
									"nameLocation": "571:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1541,
									"src": "556:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1313,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "556:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e8fbcdfc2a707362664a0cdec5038e3d2a2183f4d4d3747e56bfc200eda13756",
									"id": 1322,
									"name": "VestingScheduleCreated",
									"nameLocation": "604:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "635:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "627:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "656:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "648:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"indexed": false,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "675:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "667:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:58:8"
									},
									"src": "598:87:8"
								},
								{
									"anonymous": false,
									"eventSelector": "6bc5063c7239b75c8bf325a2a2238f726fada322163996bb6c93d5594fb119f0",
									"id": 1328,
									"name": "VestedTokensReleased",
									"nameLocation": "696:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "733:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "717:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "745:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "737:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "716:36:8"
									},
									"src": "690:63:8"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "1029:643:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1351,
																"name": "_initialOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1340,
																"src": "1048:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1073:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1065:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1352,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1065:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1065:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1048:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a20696e697469616c206f776e657220697320746865207a65726f2061646472657373",
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1077:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c4e3f56c63b99e5f1e017a620bd5f0fa05418f38cd7049c2efd2169eacdd91c",
																"typeString": "literal_string \"Ownable: initial owner is the zero address\""
															},
															"value": "Ownable: initial owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c4e3f56c63b99e5f1e017a620bd5f0fa05418f38cd7049c2efd2169eacdd91c",
																"typeString": "literal_string \"Ownable: initial owner is the zero address\""
															}
														],
														"id": 1350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1040:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1040:82:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1359,
												"nodeType": "ExpressionStatement",
												"src": "1040:82:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1361,
																"name": "_vestingDurationInSeconds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "1140:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1168:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1140:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e673a206475726174696f6e206d7573742062652067726561746572207468616e207a65726f",
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1171:45:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da95245a3a691f5cc8d6f7432704e2d6fdf5a5f9d9cd50381124f13d88a34d08",
																"typeString": "literal_string \"Vesting: duration must be greater than zero\""
															},
															"value": "Vesting: duration must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da95245a3a691f5cc8d6f7432704e2d6fdf5a5f9d9cd50381124f13d88a34d08",
																"typeString": "literal_string \"Vesting: duration must be greater than zero\""
															}
														],
														"id": 1360,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1132:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1132:85:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "1132:85:8"
											},
											{
												"expression": {
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1367,
														"name": "vestingStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1308,
														"src": "1228:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1368,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1247:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1253:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1247:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1228:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "1228:34:8"
											},
											{
												"expression": {
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1372,
														"name": "vestingDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "1272:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1373,
														"name": "_vestingDurationInSeconds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "1290:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1272:43:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "1272:43:8"
											},
											{
												"expression": {
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1376,
														"name": "totalVestedSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "1325:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1377,
														"name": "_totalVestedSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "1345:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1325:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "1325:38:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1380,
														"name": "_initialOwnerSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "1378:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1400:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1378:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1389,
												"nodeType": "IfStatement",
												"src": "1374:95:8",
												"trueBody": {
													"id": 1388,
													"nodeType": "Block",
													"src": "1403:66:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1384,
																		"name": "_initialOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "1423:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1385,
																		"name": "_initialOwnerSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "1438:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1383,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "1417:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1417:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1387,
															"nodeType": "ExpressionStatement",
															"src": "1417:41:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1390,
														"name": "_totalVestedSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "1483:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1504:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1483:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1402,
												"nodeType": "IfStatement",
												"src": "1479:93:8",
												"trueBody": {
													"id": 1401,
													"nodeType": "Block",
													"src": "1507:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1396,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1535:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_BasicVestingGovernanceToken_$1541",
																					"typeString": "contract BasicVestingGovernanceToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_BasicVestingGovernanceToken_$1541",
																					"typeString": "contract BasicVestingGovernanceToken"
																				}
																			],
																			"id": 1395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1527:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1394,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1527:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1527:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1398,
																		"name": "_totalVestedSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1336,
																		"src": "1542:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1393,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "1521:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1521:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1400,
															"nodeType": "ExpressionStatement",
															"src": "1521:40:8"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1404,
															"name": "_totalVestedSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "1610:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1405,
															"name": "vestingStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "1630:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1406,
															"name": "vestingDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "1648:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1403,
														"name": "VestingScheduleCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "1587:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1587:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "EmitStatement",
												"src": "1582:82:8"
											}
										]
									},
									"id": 1410,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1343,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1330,
													"src": "990:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1344,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1332,
													"src": "997:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1345,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1342,
												"name": "ERC20",
												"nameLocations": [
													"984:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "984:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "984:21:8"
										},
										{
											"arguments": [
												{
													"id": 1347,
													"name": "_initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1340,
													"src": "1014:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1348,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1346,
												"name": "Ownable",
												"nameLocations": [
													"1006:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1006:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1006:22:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "794:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "780:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1329,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "780:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "823:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "809:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1331,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "809:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "_initialOwnerSupply",
												"nameLocation": "848:19:8",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "840:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "_totalVestedSupply",
												"nameLocation": "885:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "877:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "_vestingDurationInSeconds",
												"nameLocation": "921:25:8",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "913:33:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "_initialOwner",
												"nameLocation": "964:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "956:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "770:213:8"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1029:0:8"
									},
									"scope": 1541,
									"src": "759:913:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1450,
										"nodeType": "Block",
										"src": "1736:350:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1415,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1751:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1757:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1751:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1417,
															"name": "vestingStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "1769:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1751:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1419,
															"name": "vestingDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "1789:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1808:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1789:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1751:58:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1426,
												"nodeType": "IfStatement",
												"src": "1747:97:8",
												"trueBody": {
													"id": 1425,
													"nodeType": "Block",
													"src": "1811:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1832:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1414,
															"id": 1424,
															"nodeType": "Return",
															"src": "1825:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													1428
												],
												"declarations": [
													{
														"constant": false,
														"id": 1428,
														"mutability": "mutable",
														"name": "timeElapsed",
														"nameLocation": "1859:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1450,
														"src": "1854:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1427,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1854:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1434,
												"initialValue": {
													"arguments": [
														{
															"id": 1432,
															"name": "vestingStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "1893:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1429,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1873:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1879:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1873:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1889:3:8",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1170,
														"src": "1873:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1873:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1854:56:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1435,
														"name": "timeElapsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "1925:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1436,
														"name": "vestingDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "1940:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1925:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1441,
												"nodeType": "IfStatement",
												"src": "1921:85:8",
												"trueBody": {
													"id": 1440,
													"nodeType": "Block",
													"src": "1957:49:8",
													"statements": [
														{
															"expression": {
																"id": 1438,
																"name": "totalVestedSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1312,
																"src": "1978:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1414,
															"id": 1439,
															"nodeType": "Return",
															"src": "1971:24:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1447,
															"name": "vestingDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "2062:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1444,
																	"name": "timeElapsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1428,
																	"src": "2045:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1442,
																	"name": "totalVestedSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1312,
																	"src": "2023:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2041:3:8",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1185,
																"src": "2023:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2023:34:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2058:3:8",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1200,
														"src": "2023:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2023:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1414,
												"id": 1449,
												"nodeType": "Return",
												"src": "2016:62:8"
											}
										]
									},
									"functionSelector": "f4eb90a6",
									"id": 1451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "currentlyVested",
									"nameLocation": "1688:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1703:2:8"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "1727:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1727:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:9:8"
									},
									"scope": 1541,
									"src": "1679:407:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1498,
										"nodeType": "Block",
										"src": "2140:443:8",
										"statements": [
											{
												"assignments": [
													1457
												],
												"declarations": [
													{
														"constant": false,
														"id": 1457,
														"mutability": "mutable",
														"name": "totalVestedAmount",
														"nameLocation": "2158:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 1498,
														"src": "2150:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1456,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2150:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1460,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1458,
														"name": "currentlyVested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "2178:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2178:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2150:45:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1462,
																"name": "totalVestedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "2214:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1463,
																"name": "totalVestedReleased",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1314,
																"src": "2234:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2214:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e673a206e6f206e657720746f6b656e73206861766520766573746564",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2255:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_75366354ca8794f1161f0ede5d8d635aea60f78a94a51ba9176fdc23d5ad11b9",
																"typeString": "literal_string \"Vesting: no new tokens have vested\""
															},
															"value": "Vesting: no new tokens have vested"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_75366354ca8794f1161f0ede5d8d635aea60f78a94a51ba9176fdc23d5ad11b9",
																"typeString": "literal_string \"Vesting: no new tokens have vested\""
															}
														],
														"id": 1461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2206:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2206:86:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "2206:86:8"
											},
											{
												"assignments": [
													1469
												],
												"declarations": [
													{
														"constant": false,
														"id": 1469,
														"mutability": "mutable",
														"name": "amountToRelease",
														"nameLocation": "2311:15:8",
														"nodeType": "VariableDeclaration",
														"scope": 1498,
														"src": "2303:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1468,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2303:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1474,
												"initialValue": {
													"arguments": [
														{
															"id": 1472,
															"name": "totalVestedReleased",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "2351:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1470,
															"name": "totalVestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "2329:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2347:3:8",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1170,
														"src": "2329:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2329:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2303:68:8"
											},
											{
												"expression": {
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1475,
														"name": "totalVestedReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "2382:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1478,
																"name": "amountToRelease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "2428:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1476,
																"name": "totalVestedReleased",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1314,
																"src": "2404:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2424:3:8",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1155,
															"src": "2404:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2404:40:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2382:62:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "2382:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1485,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2473:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BasicVestingGovernanceToken_$1541",
																		"typeString": "contract BasicVestingGovernanceToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BasicVestingGovernanceToken_$1541",
																		"typeString": "contract BasicVestingGovernanceToken"
																	}
																],
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2465:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1483,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2465:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2465:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1487,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "2480:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2480:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1489,
															"name": "amountToRelease",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "2489:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1482,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2455:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2455:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "2455:50:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1493,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "2551:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2551:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1495,
															"name": "amountToRelease",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "2560:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1492,
														"name": "VestedTokensReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "2530:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2530:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1497,
												"nodeType": "EmitStatement",
												"src": "2525:51:8"
											}
										]
									},
									"functionSelector": "54dd1da4",
									"id": 1499,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1454,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1453,
												"name": "onlyOwner",
												"nameLocations": [
													"2130:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2130:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2130:9:8"
										}
									],
									"name": "releaseVestedTokens",
									"nameLocation": "2101:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2120:2:8"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2140:0:8"
									},
									"scope": 1541,
									"src": "2092:491:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										606
									],
									"body": {
										"id": 1539,
										"nodeType": "Block",
										"src": "2674:206:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1512,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "2699:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1513,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "2705:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1514,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "2709:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1509,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2685:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_BasicVestingGovernanceToken_$1541_$",
																"typeString": "type(contract super BasicVestingGovernanceToken)"
															}
														},
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2691:7:8",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "2685:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2685:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1516,
												"nodeType": "ExpressionStatement",
												"src": "2685:31:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1517,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "2731:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 1520,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2747:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_BasicVestingGovernanceToken_$1541",
																	"typeString": "contract BasicVestingGovernanceToken"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_BasicVestingGovernanceToken_$1541",
																	"typeString": "contract BasicVestingGovernanceToken"
																}
															],
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2739:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1518,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2739:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2739:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2731:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1538,
												"nodeType": "IfStatement",
												"src": "2727:146:8",
												"trueBody": {
													"id": 1537,
													"nodeType": "Block",
													"src": "2754:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1524,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1503,
																				"src": "2776:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1525,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 67,
																					"src": "2782:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2782:7:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "2776:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1528,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2793:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1529,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2797:6:8",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2793:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1530,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 67,
																					"src": "2807:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2807:7:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "2793:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2776:38:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a2063616e6e6f74207472616e73666572206c6f636b65642076657374656420746f6b656e73",
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2816:45:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b776372014ba1d8e41c23ff5d54fb0f087b4c983ecc3b5ff5f98a64e6a6cf785",
																			"typeString": "literal_string \"ERC20: cannot transfer locked vested tokens\""
																		},
																		"value": "ERC20: cannot transfer locked vested tokens"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b776372014ba1d8e41c23ff5d54fb0f087b4c983ecc3b5ff5f98a64e6a6cf785",
																			"typeString": "literal_string \"ERC20: cannot transfer locked vested tokens\""
																		}
																	],
																	"id": 1523,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2768:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2768:94:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1536,
															"nodeType": "ExpressionStatement",
															"src": "2768:94:8"
														}
													]
												}
											}
										]
									},
									"id": 1540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2599:7:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1507,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2666:8:8"
									},
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2615:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "2607:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2629:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "2621:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2621:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2641:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "2633:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2633:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:42:8"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2674:0:8"
									},
									"scope": 1541,
									"src": "2590:290:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1542,
							"src": "303:2581:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								1322,
								1328
							]
						}
					],
					"src": "32:2852:8"
				},
				"id": 8
			}
		}
	}
}